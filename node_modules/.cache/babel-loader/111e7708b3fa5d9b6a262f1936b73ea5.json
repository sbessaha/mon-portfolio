{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\"; // Styles\n\nimport \"./VAppBar.css\"; // Components\n\nimport { makeVToolbarProps, VToolbar } from \"../VToolbar/VToolbar.mjs\"; // Composables\n\nimport { makeLayoutItemProps, useLayoutItem } from \"../../composables/layout.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeScrollProps, useScroll } from \"../../composables/scroll.mjs\";\nimport { useSsrBoot } from \"../../composables/ssrBoot.mjs\";\nimport { useToggleScope } from \"../../composables/toggleScope.mjs\"; // Utilities\n\nimport { computed, ref, shallowRef, toRef, watchEffect } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const makeVAppBarProps = propsFactory({\n  scrollBehavior: String,\n  modelValue: {\n    type: Boolean,\n    default: true\n  },\n  location: {\n    type: String,\n    default: 'top',\n    validator: value => ['top', 'bottom'].includes(value)\n  },\n  ...makeVToolbarProps(),\n  ...makeLayoutItemProps(),\n  ...makeScrollProps(),\n  height: {\n    type: [Number, String],\n    default: 64\n  }\n}, 'VAppBar');\nexport const VAppBar = genericComponent()({\n  name: 'VAppBar',\n  props: makeVAppBarProps(),\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const vToolbarRef = ref();\n    const isActive = useProxiedModel(props, 'modelValue');\n    const scrollBehavior = computed(() => {\n      const behavior = new Set(props.scrollBehavior?.split(' ') ?? []);\n      return {\n        hide: behavior.has('hide'),\n        fullyHide: behavior.has('fully-hide'),\n        inverted: behavior.has('inverted'),\n        collapse: behavior.has('collapse'),\n        elevate: behavior.has('elevate'),\n        fadeImage: behavior.has('fade-image') // shrink: behavior.has('shrink'),\n\n      };\n    });\n    const canScroll = computed(() => {\n      const behavior = scrollBehavior.value;\n      return behavior.hide || behavior.fullyHide || behavior.inverted || behavior.collapse || behavior.elevate || behavior.fadeImage || // behavior.shrink ||\n      !isActive.value;\n    });\n    const {\n      currentScroll,\n      scrollThreshold,\n      isScrollingUp,\n      scrollRatio\n    } = useScroll(props, {\n      canScroll\n    });\n    const canHide = computed(() => scrollBehavior.value.hide || scrollBehavior.value.fullyHide);\n    const isCollapsed = computed(() => props.collapse || scrollBehavior.value.collapse && (scrollBehavior.value.inverted ? scrollRatio.value > 0 : scrollRatio.value === 0));\n    const isFlat = computed(() => props.flat || scrollBehavior.value.fullyHide && !isActive.value || scrollBehavior.value.elevate && (scrollBehavior.value.inverted ? currentScroll.value > 0 : currentScroll.value === 0));\n    const opacity = computed(() => scrollBehavior.value.fadeImage ? scrollBehavior.value.inverted ? 1 - scrollRatio.value : scrollRatio.value : undefined);\n    const height = computed(() => {\n      if (scrollBehavior.value.hide && scrollBehavior.value.inverted) return 0;\n      const height = vToolbarRef.value?.contentHeight ?? 0;\n      const extensionHeight = vToolbarRef.value?.extensionHeight ?? 0;\n      if (!canHide.value) return height + extensionHeight;\n      return currentScroll.value < scrollThreshold.value || scrollBehavior.value.fullyHide ? height + extensionHeight : height;\n    });\n    useToggleScope(computed(() => !!props.scrollBehavior), () => {\n      watchEffect(() => {\n        if (canHide.value) {\n          if (scrollBehavior.value.inverted) {\n            isActive.value = currentScroll.value > scrollThreshold.value;\n          } else {\n            isActive.value = isScrollingUp.value || currentScroll.value < scrollThreshold.value;\n          }\n        } else {\n          isActive.value = true;\n        }\n      });\n    });\n    const {\n      ssrBootStyles\n    } = useSsrBoot();\n    const {\n      layoutItemStyles\n    } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: toRef(props, 'location'),\n      layoutSize: height,\n      elementSize: shallowRef(undefined),\n      active: isActive,\n      absolute: toRef(props, 'absolute')\n    });\n    useRender(() => {\n      const toolbarProps = VToolbar.filterProps(props);\n      return _createVNode(VToolbar, _mergeProps({\n        \"ref\": vToolbarRef,\n        \"class\": ['v-app-bar', {\n          'v-app-bar--bottom': props.location === 'bottom'\n        }, props.class],\n        \"style\": [{ ...layoutItemStyles.value,\n          '--v-toolbar-image-opacity': opacity.value,\n          height: undefined,\n          ...ssrBootStyles.value\n        }, props.style]\n      }, toolbarProps, {\n        \"collapse\": isCollapsed.value,\n        \"flat\": isFlat.value\n      }), slots);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["makeVToolbarProps","VToolbar","makeLayoutItemProps","useLayoutItem","useProxiedModel","makeScrollProps","useScroll","useSsrBoot","useToggleScope","computed","ref","shallowRef","toRef","watchEffect","genericComponent","propsFactory","useRender","makeVAppBarProps","scrollBehavior","String","modelValue","type","Boolean","default","location","validator","value","includes","height","Number","VAppBar","name","props","emits","setup","_ref","slots","vToolbarRef","isActive","behavior","Set","split","hide","has","fullyHide","inverted","collapse","elevate","fadeImage","canScroll","currentScroll","scrollThreshold","isScrollingUp","scrollRatio","canHide","isCollapsed","isFlat","flat","opacity","undefined","contentHeight","extensionHeight","ssrBootStyles","layoutItemStyles","id","order","parseInt","position","layoutSize","elementSize","active","absolute","toolbarProps","filterProps","class","style"],"sources":["../../../src/components/VAppBar/VAppBar.tsx"],"sourcesContent":["// Styles\nimport './VAppBar.sass'\n\n// Components\nimport { makeVToolbarProps, VToolbar } from '@/components/VToolbar/VToolbar'\n\n// Composables\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeScrollProps, useScroll } from '@/composables/scroll'\nimport { useSsrBoot } from '@/composables/ssrBoot'\nimport { useToggleScope } from '@/composables/toggleScope'\n\n// Utilities\nimport { computed, ref, shallowRef, toRef, watchEffect } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VToolbarSlots } from '@/components/VToolbar/VToolbar'\n\nexport const makeVAppBarProps = propsFactory({\n  scrollBehavior: String as PropType<'hide' | 'fully-hide' | 'inverted' | 'collapse' | 'elevate' | 'fade-image' | (string & {})>,\n  modelValue: {\n    type: Boolean,\n    default: true,\n  },\n  location: {\n    type: String as PropType<'top' | 'bottom'>,\n    default: 'top',\n    validator: (value: any) => ['top', 'bottom'].includes(value),\n  },\n\n  ...makeVToolbarProps(),\n  ...makeLayoutItemProps(),\n  ...makeScrollProps(),\n\n  height: {\n    type: [Number, String],\n    default: 64,\n  },\n}, 'VAppBar')\n\nexport const VAppBar = genericComponent<VToolbarSlots>()({\n  name: 'VAppBar',\n\n  props: makeVAppBarProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const vToolbarRef = ref<VToolbar>()\n    const isActive = useProxiedModel(props, 'modelValue')\n    const scrollBehavior = computed(() => {\n      const behavior = new Set(props.scrollBehavior?.split(' ') ?? [])\n      return {\n        hide: behavior.has('hide'),\n        fullyHide: behavior.has('fully-hide'),\n        inverted: behavior.has('inverted'),\n        collapse: behavior.has('collapse'),\n        elevate: behavior.has('elevate'),\n        fadeImage: behavior.has('fade-image'),\n        // shrink: behavior.has('shrink'),\n      }\n    })\n    const canScroll = computed(() => {\n      const behavior = scrollBehavior.value\n      return (\n        behavior.hide ||\n        behavior.fullyHide ||\n        behavior.inverted ||\n        behavior.collapse ||\n        behavior.elevate ||\n        behavior.fadeImage ||\n        // behavior.shrink ||\n        !isActive.value\n      )\n    })\n    const {\n      currentScroll,\n      scrollThreshold,\n      isScrollingUp,\n      scrollRatio,\n    } = useScroll(props, { canScroll })\n\n    const canHide = computed(() => (\n      scrollBehavior.value.hide ||\n      scrollBehavior.value.fullyHide\n    ))\n    const isCollapsed = computed(() => props.collapse || (\n      scrollBehavior.value.collapse &&\n      (scrollBehavior.value.inverted ? scrollRatio.value > 0 : scrollRatio.value === 0)\n    ))\n    const isFlat = computed(() => props.flat || (\n      scrollBehavior.value.fullyHide &&\n      !isActive.value\n    ) || (\n      scrollBehavior.value.elevate &&\n      (scrollBehavior.value.inverted ? currentScroll.value > 0 : currentScroll.value === 0)\n    ))\n    const opacity = computed(() => (\n      scrollBehavior.value.fadeImage\n        ? (scrollBehavior.value.inverted ? 1 - scrollRatio.value : scrollRatio.value)\n        : undefined\n    ))\n    const height = computed(() => {\n      if (scrollBehavior.value.hide && scrollBehavior.value.inverted) return 0\n\n      const height = vToolbarRef.value?.contentHeight ?? 0\n      const extensionHeight = vToolbarRef.value?.extensionHeight ?? 0\n\n      if (!canHide.value) return (height + extensionHeight)\n\n      return currentScroll.value < scrollThreshold.value || scrollBehavior.value.fullyHide\n        ? (height + extensionHeight)\n        : height\n    })\n\n    useToggleScope(computed(() => !!props.scrollBehavior), () => {\n      watchEffect(() => {\n        if (canHide.value) {\n          if (scrollBehavior.value.inverted) {\n            isActive.value = currentScroll.value > scrollThreshold.value\n          } else {\n            isActive.value = isScrollingUp.value || (currentScroll.value < scrollThreshold.value)\n          }\n        } else {\n          isActive.value = true\n        }\n      })\n    })\n\n    const { ssrBootStyles } = useSsrBoot()\n    const { layoutItemStyles } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: toRef(props, 'location'),\n      layoutSize: height,\n      elementSize: shallowRef(undefined),\n      active: isActive,\n      absolute: toRef(props, 'absolute'),\n    })\n\n    useRender(() => {\n      const toolbarProps = VToolbar.filterProps(props)\n\n      return (\n        <VToolbar\n          ref={ vToolbarRef }\n          class={[\n            'v-app-bar',\n            {\n              'v-app-bar--bottom': props.location === 'bottom',\n            },\n            props.class,\n          ]}\n          style={[\n            {\n              ...layoutItemStyles.value,\n              '--v-toolbar-image-opacity': opacity.value,\n              height: undefined,\n              ...ssrBootStyles.value,\n            },\n            props.style,\n          ]}\n          { ...toolbarProps }\n          collapse={ isCollapsed.value }\n          flat={ isFlat.value }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VAppBar = InstanceType<typeof VAppBar>\n"]},"metadata":{},"sourceType":"module"}