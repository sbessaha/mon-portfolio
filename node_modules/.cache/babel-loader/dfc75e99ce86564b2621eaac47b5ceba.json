{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n// Utilities\nimport { getCurrentInstance as _getCurrentInstance } from 'vue';\nimport { toKebabCase } from \"./helpers.mjs\"; // Types\n\nexport function getCurrentInstance(name, message) {\n  const vm = _getCurrentInstance();\n\n  if (!vm) {\n    throw new Error(`[Vuetify] ${name} ${message || 'must be called from inside a setup function'}`);\n  }\n\n  return vm;\n}\nexport function getCurrentInstanceName() {\n  let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'composables';\n  const vm = getCurrentInstance(name).type;\n  return toKebabCase(vm?.aliasName || vm?.name);\n}\nlet _uid = 0;\n\nlet _map = new WeakMap();\n\nexport function getUid() {\n  const vm = getCurrentInstance('getUid');\n  if (_map.has(vm)) return _map.get(vm);else {\n    const uid = _uid++;\n\n    _map.set(vm, uid);\n\n    return uid;\n  }\n}\n\ngetUid.reset = () => {\n  _uid = 0;\n  _map = new WeakMap();\n};","map":{"version":3,"mappings":";AAAA;AACA,SAASA,kBAAkB,IAAIC,mBAA/B,QAA0D,KAA1D;AAA+D,SACtDC,WADsD,QAC3C,eAD2C,C,CAG/D;;AAGA,OAAO,SAASF,kBAAT,CAA6BG,IAA7B,EAA2CC,OAA3C,EAA6D;EAClE,MAAMC,EAAE,GAAGJ,mBAAmB,EAA9B;;EAEA,IAAI,CAACI,EAAL,EAAS;IACP,MAAM,IAAIC,KAAJ,CAAU,aAAaH,IAAI,IAAIC,OAAO,IAAI,6CAA6C,EAAvF,CAAN;EACF;;EAEA,OAAOC,EAAP;AACF;AAEA,OAAO,SAASE,sBAAT,GAAuD;EAAA,IAAtBJ,IAAI,uEAAG,aAAe;EAC5D,MAAME,EAAE,GAAGL,kBAAkB,CAACG,IAAD,CAAlBH,CAAyBQ,IAApC;EAEA,OAAON,WAAW,CAACG,EAAE,EAAEI,SAAJJ,IAAiBA,EAAE,EAAEF,IAAtB,CAAlB;AACF;AAEA,IAAIO,IAAI,GAAG,CAAX;;AACA,IAAIC,IAAI,GAAG,IAAIC,OAAJ,EAAX;;AACA,OAAO,SAASC,MAAT,GAAmB;EACxB,MAAMR,EAAE,GAAGL,kBAAkB,CAAC,QAAD,CAA7B;EAEA,IAAIW,IAAI,CAACG,GAALH,CAASN,EAATM,CAAJ,EAAkB,OAAOA,IAAI,CAACI,GAALJ,CAASN,EAATM,CAAP,CAAlB,KACK;IACH,MAAMK,GAAG,GAAGN,IAAI,EAAhB;;IACAC,IAAI,CAACM,GAALN,CAASN,EAATM,EAAaK,GAAbL;;IACA,OAAOK,GAAP;EACF;AACF;;AACAH,MAAM,CAACK,KAAPL,GAAe,MAAM;EACnBH,IAAI,GAAG,CAAPA;EACAC,IAAI,GAAG,IAAIC,OAAJ,EAAPD;AACD,CAHDE","names":["getCurrentInstance","_getCurrentInstance","toKebabCase","name","message","vm","Error","getCurrentInstanceName","type","aliasName","_uid","_map","WeakMap","getUid","has","get","uid","set","reset"],"sources":["../../src/util/getCurrentInstance.ts"],"sourcesContent":["// Utilities\nimport { getCurrentInstance as _getCurrentInstance } from 'vue'\nimport { toKebabCase } from '@/util/helpers'\n\n// Types\nimport type { ComponentInternalInstance } from 'vue'\n\nexport function getCurrentInstance (name: string, message?: string) {\n  const vm = _getCurrentInstance()\n\n  if (!vm) {\n    throw new Error(`[Vuetify] ${name} ${message || 'must be called from inside a setup function'}`)\n  }\n\n  return vm\n}\n\nexport function getCurrentInstanceName (name = 'composables') {\n  const vm = getCurrentInstance(name).type\n\n  return toKebabCase(vm?.aliasName || vm?.name)\n}\n\nlet _uid = 0\nlet _map = new WeakMap<ComponentInternalInstance, number>()\nexport function getUid () {\n  const vm = getCurrentInstance('getUid')\n\n  if (_map.has(vm)) return _map.get(vm)!\n  else {\n    const uid = _uid++\n    _map.set(vm, uid)\n    return uid\n  }\n}\ngetUid.reset = () => {\n  _uid = 0\n  _map = new WeakMap()\n}\n"]},"metadata":{},"sourceType":"module"}