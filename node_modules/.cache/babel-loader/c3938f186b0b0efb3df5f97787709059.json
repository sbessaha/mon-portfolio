{"ast":null,"code":"import { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VToolbar.css\"; // Components\n\nimport { VToolbarTitle } from \"./VToolbarTitle.mjs\";\nimport { VExpandTransition } from \"../transitions/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\n\nimport { computed, shallowRef, toRef } from 'vue';\nimport { convertToUnit, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\n\nconst allowedDensities = [null, 'prominent', 'default', 'comfortable', 'compact'];\nexport const makeVToolbarProps = propsFactory({\n  absolute: Boolean,\n  collapse: Boolean,\n  color: String,\n  density: {\n    type: String,\n    default: 'default',\n    validator: v => allowedDensities.includes(v)\n  },\n  extended: Boolean,\n  extensionHeight: {\n    type: [Number, String],\n    default: 48\n  },\n  flat: Boolean,\n  floating: Boolean,\n  height: {\n    type: [Number, String],\n    default: 64\n  },\n  image: String,\n  title: String,\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({\n    tag: 'header'\n  }),\n  ...makeThemeProps()\n}, 'VToolbar');\nexport const VToolbar = genericComponent()({\n  name: 'VToolbar',\n  props: makeVToolbarProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      rtlClasses\n    } = useRtl();\n    const isExtended = shallowRef(!!(props.extended || slots.extension?.()));\n    const contentHeight = computed(() => parseInt(Number(props.height) + (props.density === 'prominent' ? Number(props.height) : 0) - (props.density === 'comfortable' ? 8 : 0) - (props.density === 'compact' ? 16 : 0), 10));\n    const extensionHeight = computed(() => isExtended.value ? parseInt(Number(props.extensionHeight) + (props.density === 'prominent' ? Number(props.extensionHeight) : 0) - (props.density === 'comfortable' ? 4 : 0) - (props.density === 'compact' ? 8 : 0), 10) : 0);\n    provideDefaults({\n      VBtn: {\n        variant: 'text'\n      }\n    });\n    useRender(() => {\n      const hasTitle = !!(props.title || slots.title);\n      const hasImage = !!(slots.image || props.image);\n      const extension = slots.extension?.();\n      isExtended.value = !!(props.extended || extension);\n      return _createVNode(props.tag, {\n        \"class\": ['v-toolbar', {\n          'v-toolbar--absolute': props.absolute,\n          'v-toolbar--collapse': props.collapse,\n          'v-toolbar--flat': props.flat,\n          'v-toolbar--floating': props.floating,\n          [`v-toolbar--density-${props.density}`]: true\n        }, backgroundColorClasses.value, borderClasses.value, elevationClasses.value, roundedClasses.value, themeClasses.value, rtlClasses.value, props.class],\n        \"style\": [backgroundColorStyles.value, props.style]\n      }, {\n        default: () => [hasImage && _createVNode(\"div\", {\n          \"key\": \"image\",\n          \"class\": \"v-toolbar__image\"\n        }, [!slots.image ? _createVNode(VImg, {\n          \"key\": \"image-img\",\n          \"cover\": true,\n          \"src\": props.image\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"image-defaults\",\n          \"disabled\": !props.image,\n          \"defaults\": {\n            VImg: {\n              cover: true,\n              src: props.image\n            }\n          }\n        }, slots.image)]), _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VTabs: {\n              height: convertToUnit(contentHeight.value)\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-toolbar__content\",\n            \"style\": {\n              height: convertToUnit(contentHeight.value)\n            }\n          }, [slots.prepend && _createVNode(\"div\", {\n            \"class\": \"v-toolbar__prepend\"\n          }, [slots.prepend?.()]), hasTitle && _createVNode(VToolbarTitle, {\n            \"key\": \"title\",\n            \"text\": props.title\n          }, {\n            text: slots.title\n          }), slots.default?.(), slots.append && _createVNode(\"div\", {\n            \"class\": \"v-toolbar__append\"\n          }, [slots.append?.()])])]\n        }), _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VTabs: {\n              height: convertToUnit(extensionHeight.value)\n            }\n          }\n        }, {\n          default: () => [_createVNode(VExpandTransition, null, {\n            default: () => [isExtended.value && _createVNode(\"div\", {\n              \"class\": \"v-toolbar__extension\",\n              \"style\": {\n                height: convertToUnit(extensionHeight.value)\n              }\n            }, [extension])]\n          })]\n        })]\n      });\n    });\n    return {\n      contentHeight,\n      extensionHeight\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VToolbarTitle","VExpandTransition","VDefaultsProvider","VImg","makeBorderProps","useBorder","useBackgroundColor","makeComponentProps","provideDefaults","makeElevationProps","useElevation","useRtl","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","computed","shallowRef","toRef","convertToUnit","genericComponent","propsFactory","useRender","allowedDensities","makeVToolbarProps","absolute","Boolean","collapse","color","String","density","type","default","validator","v","includes","extended","extensionHeight","Number","flat","floating","height","image","title","tag","VToolbar","name","props","setup","_ref","slots","backgroundColorClasses","backgroundColorStyles","borderClasses","elevationClasses","roundedClasses","themeClasses","rtlClasses","isExtended","extension","contentHeight","parseInt","value","VBtn","variant","hasTitle","hasImage","class","style","_createVNode","cover","src","VTabs","prepend","text","append"],"sources":["../../../src/components/VToolbar/VToolbar.tsx"],"sourcesContent":["// Styles\nimport './VToolbar.sass'\n\n// Components\nimport { VToolbarTitle } from './VToolbarTitle'\nimport { VExpandTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { useRtl } from '@/composables/locale'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, shallowRef, toRef } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst allowedDensities = [null, 'prominent', 'default', 'comfortable', 'compact'] as const\n\nexport type Density = null | 'prominent' | 'default' | 'comfortable' | 'compact'\n\nexport const makeVToolbarProps = propsFactory({\n  absolute: Boolean,\n  collapse: Boolean,\n  color: String,\n  density: {\n    type: String as PropType<Density>,\n    default: 'default',\n    validator: (v: any) => allowedDensities.includes(v),\n  },\n  extended: Boolean,\n  extensionHeight: {\n    type: [Number, String],\n    default: 48,\n  },\n  flat: Boolean,\n  floating: Boolean,\n  height: {\n    type: [Number, String],\n    default: 64,\n  },\n  image: String,\n  title: String,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeElevationProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'header' }),\n  ...makeThemeProps(),\n}, 'VToolbar')\n\nexport type VToolbarSlots = {\n  default: never\n  image: never\n  prepend: never\n  append: never\n  title: never\n  extension: never\n}\n\nexport const VToolbar = genericComponent<VToolbarSlots>()({\n  name: 'VToolbar',\n\n  props: makeVToolbarProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { borderClasses } = useBorder(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { themeClasses } = provideTheme(props)\n    const { rtlClasses } = useRtl()\n\n    const isExtended = shallowRef(!!(props.extended || slots.extension?.()))\n    const contentHeight = computed(() => parseInt((\n      Number(props.height) +\n      (props.density === 'prominent' ? Number(props.height) : 0) -\n      (props.density === 'comfortable' ? 8 : 0) -\n      (props.density === 'compact' ? 16 : 0)\n    ), 10))\n    const extensionHeight = computed(() => isExtended.value\n      ? parseInt((\n        Number(props.extensionHeight) +\n        (props.density === 'prominent' ? Number(props.extensionHeight) : 0) -\n        (props.density === 'comfortable' ? 4 : 0) -\n        (props.density === 'compact' ? 8 : 0)\n      ), 10)\n      : 0\n    )\n\n    provideDefaults({\n      VBtn: {\n        variant: 'text',\n      },\n    })\n\n    useRender(() => {\n      const hasTitle = !!(props.title || slots.title)\n      const hasImage = !!(slots.image || props.image)\n\n      const extension = slots.extension?.()\n      isExtended.value = !!(props.extended || extension)\n\n      return (\n        <props.tag\n          class={[\n            'v-toolbar',\n            {\n              'v-toolbar--absolute': props.absolute,\n              'v-toolbar--collapse': props.collapse,\n              'v-toolbar--flat': props.flat,\n              'v-toolbar--floating': props.floating,\n              [`v-toolbar--density-${props.density}`]: true,\n            },\n            backgroundColorClasses.value,\n            borderClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            themeClasses.value,\n            rtlClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n        >\n          { hasImage && (\n            <div key=\"image\" class=\"v-toolbar__image\">\n              { !slots.image ? (\n                <VImg\n                  key=\"image-img\"\n                  cover\n                  src={ props.image }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"image-defaults\"\n                  disabled={ !props.image }\n                  defaults={{\n                    VImg: {\n                      cover: true,\n                      src: props.image,\n                    },\n                  }}\n                  v-slots:default={ slots.image }\n                />\n              )}\n            </div>\n          )}\n\n          <VDefaultsProvider\n            defaults={{\n              VTabs: {\n                height: convertToUnit(contentHeight.value),\n              },\n            }}\n          >\n            <div\n              class=\"v-toolbar__content\"\n              style={{ height: convertToUnit(contentHeight.value) }}\n            >\n              { slots.prepend && (\n                <div class=\"v-toolbar__prepend\">\n                  { slots.prepend?.() }\n                </div>\n              )}\n\n              { hasTitle && (\n                <VToolbarTitle key=\"title\" text={ props.title }>\n                  {{ text: slots.title }}\n                </VToolbarTitle>\n              )}\n\n              { slots.default?.() }\n\n              { slots.append && (\n                <div class=\"v-toolbar__append\">\n                  { slots.append?.() }\n                </div>\n              )}\n            </div>\n          </VDefaultsProvider>\n\n          <VDefaultsProvider\n            defaults={{\n              VTabs: {\n                height: convertToUnit(extensionHeight.value),\n              },\n            }}\n          >\n            <VExpandTransition>\n              { isExtended.value && (\n                <div\n                  class=\"v-toolbar__extension\"\n                  style={{ height: convertToUnit(extensionHeight.value) }}\n                >\n                  { extension }\n                </div>\n              )}\n            </VExpandTransition>\n          </VDefaultsProvider>\n        </props.tag>\n      )\n    })\n\n    return {\n      contentHeight,\n      extensionHeight,\n    }\n  },\n})\n\nexport type VToolbar = InstanceType<typeof VToolbar>\n"]},"metadata":{},"sourceType":"module"}