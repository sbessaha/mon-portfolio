{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { vShow as _vShow, withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VSliderThumb.css\"; // Components\n\nimport { VScaleTransition } from \"../transitions/index.mjs\";\nimport { VSliderSymbol } from \"./slider.mjs\"; // Directives\n\nimport Ripple from \"../../directives/ripple/index.mjs\"; // Composables\n\nimport { useElevation } from \"../../composables/elevation.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utilities\n\nimport { computed, inject } from 'vue';\nimport { convertToUnit, defineComponent, keyValues, useRender } from \"../../util/index.mjs\";\nexport const VSliderThumb = defineComponent({\n  name: 'VSliderThumb',\n  directives: {\n    Ripple\n  },\n  props: {\n    focused: Boolean,\n    max: {\n      type: Number,\n      required: true\n    },\n    min: {\n      type: Number,\n      required: true\n    },\n    modelValue: {\n      type: Number,\n      required: true\n    },\n    position: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: {\n    'update:modelValue': v => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots,\n      emit\n    } = _ref;\n    const slider = inject(VSliderSymbol);\n    if (!slider) throw new Error('[Vuetify] v-slider-thumb must be used inside v-slider or v-range-slider');\n    const {\n      thumbColor,\n      step,\n      vertical,\n      disabled,\n      thumbSize,\n      thumbLabel,\n      direction,\n      readonly,\n      elevation,\n      isReversed,\n      horizontalDirection,\n      mousePressed,\n      decimals\n    } = slider;\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(thumbColor);\n    const {\n      pageup,\n      pagedown,\n      end,\n      home,\n      left,\n      right,\n      down,\n      up\n    } = keyValues;\n    const relevantKeys = [pageup, pagedown, end, home, left, right, down, up];\n    const multipliers = computed(() => {\n      if (step.value) return [1, 2, 3];else return [1, 5, 10];\n    });\n\n    function parseKeydown(e, value) {\n      if (!relevantKeys.includes(e.key)) return;\n      e.preventDefault();\n\n      const _step = step.value || 0.1;\n\n      const steps = (props.max - props.min) / _step;\n\n      if ([left, right, down, up].includes(e.key)) {\n        const increase = isReversed.value ? [left, up] : [right, up];\n        const direction = increase.includes(e.key) ? 1 : -1;\n        const multiplier = e.shiftKey ? 2 : e.ctrlKey ? 1 : 0;\n        value = value + direction * _step * multipliers.value[multiplier];\n      } else if (e.key === home) {\n        value = props.min;\n      } else if (e.key === end) {\n        value = props.max;\n      } else {\n        const direction = e.key === pagedown ? 1 : -1;\n        value = value - direction * _step * (steps > 100 ? steps / 10 : 10);\n      }\n\n      return Math.max(props.min, Math.min(props.max, value));\n    }\n\n    function onKeydown(e) {\n      const newValue = parseKeydown(e, props.modelValue);\n      newValue != null && emit('update:modelValue', newValue);\n    }\n\n    useRender(() => {\n      var _slots$thumbLabel;\n\n      const positionPercentage = convertToUnit(vertical.value ? 100 - props.position : props.position, '%');\n      const inset = vertical.value ? 'block' : 'inline';\n      const {\n        elevationClasses\n      } = useElevation(computed(() => !disabled.value ? elevation.value : undefined));\n      return _createVNode(\"div\", {\n        \"class\": ['v-slider-thumb', {\n          'v-slider-thumb--focused': props.focused,\n          'v-slider-thumb--pressed': props.focused && mousePressed.value\n        }],\n        \"style\": {\n          [`inset-${inset}-start`]: `calc(${positionPercentage} - var(--v-slider-thumb-size) / 2)`,\n          '--v-slider-thumb-size': convertToUnit(thumbSize.value),\n          direction: !vertical.value ? horizontalDirection.value : undefined\n        },\n        \"role\": \"slider\",\n        \"tabindex\": disabled.value ? -1 : 0,\n        \"aria-valuemin\": props.min,\n        \"aria-valuemax\": props.max,\n        \"aria-valuenow\": props.modelValue,\n        \"aria-readonly\": readonly.value,\n        \"aria-orientation\": direction.value,\n        \"onKeydown\": !readonly.value ? onKeydown : undefined\n      }, [_createVNode(\"div\", {\n        \"class\": ['v-slider-thumb__surface', textColorClasses.value, elevationClasses.value],\n        \"style\": { ...textColorStyles.value\n        }\n      }, null), _withDirectives(_createVNode(\"div\", {\n        \"class\": ['v-slider-thumb__ripple', textColorClasses.value],\n        \"style\": textColorStyles.value\n      }, null), [[_resolveDirective(\"ripple\"), true, null, {\n        circle: true,\n        center: true\n      }]]), _createVNode(VScaleTransition, {\n        \"origin\": \"bottom center\"\n      }, {\n        default: () => [_withDirectives(_createVNode(\"div\", {\n          \"class\": \"v-slider-thumb__label-container\"\n        }, [_createVNode(\"div\", {\n          \"class\": ['v-slider-thumb__label']\n        }, [_createVNode(\"div\", null, [((_slots$thumbLabel = slots['thumb-label']) == null ? void 0 : _slots$thumbLabel.call(slots, {\n          modelValue: props.modelValue\n        })) ?? props.modelValue.toFixed(step.value ? decimals.value : 1)])])]), [[_vShow, thumbLabel.value && props.focused || thumbLabel.value === 'always']])]\n      })]);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VScaleTransition","VSliderSymbol","Ripple","useElevation","useTextColor","computed","inject","convertToUnit","defineComponent","keyValues","useRender","VSliderThumb","name","directives","props","focused","Boolean","max","type","Number","required","min","modelValue","position","emits","v","setup","slots","emit","_ref","slider","Error","thumbColor","step","vertical","disabled","thumbSize","thumbLabel","direction","readonly","elevation","isReversed","horizontalDirection","mousePressed","decimals","textColorClasses","textColorStyles","pageup","pagedown","end","home","left","right","down","up","relevantKeys","multipliers","value","parseKeydown","e","includes","key","preventDefault","_step","steps","increase","multiplier","shiftKey","ctrlKey","Math","onKeydown","newValue","positionPercentage","inset","elevationClasses","undefined","circle","center","default","toFixed"],"sources":["../../../src/components/VSlider/VSliderThumb.tsx"],"sourcesContent":["// Styles\nimport './VSliderThumb.sass'\n\n// Components\nimport { VScaleTransition } from '../transitions'\nimport { VSliderSymbol } from './slider'\n\n// Directives\nimport Ripple from '@/directives/ripple'\n\n// Composables\nimport { useElevation } from '@/composables/elevation'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, inject } from 'vue'\nimport { convertToUnit, defineComponent, keyValues, useRender } from '@/util'\n\nexport const VSliderThumb = defineComponent({\n  name: 'VSliderThumb',\n\n  directives: { Ripple },\n\n  props: {\n    focused: Boolean,\n    max: {\n      type: Number,\n      required: true,\n    },\n    min: {\n      type: Number,\n      required: true,\n    },\n    modelValue: {\n      type: Number,\n      required: true,\n    },\n    position: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  emits: {\n    'update:modelValue': (v: number) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const slider = inject(VSliderSymbol)\n\n    if (!slider) throw new Error('[Vuetify] v-slider-thumb must be used inside v-slider or v-range-slider')\n\n    const {\n      thumbColor,\n      step,\n      vertical,\n      disabled,\n      thumbSize,\n      thumbLabel,\n      direction,\n      readonly,\n      elevation,\n      isReversed,\n      horizontalDirection,\n      mousePressed,\n      decimals,\n    } = slider\n\n    const { textColorClasses, textColorStyles } = useTextColor(thumbColor)\n\n    const { pageup, pagedown, end, home, left, right, down, up } = keyValues\n    const relevantKeys = [pageup, pagedown, end, home, left, right, down, up]\n\n    const multipliers = computed(() => {\n      if (step.value) return [1, 2, 3]\n      else return [1, 5, 10]\n    })\n\n    function parseKeydown (e: KeyboardEvent, value: number) {\n      if (!relevantKeys.includes(e.key)) return\n\n      e.preventDefault()\n\n      const _step = step.value || 0.1\n      const steps = (props.max - props.min) / _step\n      if ([left, right, down, up].includes(e.key)) {\n        const increase = isReversed.value ? [left, up] : [right, up]\n        const direction = increase.includes(e.key) ? 1 : -1\n        const multiplier = e.shiftKey ? 2 : (e.ctrlKey ? 1 : 0)\n\n        value = value + (direction * _step * multipliers.value[multiplier])\n      } else if (e.key === home) {\n        value = props.min\n      } else if (e.key === end) {\n        value = props.max\n      } else {\n        const direction = e.key === pagedown ? 1 : -1\n        value = value - (direction * _step * (steps > 100 ? steps / 10 : 10))\n      }\n\n      return Math.max(props.min, Math.min(props.max, value))\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      const newValue = parseKeydown(e, props.modelValue)\n\n      newValue != null && emit('update:modelValue', newValue)\n    }\n\n    useRender(() => {\n      const positionPercentage = convertToUnit(vertical.value ? 100 - props.position : props.position, '%')\n      const inset = vertical.value ? 'block' : 'inline'\n      const { elevationClasses } = useElevation(computed(() => !disabled.value ? elevation.value : undefined))\n\n      return (\n        <div\n          class={[\n            'v-slider-thumb',\n            {\n              'v-slider-thumb--focused': props.focused,\n              'v-slider-thumb--pressed': props.focused && mousePressed.value,\n            },\n          ]}\n          style={{\n            [`inset-${inset}-start`]: `calc(${positionPercentage} - var(--v-slider-thumb-size) / 2)`,\n            '--v-slider-thumb-size': convertToUnit(thumbSize.value),\n            direction: !vertical.value ? horizontalDirection.value : undefined,\n          }}\n          role=\"slider\"\n          tabindex={ disabled.value ? -1 : 0 }\n          aria-valuemin={ props.min }\n          aria-valuemax={ props.max }\n          aria-valuenow={ props.modelValue }\n          aria-readonly={ readonly.value }\n          aria-orientation={ direction.value }\n          onKeydown={ !readonly.value ? onKeydown : undefined }\n        >\n          <div\n            class={[\n              'v-slider-thumb__surface',\n              textColorClasses.value,\n              elevationClasses.value,\n            ]}\n            style={{\n              ...textColorStyles.value,\n            }}\n          />\n          <div\n            class={[\n              'v-slider-thumb__ripple',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n            v-ripple={[true, null, ['circle', 'center']]}\n          />\n          <VScaleTransition origin=\"bottom center\">\n            <div\n              class=\"v-slider-thumb__label-container\"\n              v-show={ (thumbLabel.value && props.focused) || thumbLabel.value === 'always' }\n            >\n              <div\n                class={[\n                  'v-slider-thumb__label',\n                ]}\n              >\n                <div>\n                  { slots['thumb-label']?.({ modelValue: props.modelValue }) ?? props.modelValue.toFixed(step.value ? decimals.value : 1) }\n                </div>\n              </div>\n            </div>\n          </VScaleTransition>\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VSliderThumb = InstanceType<typeof VSliderThumb>\n"]},"metadata":{},"sourceType":"module"}