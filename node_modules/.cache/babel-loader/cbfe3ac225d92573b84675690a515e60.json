{"ast":null,"code":"// Utilities\nimport { effectScope, onScopeDispose, watch } from 'vue'; // Types\n\nexport function useToggleScope(source, fn) {\n  let scope;\n\n  function start() {\n    scope = effectScope();\n    scope.run(() => fn.length ? fn(() => {\n      scope?.stop();\n      start();\n    }) : fn());\n  }\n\n  watch(source, active => {\n    if (active && !scope) {\n      start();\n    } else if (!active) {\n      scope?.stop();\n      scope = undefined;\n    }\n  }, {\n    immediate: true\n  });\n  onScopeDispose(() => {\n    scope?.stop();\n  });\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,cAAtB,EAAsCC,KAAtC,QAAmD,KAAnD,C,CAEA;;AAGA,OAAO,SAASC,cAAT,CAAyBC,MAAzB,EAAuDC,EAAvD,EAAwF;EAC7F,IAAIC,KAAJ;;EACA,SAASC,KAAT,GAAkB;IAChBD,KAAK,GAAGN,WAAW,EAAnBM;IACAA,KAAK,CAACE,GAANF,CAAU,MAAMD,EAAE,CAACI,MAAHJ,GACZA,EAAE,CAAC,MAAM;MAAEC,KAAK,EAAEI,IAAPJ;MAAeC,KAAK;IAAI,CAAjC,CADUF,GAEXA,EAAE,EAFPC;EAIF;;EAEAJ,KAAK,CAACE,MAAD,EAASO,MAAM,IAAI;IACtB,IAAIA,MAAM,IAAI,CAACL,KAAf,EAAsB;MACpBC,KAAK;IACN,CAFD,MAEO,IAAI,CAACI,MAAL,EAAa;MAClBL,KAAK,EAAEI,IAAPJ;MACAA,KAAK,GAAGM,SAARN;IACF;EACD,CAPI,EAOF;IAAEO,SAAS,EAAE;EAAb,CAPE,CAALX;EASAD,cAAc,CAAC,MAAM;IACnBK,KAAK,EAAEI,IAAPJ;EACD,CAFa,CAAdL;AAGF","names":["effectScope","onScopeDispose","watch","useToggleScope","source","fn","scope","start","run","length","stop","active","undefined","immediate"],"sources":["../../src/composables/toggleScope.ts"],"sourcesContent":["// Utilities\nimport { effectScope, onScopeDispose, watch } from 'vue'\n\n// Types\nimport type { EffectScope, WatchSource } from 'vue'\n\nexport function useToggleScope (source: WatchSource<boolean>, fn: (reset: () => void) => void) {\n  let scope: EffectScope | undefined\n  function start () {\n    scope = effectScope()\n    scope.run(() => fn.length\n      ? fn(() => { scope?.stop(); start() })\n      : (fn as any)()\n    )\n  }\n\n  watch(source, active => {\n    if (active && !scope) {\n      start()\n    } else if (!active) {\n      scope?.stop()\n      scope = undefined\n    }\n  }, { immediate: true })\n\n  onScopeDispose(() => {\n    scope?.stop()\n  })\n}\n"]},"metadata":{},"sourceType":"module"}