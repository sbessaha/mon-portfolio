{"ast":null,"code":"// Composables\nimport { useToggleScope } from \"./toggleScope.mjs\"; // Utilities\n\nimport { computed, ref, toRaw, watch } from 'vue';\nimport { getCurrentInstance, toKebabCase } from \"../util/index.mjs\"; // Types\n// Composables\n\nexport function useProxiedModel(props, prop, defaultValue) {\n  let transformIn = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : v => v;\n  let transformOut = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : v => v;\n  const vm = getCurrentInstance('useProxiedModel');\n  const internal = ref(props[prop] !== undefined ? props[prop] : defaultValue);\n  const kebabProp = toKebabCase(prop);\n  const checkKebab = kebabProp !== prop;\n  const isControlled = checkKebab ? computed(() => {\n    void props[prop];\n    return !!((vm.vnode.props?.hasOwnProperty(prop) || vm.vnode.props?.hasOwnProperty(kebabProp)) && (vm.vnode.props?.hasOwnProperty(`onUpdate:${prop}`) || vm.vnode.props?.hasOwnProperty(`onUpdate:${kebabProp}`)));\n  }) : computed(() => {\n    void props[prop];\n    return !!(vm.vnode.props?.hasOwnProperty(prop) && vm.vnode.props?.hasOwnProperty(`onUpdate:${prop}`));\n  });\n  useToggleScope(() => !isControlled.value, () => {\n    watch(() => props[prop], val => {\n      internal.value = val;\n    });\n  });\n  const model = computed({\n    get() {\n      const externalValue = props[prop];\n      return transformIn(isControlled.value ? externalValue : internal.value);\n    },\n\n    set(internalValue) {\n      const newValue = transformOut(internalValue);\n      const value = toRaw(isControlled.value ? props[prop] : internal.value);\n\n      if (value === newValue || transformIn(value) === internalValue) {\n        return;\n      }\n\n      internal.value = newValue;\n      vm?.emit(`update:${prop}`, newValue);\n    }\n\n  });\n  Object.defineProperty(model, 'externalValue', {\n    get: () => isControlled.value ? props[prop] : internal.value\n  });\n  return model;\n}","map":{"version":3,"mappings":"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","names":["useToggleScope","computed","ref","toRaw","watch","getCurrentInstance","toKebabCase","useProxiedModel","props","prop","defaultValue","transformIn","v","transformOut","vm","internal","undefined","kebabProp","checkKebab","isControlled","vnode","hasOwnProperty","value","val","model","get","externalValue","set","internalValue","newValue","emit","Object","defineProperty"],"sources":["../../src/composables/proxiedModel.ts"],"sourcesContent":["// Composables\nimport { useToggleScope } from '@/composables/toggleScope'\n\n// Utilities\nimport { computed, ref, toRaw, watch } from 'vue'\nimport { getCurrentInstance, toKebabCase } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { EventProp } from '@/util'\n\ntype InnerVal<T> = T extends any[] ? Readonly<T> : T\n\n// Composables\nexport function useProxiedModel<\n  Props extends object & { [key in Prop as `onUpdate:${Prop}`]: EventProp | undefined },\n  Prop extends Extract<keyof Props, string>,\n  Inner = Props[Prop],\n> (\n  props: Props,\n  prop: Prop,\n  defaultValue?: Props[Prop],\n  transformIn: (value?: Props[Prop]) => Inner = (v: any) => v,\n  transformOut: (value: Inner) => Props[Prop] = (v: any) => v,\n) {\n  const vm = getCurrentInstance('useProxiedModel')\n  const internal = ref(props[prop] !== undefined ? props[prop] : defaultValue) as Ref<Props[Prop]>\n  const kebabProp = toKebabCase(prop)\n  const checkKebab = kebabProp !== prop\n\n  const isControlled = checkKebab\n    ? computed(() => {\n      void props[prop]\n      return !!(\n        (vm.vnode.props?.hasOwnProperty(prop) || vm.vnode.props?.hasOwnProperty(kebabProp)) &&\n        (vm.vnode.props?.hasOwnProperty(`onUpdate:${prop}`) || vm.vnode.props?.hasOwnProperty(`onUpdate:${kebabProp}`))\n      )\n    })\n    : computed(() => {\n      void props[prop]\n      return !!(vm.vnode.props?.hasOwnProperty(prop) && vm.vnode.props?.hasOwnProperty(`onUpdate:${prop}`))\n    })\n\n  useToggleScope(() => !isControlled.value, () => {\n    watch(() => props[prop], val => {\n      internal.value = val\n    })\n  })\n\n  const model = computed({\n    get (): any {\n      const externalValue = props[prop]\n      return transformIn(isControlled.value ? externalValue : internal.value)\n    },\n    set (internalValue) {\n      const newValue = transformOut(internalValue)\n      const value = toRaw(isControlled.value ? props[prop] : internal.value)\n      if (value === newValue || transformIn(value) === internalValue) {\n        return\n      }\n      internal.value = newValue\n      vm?.emit(`update:${prop}`, newValue)\n    },\n  }) as any as Ref<InnerVal<Inner>> & { readonly externalValue: Props[Prop] }\n\n  Object.defineProperty(model, 'externalValue', {\n    get: () => isControlled.value ? props[prop] : internal.value,\n  })\n\n  return model\n}\n"]},"metadata":{},"sourceType":"module"}