{"ast":null,"code":"export function getScrollParent(el) {\n  while (el) {\n    if (hasScrollbar(el)) return el;\n    el = el.parentElement;\n  }\n\n  return document.scrollingElement;\n}\nexport function getScrollParents(el, stopAt) {\n  const elements = [];\n  if (stopAt && el && !stopAt.contains(el)) return elements;\n\n  while (el) {\n    if (hasScrollbar(el)) elements.push(el);\n    if (el === stopAt) break;\n    el = el.parentElement;\n  }\n\n  return elements;\n}\nexport function hasScrollbar(el) {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return false;\n  const style = window.getComputedStyle(el);\n  return style.overflowY === 'scroll' || style.overflowY === 'auto' && el.scrollHeight > el.clientHeight;\n}","map":{"version":3,"mappings":"AAAA,OAAO,SAASA,eAAT,CAA0BC,EAA1B,EAA4C;EACjD,OAAOA,EAAP,EAAW;IACT,IAAIC,YAAY,CAACD,EAAD,CAAhB,EAAsB,OAAOA,EAAP;IACtBA,EAAE,GAAGA,EAAE,CAACE,aAARF;EACD;;EAED,OAAOG,QAAQ,CAACC,gBAAhB;AACD;AAED,OAAO,SAASC,gBAAT,CAA2BL,EAA3B,EAAgDM,MAAhD,EAAyE;EAC9E,MAAMC,QAAuB,GAAG,EAAhC;EAEA,IAAID,MAAM,IAAIN,EAAVM,IAAgB,CAACA,MAAM,CAACE,QAAPF,CAAgBN,EAAhBM,CAArB,EAA0C,OAAOC,QAAP;;EAE1C,OAAOP,EAAP,EAAW;IACT,IAAIC,YAAY,CAACD,EAAD,CAAhB,EAAsBO,QAAQ,CAACE,IAATF,CAAcP,EAAdO;IACtB,IAAIP,EAAE,KAAKM,MAAX,EAAmB;IACnBN,EAAE,GAAGA,EAAE,CAACE,aAARF;EACD;;EAED,OAAOO,QAAP;AACD;AAED,OAAO,SAASN,YAAT,CAAuBD,EAAvB,EAA4C;EACjD,IAAI,CAACA,EAAD,IAAOA,EAAE,CAACU,QAAHV,KAAgBW,IAAI,CAACC,YAAhC,EAA8C,OAAO,KAAP;EAE9C,MAAMC,KAAK,GAAGC,MAAM,CAACC,gBAAPD,CAAwBd,EAAxBc,CAAd;EACA,OAAOD,KAAK,CAACG,SAANH,KAAoB,QAApBA,IAAiCA,KAAK,CAACG,SAANH,KAAoB,MAApBA,IAA8Bb,EAAE,CAACiB,YAAHjB,GAAkBA,EAAE,CAACkB,YAA3F;AACD","names":["getScrollParent","el","hasScrollbar","parentElement","document","scrollingElement","getScrollParents","stopAt","elements","contains","push","nodeType","Node","ELEMENT_NODE","style","window","getComputedStyle","overflowY","scrollHeight","clientHeight"],"sources":["../../src/util/getScrollParent.ts"],"sourcesContent":["export function getScrollParent (el?: HTMLElement) {\n  while (el) {\n    if (hasScrollbar(el)) return el\n    el = el.parentElement!\n  }\n\n  return document.scrollingElement as HTMLElement\n}\n\nexport function getScrollParents (el?: Element | null, stopAt?: Element | null) {\n  const elements: HTMLElement[] = []\n\n  if (stopAt && el && !stopAt.contains(el)) return elements\n\n  while (el) {\n    if (hasScrollbar(el)) elements.push(el as HTMLElement)\n    if (el === stopAt) break\n    el = el.parentElement!\n  }\n\n  return elements\n}\n\nexport function hasScrollbar (el?: Element | null) {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n  const style = window.getComputedStyle(el)\n  return style.overflowY === 'scroll' || (style.overflowY === 'auto' && el.scrollHeight > el.clientHeight)\n}\n"]},"metadata":{},"sourceType":"module"}