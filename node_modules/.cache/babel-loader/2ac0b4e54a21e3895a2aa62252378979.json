{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n// Utilities\nimport { computed, inject, provide, ref, watch, watchEffect } from 'vue';\nimport { createRange, darken, getCurrentInstance, getForeground, getLuma, IN_BROWSER, lighten, mergeDeep, parseColor, propsFactory, RGBtoHex } from \"../util/index.mjs\"; // Types\n\nexport const ThemeSymbol = Symbol.for('vuetify:theme');\nexport const makeThemeProps = propsFactory({\n  theme: String\n}, 'theme');\n\nfunction genDefaults() {\n  return {\n    defaultTheme: 'light',\n    variations: {\n      colors: [],\n      lighten: 0,\n      darken: 0\n    },\n    themes: {\n      light: {\n        dark: false,\n        colors: {\n          background: '#FFFFFF',\n          surface: '#FFFFFF',\n          'surface-bright': '#FFFFFF',\n          'surface-light': '#EEEEEE',\n          'surface-variant': '#424242',\n          'on-surface-variant': '#EEEEEE',\n          primary: '#1867C0',\n          'primary-darken-1': '#1F5592',\n          secondary: '#48A9A6',\n          'secondary-darken-1': '#018786',\n          error: '#B00020',\n          info: '#2196F3',\n          success: '#4CAF50',\n          warning: '#FB8C00'\n        },\n        variables: {\n          'border-color': '#000000',\n          'border-opacity': 0.12,\n          'high-emphasis-opacity': 0.87,\n          'medium-emphasis-opacity': 0.60,\n          'disabled-opacity': 0.38,\n          'idle-opacity': 0.04,\n          'hover-opacity': 0.04,\n          'focus-opacity': 0.12,\n          'selected-opacity': 0.08,\n          'activated-opacity': 0.12,\n          'pressed-opacity': 0.12,\n          'dragged-opacity': 0.08,\n          'theme-kbd': '#212529',\n          'theme-on-kbd': '#FFFFFF',\n          'theme-code': '#F5F5F5',\n          'theme-on-code': '#000000'\n        }\n      },\n      dark: {\n        dark: true,\n        colors: {\n          background: '#121212',\n          surface: '#212121',\n          'surface-bright': '#ccbfd6',\n          'surface-light': '#424242',\n          'surface-variant': '#a3a3a3',\n          'on-surface-variant': '#424242',\n          primary: '#2196F3',\n          'primary-darken-1': '#277CC1',\n          secondary: '#54B6B2',\n          'secondary-darken-1': '#48A9A6',\n          error: '#CF6679',\n          info: '#2196F3',\n          success: '#4CAF50',\n          warning: '#FB8C00'\n        },\n        variables: {\n          'border-color': '#FFFFFF',\n          'border-opacity': 0.12,\n          'high-emphasis-opacity': 1,\n          'medium-emphasis-opacity': 0.70,\n          'disabled-opacity': 0.50,\n          'idle-opacity': 0.10,\n          'hover-opacity': 0.04,\n          'focus-opacity': 0.12,\n          'selected-opacity': 0.08,\n          'activated-opacity': 0.12,\n          'pressed-opacity': 0.16,\n          'dragged-opacity': 0.08,\n          'theme-kbd': '#212529',\n          'theme-on-kbd': '#FFFFFF',\n          'theme-code': '#343434',\n          'theme-on-code': '#CCCCCC'\n        }\n      }\n    }\n  };\n}\n\nfunction parseThemeOptions() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : genDefaults();\n  const defaults = genDefaults();\n  if (!options) return { ...defaults,\n    isDisabled: true\n  };\n  const themes = {};\n\n  for (const [key, theme] of Object.entries(options.themes ?? {})) {\n    const defaultTheme = theme.dark || key === 'dark' ? defaults.themes?.dark : defaults.themes?.light;\n    themes[key] = mergeDeep(defaultTheme, theme);\n  }\n\n  return mergeDeep(defaults, { ...options,\n    themes\n  });\n} // Composables\n\n\nexport function createTheme(options) {\n  const parsedOptions = parseThemeOptions(options);\n  const name = ref(parsedOptions.defaultTheme);\n  const themes = ref(parsedOptions.themes);\n  const computedThemes = computed(() => {\n    const acc = {};\n\n    for (const [name, original] of Object.entries(themes.value)) {\n      const theme = acc[name] = { ...original,\n        colors: { ...original.colors\n        }\n      };\n\n      if (parsedOptions.variations) {\n        for (const name of parsedOptions.variations.colors) {\n          const color = theme.colors[name];\n          if (!color) continue;\n\n          for (const variation of ['lighten', 'darken']) {\n            const fn = variation === 'lighten' ? lighten : darken;\n\n            for (const amount of createRange(parsedOptions.variations[variation], 1)) {\n              theme.colors[`${name}-${variation}-${amount}`] = RGBtoHex(fn(parseColor(color), amount));\n            }\n          }\n        }\n      }\n\n      for (const color of Object.keys(theme.colors)) {\n        if (/^on-[a-z]/.test(color) || theme.colors[`on-${color}`]) continue;\n        const onColor = `on-${color}`;\n        const colorVal = parseColor(theme.colors[color]);\n        theme.colors[onColor] = getForeground(colorVal);\n      }\n    }\n\n    return acc;\n  });\n  const current = computed(() => computedThemes.value[name.value]);\n  const styles = computed(() => {\n    const lines = [];\n\n    if (current.value?.dark) {\n      createCssClass(lines, ':root', ['color-scheme: dark']);\n    }\n\n    createCssClass(lines, ':root', genCssVariables(current.value));\n\n    for (const [themeName, theme] of Object.entries(computedThemes.value)) {\n      createCssClass(lines, `.v-theme--${themeName}`, [`color-scheme: ${theme.dark ? 'dark' : 'normal'}`, ...genCssVariables(theme)]);\n    }\n\n    const bgLines = [];\n    const fgLines = [];\n    const colors = new Set(Object.values(computedThemes.value).flatMap(theme => Object.keys(theme.colors)));\n\n    for (const key of colors) {\n      if (/^on-[a-z]/.test(key)) {\n        createCssClass(fgLines, `.${key}`, [`color: rgb(var(--v-theme-${key})) !important`]);\n      } else {\n        createCssClass(bgLines, `.bg-${key}`, [`--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`, `background-color: rgb(var(--v-theme-${key})) !important`, `color: rgb(var(--v-theme-on-${key})) !important`]);\n        createCssClass(fgLines, `.text-${key}`, [`color: rgb(var(--v-theme-${key})) !important`]);\n        createCssClass(fgLines, `.border-${key}`, [`--v-border-color: var(--v-theme-${key})`]);\n      }\n    }\n\n    lines.push(...bgLines, ...fgLines);\n    return lines.map((str, i) => i === 0 ? str : `    ${str}`).join('');\n  });\n\n  function getHead() {\n    return {\n      style: [{\n        children: styles.value,\n        id: 'vuetify-theme-stylesheet',\n        nonce: parsedOptions.cspNonce || false\n      }]\n    };\n  }\n\n  function install(app) {\n    if (parsedOptions.isDisabled) return;\n    const head = app._context.provides.usehead;\n\n    if (head) {\n      if (head.push) {\n        const entry = head.push(getHead);\n\n        if (IN_BROWSER) {\n          watch(styles, () => {\n            entry.patch(getHead);\n          });\n        }\n      } else {\n        if (IN_BROWSER) {\n          head.addHeadObjs(computed(getHead));\n          watchEffect(() => head.updateDOM());\n        } else {\n          head.addHeadObjs(getHead());\n        }\n      }\n    } else {\n      let styleEl = IN_BROWSER ? document.getElementById('vuetify-theme-stylesheet') : null;\n\n      if (IN_BROWSER) {\n        watch(styles, updateStyles, {\n          immediate: true\n        });\n      } else {\n        updateStyles();\n      }\n\n      function updateStyles() {\n        if (typeof document !== 'undefined' && !styleEl) {\n          const el = document.createElement('style');\n          el.type = 'text/css';\n          el.id = 'vuetify-theme-stylesheet';\n          if (parsedOptions.cspNonce) el.setAttribute('nonce', parsedOptions.cspNonce);\n          styleEl = el;\n          document.head.appendChild(styleEl);\n        }\n\n        if (styleEl) styleEl.innerHTML = styles.value;\n      }\n    }\n  }\n\n  const themeClasses = computed(() => parsedOptions.isDisabled ? undefined : `v-theme--${name.value}`);\n  return {\n    install,\n    isDisabled: parsedOptions.isDisabled,\n    name,\n    themes,\n    current,\n    computedThemes,\n    themeClasses,\n    styles,\n    global: {\n      name,\n      current\n    }\n  };\n}\nexport function provideTheme(props) {\n  getCurrentInstance('provideTheme');\n  const theme = inject(ThemeSymbol, null);\n  if (!theme) throw new Error('Could not find Vuetify theme injection');\n  const name = computed(() => {\n    return props.theme ?? theme.name.value;\n  });\n  const current = computed(() => theme.themes.value[name.value]);\n  const themeClasses = computed(() => theme.isDisabled ? undefined : `v-theme--${name.value}`);\n  const newTheme = { ...theme,\n    name,\n    current,\n    themeClasses\n  };\n  provide(ThemeSymbol, newTheme);\n  return newTheme;\n}\nexport function useTheme() {\n  getCurrentInstance('useTheme');\n  const theme = inject(ThemeSymbol, null);\n  if (!theme) throw new Error('Could not find Vuetify theme injection');\n  return theme;\n}\n\nfunction createCssClass(lines, selector, content) {\n  lines.push(`${selector} {\\n`, ...content.map(line => `  ${line};\\n`), '}\\n');\n}\n\nfunction genCssVariables(theme) {\n  const lightOverlay = theme.dark ? 2 : 1;\n  const darkOverlay = theme.dark ? 1 : 2;\n  const variables = [];\n\n  for (const [key, value] of Object.entries(theme.colors)) {\n    const rgb = parseColor(value);\n    variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`);\n\n    if (!key.startsWith('on-')) {\n      variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`);\n    }\n  }\n\n  for (const [key, value] of Object.entries(theme.variables)) {\n    const color = typeof value === 'string' && value.startsWith('#') ? parseColor(value) : undefined;\n    const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : undefined;\n    variables.push(`--v-${key}: ${rgb ?? value}`);\n  }\n\n  return variables;\n}","map":{"version":3,"mappings":"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","names":["computed","inject","provide","ref","watch","watchEffect","createRange","darken","getCurrentInstance","getForeground","getLuma","IN_BROWSER","lighten","mergeDeep","parseColor","propsFactory","RGBtoHex","ThemeSymbol","Symbol","for","makeThemeProps","theme","String","genDefaults","defaultTheme","variations","colors","themes","light","dark","background","surface","primary","secondary","error","info","success","warning","variables","parseThemeOptions","options","defaults","isDisabled","key","Object","entries","createTheme","parsedOptions","name","computedThemes","acc","original","value","color","variation","fn","amount","keys","test","onColor","colorVal","current","styles","lines","createCssClass","genCssVariables","themeName","bgLines","fgLines","Set","values","flatMap","push","map","str","i","join","getHead","style","children","id","nonce","cspNonce","install","app","head","_context","provides","usehead","entry","patch","addHeadObjs","updateDOM","styleEl","document","getElementById","updateStyles","immediate","el","createElement","type","setAttribute","appendChild","innerHTML","themeClasses","undefined","global","provideTheme","props","Error","newTheme","useTheme","selector","content","line","lightOverlay","darkOverlay","rgb","r","g","b","startsWith"],"sources":["../../src/composables/theme.ts"],"sourcesContent":["// Utilities\nimport {\n  computed,\n  inject,\n  provide,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport {\n  createRange,\n  darken,\n  getCurrentInstance,\n  getForeground,\n  getLuma,\n  IN_BROWSER,\n  lighten,\n  mergeDeep,\n  parseColor,\n  propsFactory,\n  RGBtoHex,\n} from '@/util'\n\n// Types\nimport type { VueHeadClient } from '@unhead/vue'\nimport type { HeadClient } from '@vueuse/head'\nimport type { App, DeepReadonly, InjectionKey, Ref } from 'vue'\n\ntype DeepPartial<T> = T extends object ? { [P in keyof T]?: DeepPartial<T[P]> } : T\n\nexport type ThemeOptions = false | {\n  cspNonce?: string\n  defaultTheme?: string\n  variations?: false | VariationsOptions\n  themes?: Record<string, ThemeDefinition>\n}\nexport type ThemeDefinition = DeepPartial<InternalThemeDefinition>\n\ninterface InternalThemeOptions {\n  cspNonce?: string\n  isDisabled: boolean\n  defaultTheme: string\n  variations: false | VariationsOptions\n  themes: Record<string, InternalThemeDefinition>\n}\n\ninterface VariationsOptions {\n  colors: string[]\n  lighten: number\n  darken: number\n}\n\ninterface InternalThemeDefinition {\n  dark: boolean\n  colors: Colors\n  variables: Record<string, string | number>\n}\n\nexport interface Colors extends BaseColors, OnColors {\n  [key: string]: string\n}\n\ninterface BaseColors {\n  background: string\n  surface: string\n  primary: string\n  secondary: string\n  success: string\n  warning: string\n  error: string\n  info: string\n}\n\ninterface OnColors {\n  'on-background': string\n  'on-surface': string\n  'on-primary': string\n  'on-secondary': string\n  'on-success': string\n  'on-warning': string\n  'on-error': string\n  'on-info': string\n}\n\nexport interface ThemeInstance {\n  readonly isDisabled: boolean\n  readonly themes: Ref<Record<string, InternalThemeDefinition>>\n\n  readonly name: Readonly<Ref<string>>\n  readonly current: DeepReadonly<Ref<InternalThemeDefinition>>\n  readonly computedThemes: DeepReadonly<Ref<Record<string, InternalThemeDefinition>>>\n\n  readonly themeClasses: Readonly<Ref<string | undefined>>\n  readonly styles: Readonly<Ref<string>>\n\n  readonly global: {\n    readonly name: Ref<string>\n    readonly current: DeepReadonly<Ref<InternalThemeDefinition>>\n  }\n}\n\nexport const ThemeSymbol: InjectionKey<ThemeInstance> = Symbol.for('vuetify:theme')\n\nexport const makeThemeProps = propsFactory({\n  theme: String,\n}, 'theme')\n\nfunction genDefaults () {\n  return {\n    defaultTheme: 'light',\n    variations: { colors: [], lighten: 0, darken: 0 },\n    themes: {\n      light: {\n        dark: false,\n        colors: {\n          background: '#FFFFFF',\n          surface: '#FFFFFF',\n          'surface-bright': '#FFFFFF',\n          'surface-light': '#EEEEEE',\n          'surface-variant': '#424242',\n          'on-surface-variant': '#EEEEEE',\n          primary: '#1867C0',\n          'primary-darken-1': '#1F5592',\n          secondary: '#48A9A6',\n          'secondary-darken-1': '#018786',\n          error: '#B00020',\n          info: '#2196F3',\n          success: '#4CAF50',\n          warning: '#FB8C00',\n        },\n        variables: {\n          'border-color': '#000000',\n          'border-opacity': 0.12,\n          'high-emphasis-opacity': 0.87,\n          'medium-emphasis-opacity': 0.60,\n          'disabled-opacity': 0.38,\n          'idle-opacity': 0.04,\n          'hover-opacity': 0.04,\n          'focus-opacity': 0.12,\n          'selected-opacity': 0.08,\n          'activated-opacity': 0.12,\n          'pressed-opacity': 0.12,\n          'dragged-opacity': 0.08,\n          'theme-kbd': '#212529',\n          'theme-on-kbd': '#FFFFFF',\n          'theme-code': '#F5F5F5',\n          'theme-on-code': '#000000',\n        },\n      },\n      dark: {\n        dark: true,\n        colors: {\n          background: '#121212',\n          surface: '#212121',\n          'surface-bright': '#ccbfd6',\n          'surface-light': '#424242',\n          'surface-variant': '#a3a3a3',\n          'on-surface-variant': '#424242',\n          primary: '#2196F3',\n          'primary-darken-1': '#277CC1',\n          secondary: '#54B6B2',\n          'secondary-darken-1': '#48A9A6',\n          error: '#CF6679',\n          info: '#2196F3',\n          success: '#4CAF50',\n          warning: '#FB8C00',\n        },\n        variables: {\n          'border-color': '#FFFFFF',\n          'border-opacity': 0.12,\n          'high-emphasis-opacity': 1,\n          'medium-emphasis-opacity': 0.70,\n          'disabled-opacity': 0.50,\n          'idle-opacity': 0.10,\n          'hover-opacity': 0.04,\n          'focus-opacity': 0.12,\n          'selected-opacity': 0.08,\n          'activated-opacity': 0.12,\n          'pressed-opacity': 0.16,\n          'dragged-opacity': 0.08,\n          'theme-kbd': '#212529',\n          'theme-on-kbd': '#FFFFFF',\n          'theme-code': '#343434',\n          'theme-on-code': '#CCCCCC',\n        },\n      },\n    },\n  }\n}\n\nfunction parseThemeOptions (options: ThemeOptions = genDefaults()): InternalThemeOptions {\n  const defaults = genDefaults()\n\n  if (!options) return { ...defaults, isDisabled: true } as any\n\n  const themes: Record<string, InternalThemeDefinition> = {}\n  for (const [key, theme] of Object.entries(options.themes ?? {})) {\n    const defaultTheme = theme.dark || key === 'dark'\n      ? defaults.themes?.dark\n      : defaults.themes?.light\n    themes[key] = mergeDeep(defaultTheme, theme) as InternalThemeDefinition\n  }\n\n  return mergeDeep(\n    defaults,\n    { ...options, themes },\n  ) as InternalThemeOptions\n}\n\n// Composables\nexport function createTheme (options?: ThemeOptions): ThemeInstance & { install: (app: App) => void } {\n  const parsedOptions = parseThemeOptions(options)\n  const name = ref(parsedOptions.defaultTheme)\n  const themes = ref(parsedOptions.themes)\n\n  const computedThemes = computed(() => {\n    const acc: Record<string, InternalThemeDefinition> = {}\n    for (const [name, original] of Object.entries(themes.value)) {\n      const theme: InternalThemeDefinition = acc[name] = {\n        ...original,\n        colors: {\n          ...original.colors,\n        },\n      }\n\n      if (parsedOptions.variations) {\n        for (const name of parsedOptions.variations.colors) {\n          const color = theme.colors[name]\n\n          if (!color) continue\n\n          for (const variation of (['lighten', 'darken'] as const)) {\n            const fn = variation === 'lighten' ? lighten : darken\n            for (const amount of createRange(parsedOptions.variations[variation], 1)) {\n              theme.colors[`${name}-${variation}-${amount}`] = RGBtoHex(fn(parseColor(color), amount))\n            }\n          }\n        }\n      }\n\n      for (const color of Object.keys(theme.colors)) {\n        if (/^on-[a-z]/.test(color) || theme.colors[`on-${color}`]) continue\n\n        const onColor = `on-${color}` as keyof OnColors\n        const colorVal = parseColor(theme.colors[color]!)\n\n        theme.colors[onColor] = getForeground(colorVal)\n      }\n    }\n\n    return acc\n  })\n  const current = computed(() => computedThemes.value[name.value])\n\n  const styles = computed(() => {\n    const lines: string[] = []\n\n    if (current.value?.dark) {\n      createCssClass(lines, ':root', ['color-scheme: dark'])\n    }\n\n    createCssClass(lines, ':root', genCssVariables(current.value))\n\n    for (const [themeName, theme] of Object.entries(computedThemes.value)) {\n      createCssClass(lines, `.v-theme--${themeName}`, [\n        `color-scheme: ${theme.dark ? 'dark' : 'normal'}`,\n        ...genCssVariables(theme),\n      ])\n    }\n\n    const bgLines: string[] = []\n    const fgLines: string[] = []\n\n    const colors = new Set(Object.values(computedThemes.value).flatMap(theme => Object.keys(theme.colors)))\n    for (const key of colors) {\n      if (/^on-[a-z]/.test(key)) {\n        createCssClass(fgLines, `.${key}`, [`color: rgb(var(--v-theme-${key})) !important`])\n      } else {\n        createCssClass(bgLines, `.bg-${key}`, [\n          `--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`,\n          `background-color: rgb(var(--v-theme-${key})) !important`,\n          `color: rgb(var(--v-theme-on-${key})) !important`,\n        ])\n        createCssClass(fgLines, `.text-${key}`, [`color: rgb(var(--v-theme-${key})) !important`])\n        createCssClass(fgLines, `.border-${key}`, [`--v-border-color: var(--v-theme-${key})`])\n      }\n    }\n\n    lines.push(...bgLines, ...fgLines)\n\n    return lines.map((str, i) => i === 0 ? str : `    ${str}`).join('')\n  })\n\n  function getHead () {\n    return {\n      style: [{\n        children: styles.value,\n        id: 'vuetify-theme-stylesheet',\n        nonce: parsedOptions.cspNonce || false as never,\n      }],\n    }\n  }\n\n  function install (app: App) {\n    if (parsedOptions.isDisabled) return\n\n    const head = app._context.provides.usehead as HeadClient & VueHeadClient<any> | undefined\n    if (head) {\n      if (head.push) {\n        const entry = head.push(getHead)\n        if (IN_BROWSER) {\n          watch(styles, () => { entry.patch(getHead) })\n        }\n      } else {\n        if (IN_BROWSER) {\n          head.addHeadObjs(computed(getHead))\n          watchEffect(() => head.updateDOM())\n        } else {\n          head.addHeadObjs(getHead())\n        }\n      }\n    } else {\n      let styleEl = IN_BROWSER\n        ? document.getElementById('vuetify-theme-stylesheet')\n        : null\n\n      if (IN_BROWSER) {\n        watch(styles, updateStyles, { immediate: true })\n      } else {\n        updateStyles()\n      }\n\n      function updateStyles () {\n        if (typeof document !== 'undefined' && !styleEl) {\n          const el = document.createElement('style')\n          el.type = 'text/css'\n          el.id = 'vuetify-theme-stylesheet'\n          if (parsedOptions.cspNonce) el.setAttribute('nonce', parsedOptions.cspNonce)\n\n          styleEl = el\n          document.head.appendChild(styleEl)\n        }\n\n        if (styleEl) styleEl.innerHTML = styles.value\n      }\n    }\n  }\n\n  const themeClasses = computed(() => parsedOptions.isDisabled ? undefined : `v-theme--${name.value}`)\n\n  return {\n    install,\n    isDisabled: parsedOptions.isDisabled,\n    name,\n    themes,\n    current,\n    computedThemes,\n    themeClasses,\n    styles,\n    global: {\n      name,\n      current,\n    },\n  }\n}\n\nexport function provideTheme (props: { theme?: string }) {\n  getCurrentInstance('provideTheme')\n\n  const theme = inject(ThemeSymbol, null)\n\n  if (!theme) throw new Error('Could not find Vuetify theme injection')\n\n  const name = computed<string>(() => {\n    return props.theme ?? theme.name.value\n  })\n  const current = computed(() => theme.themes.value[name.value])\n\n  const themeClasses = computed(() => theme.isDisabled ? undefined : `v-theme--${name.value}`)\n\n  const newTheme: ThemeInstance = {\n    ...theme,\n    name,\n    current,\n    themeClasses,\n  }\n\n  provide(ThemeSymbol, newTheme)\n\n  return newTheme\n}\n\nexport function useTheme () {\n  getCurrentInstance('useTheme')\n\n  const theme = inject(ThemeSymbol, null)\n\n  if (!theme) throw new Error('Could not find Vuetify theme injection')\n\n  return theme\n}\n\nfunction createCssClass (lines: string[], selector: string, content: string[]) {\n  lines.push(\n    `${selector} {\\n`,\n    ...content.map(line => `  ${line};\\n`),\n    '}\\n',\n  )\n}\n\nfunction genCssVariables (theme: InternalThemeDefinition) {\n  const lightOverlay = theme.dark ? 2 : 1\n  const darkOverlay = theme.dark ? 1 : 2\n\n  const variables: string[] = []\n  for (const [key, value] of Object.entries(theme.colors)) {\n    const rgb = parseColor(value)\n    variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`)\n    if (!key.startsWith('on-')) {\n      variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`)\n    }\n  }\n\n  for (const [key, value] of Object.entries(theme.variables)) {\n    const color = typeof value === 'string' && value.startsWith('#') ? parseColor(value) : undefined\n    const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : undefined\n    variables.push(`--v-${key}: ${rgb ?? value}`)\n  }\n\n  return variables\n}\n"]},"metadata":{},"sourceType":"module"}