{"ast":null,"code":"import { Box } from \"./box.mjs\";\n/** @see https://stackoverflow.com/a/57876601/2074736 */\n\nexport function nullifyTransforms(el) {\n  const rect = el.getBoundingClientRect();\n  const style = getComputedStyle(el);\n  const tx = style.transform;\n\n  if (tx) {\n    let ta, sx, sy, dx, dy;\n\n    if (tx.startsWith('matrix3d(')) {\n      ta = tx.slice(9, -1).split(/, /);\n      sx = +ta[0];\n      sy = +ta[5];\n      dx = +ta[12];\n      dy = +ta[13];\n    } else if (tx.startsWith('matrix(')) {\n      ta = tx.slice(7, -1).split(/, /);\n      sx = +ta[0];\n      sy = +ta[3];\n      dx = +ta[4];\n      dy = +ta[5];\n    } else {\n      return new Box(rect);\n    }\n\n    const to = style.transformOrigin;\n    const x = rect.x - dx - (1 - sx) * parseFloat(to);\n    const y = rect.y - dy - (1 - sy) * parseFloat(to.slice(to.indexOf(' ') + 1));\n    const w = sx ? rect.width / sx : el.offsetWidth + 1;\n    const h = sy ? rect.height / sy : el.offsetHeight + 1;\n    return new Box({\n      x,\n      y,\n      width: w,\n      height: h\n    });\n  } else {\n    return new Box(rect);\n  }\n}\nexport function animate(el, keyframes, options) {\n  if (typeof el.animate === 'undefined') return {\n    finished: Promise.resolve()\n  };\n  const animation = el.animate(keyframes, options);\n\n  if (typeof animation.finished === 'undefined') {\n    animation.finished = new Promise(resolve => {\n      animation.onfinish = () => {\n        resolve(animation);\n      };\n    });\n  }\n\n  return animation;\n}","map":{"version":3,"mappings":"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","names":["Box","nullifyTransforms","el","rect","getBoundingClientRect","style","getComputedStyle","tx","transform","ta","sx","sy","dx","dy","startsWith","slice","split","to","transformOrigin","x","parseFloat","y","indexOf","w","width","offsetWidth","h","height","offsetHeight","animate","keyframes","options","finished","Promise","resolve","animation","onfinish"],"sources":["../../src/util/animation.ts"],"sourcesContent":["import { Box } from '@/util/box'\n\n/** @see https://stackoverflow.com/a/57876601/2074736 */\nexport function nullifyTransforms (el: HTMLElement): Box {\n  const rect = el.getBoundingClientRect()\n  const style = getComputedStyle(el)\n  const tx = style.transform\n\n  if (tx) {\n    let ta, sx, sy, dx, dy\n    if (tx.startsWith('matrix3d(')) {\n      ta = tx.slice(9, -1).split(/, /)\n      sx = +ta[0]\n      sy = +ta[5]\n      dx = +ta[12]\n      dy = +ta[13]\n    } else if (tx.startsWith('matrix(')) {\n      ta = tx.slice(7, -1).split(/, /)\n      sx = +ta[0]\n      sy = +ta[3]\n      dx = +ta[4]\n      dy = +ta[5]\n    } else {\n      return new Box(rect)\n    }\n\n    const to = style.transformOrigin\n    const x = rect.x - dx - (1 - sx) * parseFloat(to)\n    const y = rect.y - dy - (1 - sy) * parseFloat(to.slice(to.indexOf(' ') + 1))\n    const w = sx ? rect.width / sx : el.offsetWidth + 1\n    const h = sy ? rect.height / sy : el.offsetHeight + 1\n\n    return new Box({ x, y, width: w, height: h })\n  } else {\n    return new Box(rect)\n  }\n}\n\nexport function animate (\n  el: Element,\n  keyframes: Keyframe[] | PropertyIndexedKeyframes | null,\n  options?: number | KeyframeAnimationOptions\n) {\n  if (typeof el.animate === 'undefined') return { finished: Promise.resolve() }\n\n  const animation = el.animate(keyframes, options)\n  if (typeof animation.finished === 'undefined') {\n    (animation as any).finished = new Promise(resolve => {\n      animation.onfinish = () => {\n        resolve(animation)\n      }\n    })\n  }\n\n  return animation\n}\n"]},"metadata":{},"sourceType":"module"}