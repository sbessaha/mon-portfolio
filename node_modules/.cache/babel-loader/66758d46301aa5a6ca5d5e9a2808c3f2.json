{"ast":null,"code":"// Composables\nimport { makeDelayProps, useDelay } from \"../../composables/delay.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\n\nimport { genericComponent, propsFactory } from \"../../util/index.mjs\";\nexport const makeVHoverProps = propsFactory({\n  disabled: Boolean,\n  modelValue: {\n    type: Boolean,\n    default: null\n  },\n  ...makeDelayProps()\n}, 'VHover');\nexport const VHover = genericComponent()({\n  name: 'VHover',\n  props: makeVHoverProps(),\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isHovering = useProxiedModel(props, 'modelValue');\n    const {\n      runOpenDelay,\n      runCloseDelay\n    } = useDelay(props, value => !props.disabled && (isHovering.value = value));\n    return () => slots.default?.({\n      isHovering: isHovering.value,\n      props: {\n        onMouseenter: runOpenDelay,\n        onMouseleave: runCloseDelay\n      }\n    });\n  }\n\n});","map":{"version":3,"mappings":"AAAA;AAAA,SACSA,cADT,EACyBC,QADzB,QACiC,6BADjC;AACiC,SACxBC,eADwB,QACT,oCADS,C,CAGjC;;AAAA,SACSC,gBADT,EAC2BC,YAD3B,QACuC,sBADvC;AAUA,OAAO,MAAMC,eAAe,GAAGD,YAAY,CAAC;EAC1CE,QAAQ,EAAEC,OADgC;EAE1CC,UAAU,EAAE;IACVC,IAAI,EAAEF,OADI;IAEVG,OAAO,EAAE;EAFC,CAF8B;EAO1C,GAAGV,cAAc;AAPyB,CAAD,EAQxC,QARwC,CAApC;AAUP,OAAO,MAAMW,MAAM,GAAGR,gBAAgB,GAAgB;EACpDS,IAAI,EAAE,QAD8C;EAGpDC,KAAK,EAAER,eAAe,EAH8B;EAKpDS,KAAK,EAAE;IACL,qBAAsBC,KAAc,IAAK;EADpC,CAL6C;;EASpDC,KAAKA,CAAEH,KAAFG,EAAOC,IAAPD,EAAoB;IAAA,IAAX;MAAEE;IAAF,IAASD,IAAE;IACvB,MAAME,UAAU,GAAGjB,eAAe,CAACW,KAAD,EAAQ,YAAR,CAAlC;IACA,MAAM;MAAEO,YAAF;MAAgBC;IAAhB,IAAkCpB,QAAQ,CAACY,KAAD,EAAQE,KAAK,IAAI,CAACF,KAAK,CAACP,QAAP,KAAoBa,UAAU,CAACJ,KAAXI,GAAmBJ,KAAvC,CAAjB,CAAhD;IAEA,OAAO,MAAMG,KAAK,CAACR,OAANQ,GAAgB;MAC3BC,UAAU,EAAEA,UAAU,CAACJ,KADI;MAE3BF,KAAK,EAAE;QACLS,YAAY,EAAEF,YADT;QAELG,YAAY,EAAEF;MAFT;IAFoB,CAAhBH,CAAb;EAOF;;AApBoD,CAAhB,CAA/B","names":["makeDelayProps","useDelay","useProxiedModel","genericComponent","propsFactory","makeVHoverProps","disabled","Boolean","modelValue","type","default","VHover","name","props","emits","value","setup","_ref","slots","isHovering","runOpenDelay","runCloseDelay","onMouseenter","onMouseleave"],"sources":["../../../src/components/VHover/VHover.tsx"],"sourcesContent":["// Composables\nimport { makeDelayProps, useDelay } from '@/composables/delay'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { genericComponent, propsFactory } from '@/util'\n\ntype VHoverSlots = {\n  default: {\n    isHovering: boolean | null\n    props: Record<string, unknown>\n  }\n}\n\nexport const makeVHoverProps = propsFactory({\n  disabled: Boolean,\n  modelValue: {\n    type: Boolean,\n    default: null,\n  },\n\n  ...makeDelayProps(),\n}, 'VHover')\n\nexport const VHover = genericComponent<VHoverSlots>()({\n  name: 'VHover',\n\n  props: makeVHoverProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isHovering = useProxiedModel(props, 'modelValue')\n    const { runOpenDelay, runCloseDelay } = useDelay(props, value => !props.disabled && (isHovering.value = value))\n\n    return () => slots.default?.({\n      isHovering: isHovering.value,\n      props: {\n        onMouseenter: runOpenDelay,\n        onMouseleave: runCloseDelay,\n      },\n    })\n  },\n})\n\nexport type VHover = InstanceType<typeof VHover>\n"]},"metadata":{},"sourceType":"module"}