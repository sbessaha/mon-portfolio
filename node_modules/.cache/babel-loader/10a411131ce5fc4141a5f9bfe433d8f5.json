{"ast":null,"code":"// Utils\nimport { defineComponent as _defineComponent, effectScope, getCurrentInstance, shallowReactive, shallowRef, toRaw, watch, watchEffect } from 'vue';\nimport { consoleWarn } from \"./console.mjs\";\nimport { mergeDeep, toKebabCase } from \"./helpers.mjs\";\nimport { injectSelf } from \"./injectSelf.mjs\";\nimport { DefaultsSymbol, provideDefaults, useDefaults } from \"../composables/defaults.mjs\"; // Types\n\nfunction propIsDefined(vnode, prop) {\n  var _vnode$props, _vnode$props2;\n\n  return ((_vnode$props = vnode.props) == null ? void 0 : _vnode$props.hasOwnProperty(prop)) || ((_vnode$props2 = vnode.props) == null ? void 0 : _vnode$props2.hasOwnProperty(toKebabCase(prop)));\n}\n\nexport const defineComponent = function defineComponent(options) {\n  options._setup = options._setup ?? options.setup;\n\n  if (!options.name) {\n    consoleWarn('The component is missing an explicit name, unable to generate default prop value');\n    return options;\n  }\n\n  if (options._setup) {\n    options.props = options.props ?? {};\n    options.props._as = String;\n\n    options.setup = function setup(props, ctx) {\n      const vm = getCurrentInstance();\n      const defaults = useDefaults();\n\n      const _subcomponentDefaults = shallowRef();\n\n      const _props = shallowReactive({ ...toRaw(props)\n      });\n\n      watchEffect(() => {\n        const globalDefaults = defaults.value.global;\n        const componentDefaults = defaults.value[props._as ?? options.name];\n\n        if (componentDefaults) {\n          const subComponents = Object.entries(componentDefaults).filter(_ref => {\n            let [key] = _ref;\n            return key.startsWith('V');\n          });\n          if (subComponents.length) _subcomponentDefaults.value = Object.fromEntries(subComponents);\n        }\n\n        for (const prop of Object.keys(props)) {\n          let newVal;\n\n          if (propIsDefined(vm.vnode, prop)) {\n            newVal = props[prop];\n          } else {\n            newVal = (componentDefaults == null ? void 0 : componentDefaults[prop]) ?? (globalDefaults == null ? void 0 : globalDefaults[prop]) ?? props[prop];\n          }\n\n          if (_props[prop] !== newVal) {\n            _props[prop] = newVal;\n          }\n        }\n      });\n\n      const setupBindings = options._setup(_props, ctx);\n\n      let scope;\n      watch(_subcomponentDefaults, (val, oldVal) => {\n        if (!val && scope) scope.stop();else if (val && !oldVal) {\n          scope = effectScope();\n          scope.run(() => {\n            var _injectSelf;\n\n            provideDefaults(mergeDeep(((_injectSelf = injectSelf(DefaultsSymbol)) == null ? void 0 : _injectSelf.value) ?? {}, val));\n          });\n        }\n      }, {\n        immediate: true\n      });\n      return setupBindings;\n    };\n  }\n\n  return options;\n};\nexport function genericComponent() {\n  let exposeDefaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  return options => (exposeDefaults ? defineComponent : _defineComponent)(options);\n}","map":{"version":3,"mappings":"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","names":["defineComponent","_defineComponent","effectScope","getCurrentInstance","shallowReactive","shallowRef","toRaw","watch","watchEffect","consoleWarn","mergeDeep","toKebabCase","injectSelf","DefaultsSymbol","provideDefaults","useDefaults","propIsDefined","vnode","prop","props","hasOwnProperty","_vnode$props2","options","_setup","setup","name","_as","String","ctx","vm","defaults","_subcomponentDefaults","_props","globalDefaults","value","global","componentDefaults","subComponents","Object","entries","filter","_ref","key","startsWith","length","fromEntries","keys","newVal","setupBindings","scope","val","oldVal","stop","run","immediate","genericComponent","exposeDefaults"],"sources":["../../src/util/defineComponent.tsx"],"sourcesContent":["// Utils\nimport {\n  defineComponent as _defineComponent,\n  effectScope,\n  getCurrentInstance,\n  shallowReactive,\n  shallowRef,\n  toRaw,\n  watch,\n  watchEffect,\n} from 'vue'\nimport { consoleWarn } from '@/util/console'\nimport { mergeDeep, toKebabCase } from '@/util/helpers'\nimport { injectSelf } from '@/util/injectSelf'\nimport { DefaultsSymbol, provideDefaults, useDefaults } from '@/composables/defaults'\n\n// Types\nimport type {\n  ComponentOptions,\n  ComponentOptionsMixin,\n  ComponentOptionsWithObjectProps,\n  ComponentPropsOptions,\n  ComputedOptions,\n  DefineComponent,\n  EffectScope,\n  EmitsOptions,\n  MethodOptions,\n  VNode,\n  VNodeChild,\n} from 'vue'\n\nfunction propIsDefined (vnode: VNode, prop: string) {\n  return vnode.props?.hasOwnProperty(prop) ||\n  vnode.props?.hasOwnProperty(toKebabCase(prop))\n}\n\nexport const defineComponent = (function defineComponent (options: ComponentOptions) {\n  options._setup = options._setup ?? options.setup\n\n  if (!options.name) {\n    consoleWarn('The component is missing an explicit name, unable to generate default prop value')\n\n    return options\n  }\n\n  if (options._setup) {\n    options.props = options.props ?? {}\n    options.props._as = String\n    options.setup = function setup (props: Record<string, any>, ctx) {\n      const vm = getCurrentInstance()!\n      const defaults = useDefaults()\n\n      const _subcomponentDefaults = shallowRef()\n      const _props = shallowReactive({ ...toRaw(props) })\n      watchEffect(() => {\n        const globalDefaults = defaults.value.global\n        const componentDefaults = defaults.value[props._as ?? options.name!]\n\n        if (componentDefaults) {\n          const subComponents = Object.entries(componentDefaults).filter(([key]) => key.startsWith('V'))\n          if (subComponents.length) _subcomponentDefaults.value = Object.fromEntries(subComponents)\n        }\n\n        for (const prop of Object.keys(props)) {\n          let newVal\n          if (propIsDefined(vm.vnode, prop)) {\n            newVal = props[prop]\n          } else {\n            newVal = componentDefaults?.[prop] ?? globalDefaults?.[prop] ?? props[prop]\n          }\n          if (_props[prop] !== newVal) {\n            _props[prop] = newVal\n          }\n        }\n      })\n\n      const setupBindings = options._setup(_props, ctx)\n\n      let scope: EffectScope\n      watch(_subcomponentDefaults, (val, oldVal) => {\n        if (!val && scope) scope.stop()\n        else if (val && !oldVal) {\n          scope = effectScope()\n          scope.run(() => {\n            provideDefaults(mergeDeep(injectSelf(DefaultsSymbol)?.value ?? {}, val))\n          })\n        }\n      }, { immediate: true })\n\n      return setupBindings\n    }\n  }\n\n  return options\n}) as unknown as typeof _defineComponent\n\ntype ToListeners<T extends string | number | symbol> = { [K in T]: K extends `on${infer U}` ? Uncapitalize<U> : K }[T]\nexport type SlotsToProps<T extends Record<string, Slot>> = {\n  $children: () => (T['default'] | VNodeChild | { [K in keyof T]?: T[K] })\n  'v-slots': new () => { [K in keyof T]?: T[K] | false }\n}/* & { // TODO: individual slots are never converted from the constructor type\n  [K in keyof T as `v-slot:${K & string}`]?: new () => (T[K] | false)\n} */\n\ntype Slot<T extends any[] = any[]> = (...args: T) => VNodeChild\nexport type MakeSlots<T extends Record<string, any[]>> = {\n  [K in keyof T]?: Slot<T[K]>\n}\n\nexport function genericComponent<T extends (new () => {\n  $slots?: Record<string, Slot>\n})> (exposeDefaults = true): <\n  PropsOptions extends Readonly<ComponentPropsOptions>,\n  RawBindings,\n  D,\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = Record<string, any>,\n  EE extends string = string,\n  I = InstanceType<T>,\n  Base = DefineComponent<\n    (I extends Record<'$props', any> ? Omit<PropsOptions, keyof I['$props']> : PropsOptions) & (\n      I extends Record<'$slots', any>\n        ? SlotsToProps<I['$slots']>\n        : {}\n    ),\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E extends any[] ? E : I extends Record<'$props', any> ? Omit<E, ToListeners<keyof I['$props']>> : E,\n    EE\n  >\n>(options: ComponentOptionsWithObjectProps<PropsOptions, RawBindings, D, C, M, Mixin, Extends, E, EE>) => Base & T {\n  return options => (exposeDefaults ? defineComponent : _defineComponent)(options) as any\n}\n"]},"metadata":{},"sourceType":"module"}