{"ast":null,"code":"// Utilities\nimport { computed, shallowRef, toRaw, watchEffect } from 'vue';\nimport { deepEqual, getPropertyFromItem, isPrimitive, omit, pick, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\n\nexport const makeItemsProps = propsFactory({\n  items: {\n    type: Array,\n    default: () => []\n  },\n  itemTitle: {\n    type: [String, Array, Function],\n    default: 'title'\n  },\n  itemValue: {\n    type: [String, Array, Function],\n    default: 'value'\n  },\n  itemChildren: {\n    type: [Boolean, String, Array, Function],\n    default: 'children'\n  },\n  itemProps: {\n    type: [Boolean, String, Array, Function],\n    default: 'props'\n  },\n  returnObject: Boolean,\n  valueComparator: Function\n}, 'list-items');\nexport function transformItem(props, item) {\n  const title = getPropertyFromItem(item, props.itemTitle, item);\n  const value = getPropertyFromItem(item, props.itemValue, title);\n  const children = getPropertyFromItem(item, props.itemChildren);\n  const itemProps = props.itemProps === true ? typeof item === 'object' && item != null && !Array.isArray(item) ? 'children' in item ? omit(item, ['children']) : item : undefined : getPropertyFromItem(item, props.itemProps);\n  const _props = {\n    title,\n    value,\n    ...itemProps\n  };\n  return {\n    title: String(_props.title ?? ''),\n    value: _props.value,\n    props: _props,\n    children: Array.isArray(children) ? transformItems(props, children) : undefined,\n    raw: item\n  };\n}\nexport function transformItems(props, items) {\n  const _props = pick(props, ['itemTitle', 'itemValue', 'itemChildren', 'itemProps', 'returnObject', 'valueComparator']);\n\n  const array = [];\n\n  for (const item of items) {\n    array.push(transformItem(_props, item));\n  }\n\n  return array;\n}\nexport function useItems(props) {\n  const items = computed(() => transformItems(props, props.items));\n  const hasNullItem = computed(() => items.value.some(item => item.value === null));\n  const itemsMap = shallowRef(new Map());\n  const keylessItems = shallowRef([]);\n  watchEffect(() => {\n    const _items = items.value;\n    const map = new Map();\n    const keyless = [];\n\n    for (let i = 0; i < _items.length; i++) {\n      const item = _items[i];\n\n      if (isPrimitive(item.value) || item.value === null) {\n        let values = map.get(item.value);\n\n        if (!values) {\n          values = [];\n          map.set(item.value, values);\n        }\n\n        values.push(item);\n      } else {\n        keyless.push(item);\n      }\n    }\n\n    itemsMap.value = map;\n    keylessItems.value = keyless;\n  });\n\n  function transformIn(value) {\n    // Cache unrefed values outside the loop,\n    // proxy getters can be slow when you call them a billion times\n    const _value = toRaw(value);\n\n    const _items = itemsMap.value;\n    const _allItems = items.value;\n    const _keylessItems = keylessItems.value;\n    const _hasNullItem = hasNullItem.value;\n    const _returnObject = props.returnObject;\n    const hasValueComparator = !!props.valueComparator;\n    const valueComparator = props.valueComparator || deepEqual;\n\n    const _props = pick(props, ['itemTitle', 'itemValue', 'itemChildren', 'itemProps', 'returnObject', 'valueComparator']);\n\n    const returnValue = [];\n\n    main: for (const v of _value) {\n      // When the model value is null, return an InternalItem\n      // based on null only if null is one of the items\n      if (!_hasNullItem && v === null) continue; // String model value means value is a custom input value from combobox\n      // Don't look up existing items if the model value is a string\n\n      if (_returnObject && typeof v === 'string') {\n        returnValue.push(transformItem(_props, v));\n        continue;\n      } // Fast path, items with primitive values and no\n      // custom valueComparator can use a constant-time\n      // map lookup instead of searching the items array\n\n\n      const fastItems = _items.get(v); // Slow path, always use valueComparator.\n      // This is O(n^2) so we really don't want to\n      // do it for more than a couple hundred items.\n\n\n      if (hasValueComparator || !fastItems) {\n        for (const item of hasValueComparator ? _allItems : _keylessItems) {\n          if (valueComparator(v, item.value)) {\n            returnValue.push(item);\n            continue main;\n          }\n        } // Not an existing item, construct it from the model (#4000)\n\n\n        returnValue.push(transformItem(_props, v));\n        continue;\n      }\n\n      returnValue.push(...fastItems);\n    }\n\n    return returnValue;\n  }\n\n  function transformOut(value) {\n    return props.returnObject ? value.map(_ref => {\n      let {\n        raw\n      } = _ref;\n      return raw;\n    }) : value.map(_ref2 => {\n      let {\n        value\n      } = _ref2;\n      return value;\n    });\n  }\n\n  return {\n    items,\n    transformIn,\n    transformOut\n  };\n}","map":{"version":3,"mappings":"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","names":["computed","shallowRef","toRaw","watchEffect","deepEqual","getPropertyFromItem","isPrimitive","omit","pick","propsFactory","makeItemsProps","items","type","Array","default","itemTitle","String","Function","itemValue","itemChildren","Boolean","itemProps","returnObject","valueComparator","transformItem","props","item","title","value","children","isArray","undefined","_props","transformItems","raw","array","push","useItems","hasNullItem","some","itemsMap","Map","keylessItems","_items","map","keyless","i","length","values","get","set","transformIn","_value","_allItems","_keylessItems","_hasNullItem","_returnObject","hasValueComparator","returnValue","main","v","fastItems","transformOut","_ref","_ref2"],"sources":["../../src/composables/list-items.ts"],"sourcesContent":["// Utilities\nimport { computed, shallowRef, toRaw, watchEffect } from 'vue'\nimport { deepEqual, getPropertyFromItem, isPrimitive, omit, pick, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { InternalItem } from '@/composables/filter'\nimport type { Primitive, SelectItemKey } from '@/util'\n\nexport interface ListItem<T = any> extends InternalItem<T> {\n  title: string\n  props: {\n    [key: string]: any\n    title: string\n    value: any\n  }\n  children?: ListItem<T>[]\n}\n\nexport interface ItemProps {\n  items: any[]\n  itemTitle: SelectItemKey\n  itemValue: SelectItemKey\n  itemChildren: SelectItemKey\n  itemProps: SelectItemKey\n  returnObject: boolean\n  valueComparator: typeof deepEqual | undefined\n}\n\n// Composables\nexport const makeItemsProps = propsFactory({\n  items: {\n    type: Array as PropType<ItemProps['items']>,\n    default: () => ([]),\n  },\n  itemTitle: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: 'title',\n  },\n  itemValue: {\n    type: [String, Array, Function] as PropType<SelectItemKey>,\n    default: 'value',\n  },\n  itemChildren: {\n    type: [Boolean, String, Array, Function] as PropType<SelectItemKey>,\n    default: 'children',\n  },\n  itemProps: {\n    type: [Boolean, String, Array, Function] as PropType<SelectItemKey>,\n    default: 'props',\n  },\n  returnObject: Boolean,\n  valueComparator: Function as PropType<typeof deepEqual>,\n}, 'list-items')\n\nexport function transformItem (props: Omit<ItemProps, 'items'>, item: any): ListItem {\n  const title = getPropertyFromItem(item, props.itemTitle, item)\n  const value = getPropertyFromItem(item, props.itemValue, title)\n  const children = getPropertyFromItem(item, props.itemChildren)\n  const itemProps = props.itemProps === true\n    ? typeof item === 'object' && item != null && !Array.isArray(item)\n      ? 'children' in item\n        ? omit(item, ['children'])\n        : item\n      : undefined\n    : getPropertyFromItem(item, props.itemProps)\n\n  const _props = {\n    title,\n    value,\n    ...itemProps,\n  }\n\n  return {\n    title: String(_props.title ?? ''),\n    value: _props.value,\n    props: _props,\n    children: Array.isArray(children) ? transformItems(props, children) : undefined,\n    raw: item,\n  }\n}\n\nexport function transformItems (props: Omit<ItemProps, 'items'>, items: ItemProps['items']) {\n  const _props = pick(props, [\n    'itemTitle',\n    'itemValue',\n    'itemChildren',\n    'itemProps',\n    'returnObject',\n    'valueComparator',\n  ])\n\n  const array: ListItem[] = []\n  for (const item of items) {\n    array.push(transformItem(_props, item))\n  }\n\n  return array\n}\n\nexport function useItems (props: ItemProps) {\n  const items = computed(() => transformItems(props, props.items))\n  const hasNullItem = computed(() => items.value.some(item => item.value === null))\n\n  const itemsMap = shallowRef<Map<Primitive, ListItem[]>>(new Map())\n  const keylessItems = shallowRef<ListItem[]>([])\n  watchEffect(() => {\n    const _items = items.value\n    const map = new Map()\n    const keyless = []\n    for (let i = 0; i < _items.length; i++) {\n      const item = _items[i]\n      if (isPrimitive(item.value) || item.value === null) {\n        let values = map.get(item.value)\n        if (!values) {\n          values = []\n          map.set(item.value, values)\n        }\n        values.push(item)\n      } else {\n        keyless.push(item)\n      }\n    }\n    itemsMap.value = map\n    keylessItems.value = keyless\n  })\n\n  function transformIn (value: any[]): ListItem[] {\n    // Cache unrefed values outside the loop,\n    // proxy getters can be slow when you call them a billion times\n    const _value = toRaw(value)\n    const _items = itemsMap.value\n    const _allItems = items.value\n    const _keylessItems = keylessItems.value\n    const _hasNullItem = hasNullItem.value\n    const _returnObject = props.returnObject\n    const hasValueComparator = !!props.valueComparator\n    const valueComparator = props.valueComparator || deepEqual\n    const _props = pick(props, [\n      'itemTitle',\n      'itemValue',\n      'itemChildren',\n      'itemProps',\n      'returnObject',\n      'valueComparator',\n    ])\n\n    const returnValue: ListItem[] = []\n    main: for (const v of _value) {\n      // When the model value is null, return an InternalItem\n      // based on null only if null is one of the items\n      if (!_hasNullItem && v === null) continue\n\n      // String model value means value is a custom input value from combobox\n      // Don't look up existing items if the model value is a string\n      if (_returnObject && typeof v === 'string') {\n        returnValue.push(transformItem(_props, v))\n        continue\n      }\n\n      // Fast path, items with primitive values and no\n      // custom valueComparator can use a constant-time\n      // map lookup instead of searching the items array\n      const fastItems = _items.get(v)\n\n      // Slow path, always use valueComparator.\n      // This is O(n^2) so we really don't want to\n      // do it for more than a couple hundred items.\n      if (hasValueComparator || !fastItems) {\n        for (const item of (hasValueComparator ? _allItems : _keylessItems)) {\n          if (valueComparator(v, item.value)) {\n            returnValue.push(item)\n            continue main\n          }\n        }\n        // Not an existing item, construct it from the model (#4000)\n        returnValue.push(transformItem(_props, v))\n        continue\n      }\n\n      returnValue.push(...fastItems)\n    }\n\n    return returnValue\n  }\n\n  function transformOut (value: ListItem[]): any[] {\n    return props.returnObject\n      ? value.map(({ raw }) => raw)\n      : value.map(({ value }) => value)\n  }\n\n  return { items, transformIn, transformOut }\n}\n"]},"metadata":{},"sourceType":"module"}