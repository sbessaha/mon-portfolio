{"ast":null,"code":"import { withDirectives as _withDirectives, createVNode as _createVNode, vShow as _vShow } from \"vue\"; // Styles\n\nimport \"./VCounter.css\"; // Components\n\nimport { VSlideYTransition } from \"../transitions/index.mjs\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\"; // Utilities\n\nimport { computed } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const makeVCounterProps = propsFactory({\n  active: Boolean,\n  disabled: Boolean,\n  max: [Number, String],\n  value: {\n    type: [Number, String],\n    default: 0\n  },\n  ...makeComponentProps(),\n  ...makeTransitionProps({\n    transition: {\n      component: VSlideYTransition\n    }\n  })\n}, 'VCounter');\nexport const VCounter = genericComponent()({\n  name: 'VCounter',\n  functional: true,\n  props: makeVCounterProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const counter = computed(() => {\n      return props.max ? `${props.value} / ${props.max}` : String(props.value);\n    });\n    useRender(() => _createVNode(MaybeTransition, {\n      \"transition\": props.transition\n    }, {\n      default: () => [_withDirectives(_createVNode(\"div\", {\n        \"class\": ['v-counter', {\n          'text-error': props.max && !props.disabled && parseFloat(props.value) > parseFloat(props.max)\n        }, props.class],\n        \"style\": props.style\n      }, [slots.default ? slots.default({\n        counter: counter.value,\n        max: props.max,\n        value: props.value\n      }) : counter.value]), [[_vShow, props.active]])]\n    }));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"uGAAA;;AACA,wB,CAEA;;AAAA,SACSA,iBADT,QAC0B,0BAD1B,C,CAGA;;AAAA,SACSC,kBADT,QAC2B,iCAD3B;AAC2B,SAClBC,mBADkB,EACGC,eADH,QACkB,kCADlB,C,CAG3B;;AACA,SAASC,QAAT,QAAyB,KAAzB;AAA8B,SACrBC,gBADqB,EACHC,YADG,EACWC,SADX,QACoB,sBADpB,C,CAG9B;;AAGA,OAAO,MAAMC,iBAAiB,GAAGF,YAAY,CAAC;EAC5CG,MAAM,EAAEC,OADoC;EAE5CC,QAAQ,EAAED,OAFkC;EAG5CE,GAAG,EAAE,CAACC,MAAD,EAASC,MAAT,CAHuC;EAI5CC,KAAK,EAAE;IACLC,IAAI,EAAE,CAACH,MAAD,EAASC,MAAT,CADD;IAELG,OAAO,EAAE;EAFJ,CAJqC;EAS5C,GAAGhB,kBAAkB,EATuB;EAU5C,GAAGC,mBAAmB,CAAC;IACrBgB,UAAU,EAAE;MAAEC,SAAS,EAAEnB;IAAb;EADS,CAAD;AAVsB,CAAD,EAa1C,UAb0C,CAAtC;AAyBP,OAAO,MAAMoB,QAAQ,GAAGf,gBAAgB,GAAkB;EACxDgB,IAAI,EAAE,UADkD;EAGxDC,UAAU,EAAE,IAH4C;EAKxDC,KAAK,EAAEf,iBAAiB,EALgC;;EAOxDgB,KAAKA,CAAED,KAAFC,EAAOC,IAAPD,EAAoB;IAAA,IAAX;MAAEE;IAAF,IAASD,IAAE;IACvB,MAAME,OAAO,GAAGvB,QAAQ,CAAC,MAAM;MAC7B,OAAOmB,KAAK,CAACX,GAANW,GAAY,GAAGA,KAAK,CAACR,KAAK,MAAMQ,KAAK,CAACX,GAAG,EAAzCW,GAA8CT,MAAM,CAACS,KAAK,CAACR,KAAP,CAA3D;IACD,CAFuB,CAAxB;IAIAR,SAAS,CAAC;MAAA,cACsBgB,KAAK,CAACL;IAD5B,GACsC;MAAAD;QAAA,SAGnC,CACL,WADK,EAEL;UACE,cAAcM,KAAK,CAACX,GAANW,IAAa,CAACA,KAAK,CAACZ,QAApBY,IACZK,UAAU,CAACL,KAAK,CAACR,KAAP,CAAVa,GAA0BA,UAAU,CAACL,KAAK,CAACX,GAAP;QAFxC,CAFK,EAMLW,KAAK,CAACM,KAND,CAHmC;QAUzC,SACON,KAAK,CAACO;MAX4B,GAWvB,CAEjBJ,KAAK,CAACT,OAANS,GACEA,KAAK,CAACT,OAANS,CAAc;QACdC,OAAO,EAAEA,OAAO,CAACZ,KADH;QAEdH,GAAG,EAAEW,KAAK,CAACX,GAFG;QAGdG,KAAK,EAAEQ,KAAK,CAACR;MAHC,CAAdW,CADFA,GAMEC,OAAO,CAACZ,KARO,CAXuB,GAmBzB,UAjBRQ,KAAK,CAACd,MAiBE,EAnByB;IAAA,CADtC,CAAD,CAATF;IA0BA,OAAO,EAAP;EACF;;AAvCwD,CAAlB,CAAjC","names":["VSlideYTransition","makeComponentProps","makeTransitionProps","MaybeTransition","computed","genericComponent","propsFactory","useRender","makeVCounterProps","active","Boolean","disabled","max","Number","String","value","type","default","transition","component","VCounter","name","functional","props","setup","_ref","slots","counter","parseFloat","class","style"],"sources":["../../../src/components/VCounter/VCounter.tsx"],"sourcesContent":["// Styles\nimport './VCounter.sass'\n\n// Components\nimport { VSlideYTransition } from '@/components/transitions'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { Component } from 'vue'\n\nexport const makeVCounterProps = propsFactory({\n  active: Boolean,\n  disabled: Boolean,\n  max: [Number, String],\n  value: {\n    type: [Number, String],\n    default: 0,\n  },\n\n  ...makeComponentProps(),\n  ...makeTransitionProps({\n    transition: { component: VSlideYTransition as Component },\n  }),\n}, 'VCounter')\n\nexport type VCounterSlot = {\n  counter: string\n  max: string | number | undefined\n  value: string | number | undefined\n}\n\ntype VCounterSlots = {\n  default: VCounterSlot\n}\n\nexport const VCounter = genericComponent<VCounterSlots>()({\n  name: 'VCounter',\n\n  functional: true,\n\n  props: makeVCounterProps(),\n\n  setup (props, { slots }) {\n    const counter = computed(() => {\n      return props.max ? `${props.value} / ${props.max}` : String(props.value)\n    })\n\n    useRender(() => (\n      <MaybeTransition transition={ props.transition }>\n        <div\n          v-show={ props.active }\n          class={[\n            'v-counter',\n            {\n              'text-error': props.max && !props.disabled &&\n                parseFloat(props.value) > parseFloat(props.max),\n            },\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { slots.default\n            ? slots.default({\n              counter: counter.value,\n              max: props.max,\n              value: props.value,\n            })\n            : counter.value\n          }\n        </div>\n      </MaybeTransition>\n    ))\n\n    return {}\n  },\n})\n\nexport type VCounter = InstanceType<typeof VCounter>\n"]},"metadata":{},"sourceType":"module"}