{"ast":null,"code":"import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VBtn.css\"; // Components\n\nimport { VBtnToggleSymbol } from \"../VBtnToggle/VBtnToggle.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VProgressCircular } from \"../VProgressCircular/index.mjs\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Composables\n\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\";\nimport { makeLoaderProps, useLoader } from \"../../composables/loader.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useSelectLink } from \"../../composables/selectLink.mjs\"; // Utilities\n\nimport { computed } from 'vue';\nimport { defineComponent, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const VBtn = defineComponent({\n  name: 'VBtn',\n  directives: {\n    Ripple\n  },\n  props: {\n    active: Boolean,\n    symbol: {\n      type: null,\n      default: VBtnToggleSymbol\n    },\n    flat: Boolean,\n    icon: [Boolean, String, Function, Object],\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n    block: Boolean,\n    stacked: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true\n    },\n    ...makeBorderProps(),\n    ...makeRoundedProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeLoaderProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({\n      tag: 'button'\n    }),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'elevated'\n    })\n  },\n  emits: {\n    'group:selected': val => true\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      sizeClasses\n    } = useSize(props);\n    const group = useGroupItem(props, props.symbol, false);\n    const link = useLink(props, attrs);\n    const isDisabled = computed(() => (group == null ? void 0 : group.disabled.value) || props.disabled);\n    const isElevated = computed(() => {\n      return props.variant === 'elevated' && !(props.disabled || props.flat || props.border);\n    });\n    useSelectLink(link, group == null ? void 0 : group.select);\n    useRender(() => {\n      var _slots$prepend, _slots$default, _slots$append, _slots$loader;\n\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasColor = !group || group.isSelected.value;\n      const hasPrepend = !!(props.prependIcon || slots.prepend);\n      const hasAppend = !!(props.appendIcon || slots.append);\n      return _withDirectives(_createVNode(Tag, {\n        \"type\": Tag === 'a' ? undefined : 'button',\n        \"class\": ['v-btn', group == null ? void 0 : group.selectedClass.value, {\n          'v-btn--active': props.active,\n          'v-btn--block': props.block,\n          'v-btn--disabled': isDisabled.value,\n          'v-btn--elevated': isElevated.value,\n          'v-btn--flat': props.flat,\n          'v-btn--icon': !!props.icon,\n          'v-btn--loading': props.loading,\n          'v-btn--stacked': props.stacked\n        }, themeClasses.value, borderClasses.value, hasColor ? colorClasses.value : undefined, densityClasses.value, elevationClasses.value, loaderClasses.value, positionClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value],\n        \"style\": [hasColor ? colorStyles.value : undefined, dimensionStyles.value, locationStyles.value],\n        \"disabled\": isDisabled.value || undefined,\n        \"href\": link.href.value,\n        \"onClick\": e => {\n          var _link$navigate;\n\n          if (isDisabled.value) return;\n          (_link$navigate = link.navigate) == null ? void 0 : _link$navigate.call(link, e);\n          group == null ? void 0 : group.toggle();\n        }\n      }, {\n        default: () => [genOverlays(true, 'v-btn'), !props.icon && hasPrepend && _createVNode(VDefaultsProvider, {\n          \"key\": \"prepend\",\n          \"defaults\": {\n            VIcon: {\n              icon: props.prependIcon\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"span\", {\n            \"class\": \"v-btn__prepend\"\n          }, [((_slots$prepend = slots.prepend) == null ? void 0 : _slots$prepend.call(slots)) ?? _createVNode(VIcon, null, null)])]\n        }), _createVNode(\"span\", {\n          \"class\": \"v-btn__content\",\n          \"data-no-activator\": \"\"\n        }, [_createVNode(VDefaultsProvider, {\n          \"key\": \"content\",\n          \"defaults\": {\n            VIcon: {\n              icon: typeof props.icon === 'string' ? props.icon : undefined\n            }\n          }\n        }, {\n          default: () => [((_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots)) ?? (typeof props.icon === 'string' && _createVNode(VIcon, {\n            \"key\": \"icon\"\n          }, null))]\n        })]), !props.icon && hasAppend && _createVNode(VDefaultsProvider, {\n          \"key\": \"append\",\n          \"defaults\": {\n            VIcon: {\n              icon: props.appendIcon\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"span\", {\n            \"class\": \"v-btn__append\"\n          }, [((_slots$append = slots.append) == null ? void 0 : _slots$append.call(slots)) ?? _createVNode(VIcon, null, null)])]\n        }), !!props.loading && _createVNode(\"span\", {\n          \"key\": \"loader\",\n          \"class\": \"v-btn__loader\"\n        }, [((_slots$loader = slots.loader) == null ? void 0 : _slots$loader.call(slots)) ?? _createVNode(VProgressCircular, {\n          \"color\": typeof props.loading === 'boolean' ? undefined : props.loading,\n          \"indeterminate\": true,\n          \"size\": \"23\",\n          \"width\": \"2\"\n        }, null)])]\n      }), [[_resolveDirective(\"ripple\"), !isDisabled.value && props.ripple, null]]);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VBtnToggleSymbol","VDefaultsProvider","VIcon","VProgressCircular","Ripple","genOverlays","makeVariantProps","useVariant","IconValue","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeGroupItemProps","useGroupItem","makeLoaderProps","useLoader","makeLocationProps","useLocation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeRouterProps","useLink","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","useSelectLink","computed","defineComponent","useRender","VBtn","name","directives","props","active","Boolean","symbol","type","default","flat","icon","String","Function","Object","prependIcon","appendIcon","block","stacked","ripple","tag","variant","emits","val","setup","attrs","slots","_ref","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","loaderClasses","locationStyles","positionClasses","roundedClasses","sizeClasses","group","link","isDisabled","disabled","value","isElevated","border","select","Tag","isLink","hasColor","isSelected","hasPrepend","prepend","hasAppend","append","undefined","selectedClass","loading","href","e","navigate","toggle","_createVNode","loader"],"sources":["../../../src/components/VBtn/VBtn.tsx"],"sourcesContent":["// Styles\nimport './VBtn.sass'\n\n// Components\nimport { VBtnToggleSymbol } from '@/components/VBtnToggle/VBtnToggle'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VProgressCircular } from '@/components/VProgressCircular'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { IconValue } from '@/composables/icons'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupItemProps, useGroupItem } from '@/composables/group'\nimport { makeLoaderProps, useLoader } from '@/composables/loader'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useSelectLink } from '@/composables/selectLink'\n\n// Utilities\nimport { computed } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const VBtn = defineComponent({\n  name: 'VBtn',\n\n  directives: { Ripple },\n\n  props: {\n    active: Boolean,\n    symbol: {\n      type: null,\n      default: VBtnToggleSymbol,\n    },\n    flat: Boolean,\n    icon: [Boolean, String, Function, Object] as PropType<boolean | IconValue>,\n    prependIcon: IconValue,\n    appendIcon: IconValue,\n\n    block: Boolean,\n    stacked: Boolean,\n\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n\n    ...makeBorderProps(),\n    ...makeRoundedProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeGroupItemProps(),\n    ...makeLoaderProps(),\n    ...makeLocationProps(),\n    ...makePositionProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'button' }),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'elevated' } as const),\n  },\n\n  emits: {\n    'group:selected': (val: { value: boolean }) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { loaderClasses } = useLoader(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses } = useSize(props)\n    const group = useGroupItem(props, props.symbol, false)\n    const link = useLink(props, attrs)\n    const isDisabled = computed(() => group?.disabled.value || props.disabled)\n    const isElevated = computed(() => {\n      return props.variant === 'elevated' && !(props.disabled || props.flat || props.border)\n    })\n\n    useSelectLink(link, group?.select)\n\n    useRender(() => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasColor = !group || group.isSelected.value\n      const hasPrepend = !!(props.prependIcon || slots.prepend)\n      const hasAppend = !!(props.appendIcon || slots.append)\n\n      return (\n        <Tag\n          type={ Tag === 'a' ? undefined : 'button' }\n          class={[\n            'v-btn',\n            group?.selectedClass.value,\n            {\n              'v-btn--active': props.active,\n              'v-btn--block': props.block,\n              'v-btn--disabled': isDisabled.value,\n              'v-btn--elevated': isElevated.value,\n              'v-btn--flat': props.flat,\n              'v-btn--icon': !!props.icon,\n              'v-btn--loading': props.loading,\n              'v-btn--stacked': props.stacked,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            hasColor ? colorClasses.value : undefined,\n            densityClasses.value,\n            elevationClasses.value,\n            loaderClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            hasColor ? colorStyles.value : undefined,\n            dimensionStyles.value,\n            locationStyles.value,\n          ]}\n          disabled={ isDisabled.value || undefined }\n          href={ link.href.value }\n          v-ripple={[\n            !isDisabled.value && props.ripple,\n            null,\n            props.icon ? ['center'] : null,\n          ]}\n          onClick={ (e: MouseEvent) => {\n            if (isDisabled.value) return\n\n            link.navigate?.(e)\n            group?.toggle()\n          } }\n        >\n          { genOverlays(true, 'v-btn') }\n\n          { !props.icon && hasPrepend && (\n            <VDefaultsProvider\n              key=\"prepend\"\n              defaults={{\n                VIcon: {\n                  icon: props.prependIcon,\n                },\n              }}\n            >\n              <span class=\"v-btn__prepend\">\n                { slots.prepend?.() ?? (<VIcon />) }\n              </span>\n            </VDefaultsProvider>\n          ) }\n\n          <span class=\"v-btn__content\" data-no-activator=\"\">\n            <VDefaultsProvider\n              key=\"content\"\n              defaults={{\n                VIcon: {\n                  icon: typeof props.icon === 'string'\n                    ? props.icon\n                    : undefined,\n                },\n              }}\n            >\n              { slots.default?.() ?? (\n                typeof props.icon === 'string' && (\n                  <VIcon key=\"icon\" />\n                )\n              ) }\n            </VDefaultsProvider>\n          </span>\n\n          { !props.icon && hasAppend && (\n            <VDefaultsProvider\n              key=\"append\"\n              defaults={{\n                VIcon: {\n                  icon: props.appendIcon,\n                },\n              }}\n            >\n              <span class=\"v-btn__append\">\n                { slots.append?.() ?? (<VIcon />) }\n              </span>\n            </VDefaultsProvider>\n          ) }\n\n          { !!props.loading && (\n            <span key=\"loader\" class=\"v-btn__loader\">\n              { slots.loader?.() ?? (\n                <VProgressCircular\n                  color={ typeof props.loading === 'boolean' ? undefined : props.loading }\n                  indeterminate\n                  size=\"23\"\n                  width=\"2\"\n                />\n              ) }\n            </span>\n          ) }\n        </Tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBtn = InstanceType<typeof VBtn>\n"]},"metadata":{},"sourceType":"module"}