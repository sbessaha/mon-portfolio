{"ast":null,"code":"import { mergeProps as _mergeProps, Fragment as _Fragment, withDirectives as _withDirectives, vShow as _vShow, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VField.css\"; // Components\n\nimport { VFieldLabel } from \"./VFieldLabel.mjs\";\nimport { VExpandXTransition } from \"../transitions/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { useInputIcon } from \"../VInput/InputIcon.mjs\"; // Composables\n\nimport { useBackgroundColor, useTextColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeFocusProps, useFocus } from \"../../composables/focus.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { LoaderSlot, makeLoaderProps, useLoader } from \"../../composables/loader.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\n\nimport { computed, ref, toRef, watch } from 'vue';\nimport { animate, convertToUnit, EventProp, genericComponent, getUid, isOn, nullifyTransforms, pick, propsFactory, standardEasing, useRender } from \"../../util/index.mjs\"; // Types\n\nconst allowedVariants = ['underlined', 'outlined', 'filled', 'solo', 'solo-inverted', 'solo-filled', 'plain'];\nexport const makeVFieldProps = propsFactory({\n  appendInnerIcon: IconValue,\n  bgColor: String,\n  clearable: Boolean,\n  clearIcon: {\n    type: IconValue,\n    default: '$clear'\n  },\n  active: Boolean,\n  centerAffix: {\n    type: Boolean,\n    default: undefined\n  },\n  color: String,\n  baseColor: String,\n  dirty: Boolean,\n  disabled: {\n    type: Boolean,\n    default: null\n  },\n  error: Boolean,\n  flat: Boolean,\n  label: String,\n  persistentClear: Boolean,\n  prependInnerIcon: IconValue,\n  reverse: Boolean,\n  singleLine: Boolean,\n  variant: {\n    type: String,\n    default: 'filled',\n    validator: v => allowedVariants.includes(v)\n  },\n  'onClick:clear': EventProp(),\n  'onClick:appendInner': EventProp(),\n  'onClick:prependInner': EventProp(),\n  ...makeComponentProps(),\n  ...makeLoaderProps(),\n  ...makeRoundedProps(),\n  ...makeThemeProps()\n}, 'VField');\nexport const VField = genericComponent()({\n  name: 'VField',\n  inheritAttrs: false,\n  props: {\n    id: String,\n    ...makeFocusProps(),\n    ...makeVFieldProps()\n  },\n  emits: {\n    'update:focused': focused => true,\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      focusClasses,\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const {\n      InputIcon\n    } = useInputIcon(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      rtlClasses\n    } = useRtl();\n    const isActive = computed(() => props.dirty || props.active);\n    const hasLabel = computed(() => !!(props.label || slots.label));\n    const hasFloatingLabel = computed(() => !props.singleLine && hasLabel.value);\n    const uid = getUid();\n    const id = computed(() => props.id || `input-${uid}`);\n    const messagesId = computed(() => `${id.value}-messages`);\n    const labelRef = ref();\n    const floatingLabelRef = ref();\n    const controlRef = ref();\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant));\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'bgColor'));\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(computed(() => {\n      return props.error || props.disabled ? undefined : isActive.value && isFocused.value ? props.color : props.baseColor;\n    }));\n    watch(isActive, val => {\n      if (hasFloatingLabel.value) {\n        const el = labelRef.value.$el;\n        const targetEl = floatingLabelRef.value.$el;\n        requestAnimationFrame(() => {\n          const rect = nullifyTransforms(el);\n          const targetRect = targetEl.getBoundingClientRect();\n          const x = targetRect.x - rect.x;\n          const y = targetRect.y - rect.y - (rect.height / 2 - targetRect.height / 2);\n          const targetWidth = targetRect.width / 0.75;\n          const width = Math.abs(targetWidth - rect.width) > 1 ? {\n            maxWidth: convertToUnit(targetWidth)\n          } : undefined;\n          const style = getComputedStyle(el);\n          const targetStyle = getComputedStyle(targetEl);\n          const duration = parseFloat(style.transitionDuration) * 1000 || 150;\n          const scale = parseFloat(targetStyle.getPropertyValue('--v-field-label-scale'));\n          const color = targetStyle.getPropertyValue('color');\n          el.style.visibility = 'visible';\n          targetEl.style.visibility = 'hidden';\n          animate(el, {\n            transform: `translate(${x}px, ${y}px) scale(${scale})`,\n            color,\n            ...width\n          }, {\n            duration,\n            easing: standardEasing,\n            direction: val ? 'normal' : 'reverse'\n          }).finished.then(() => {\n            el.style.removeProperty('visibility');\n            targetEl.style.removeProperty('visibility');\n          });\n        });\n      }\n    }, {\n      flush: 'post'\n    });\n    const slotProps = computed(() => ({\n      isActive,\n      isFocused,\n      controlRef,\n      blur,\n      focus\n    }));\n\n    function onClick(e) {\n      if (e.target !== document.activeElement) {\n        e.preventDefault();\n      }\n    }\n\n    useRender(() => {\n      const isOutlined = props.variant === 'outlined';\n      const hasPrepend = !!(slots['prepend-inner'] || props.prependInnerIcon);\n      const hasClear = !!(props.clearable || slots.clear) && !props.disabled;\n      const hasAppend = !!(slots['append-inner'] || props.appendInnerIcon || hasClear);\n\n      const label = () => slots.label ? slots.label({ ...slotProps.value,\n        label: props.label,\n        props: {\n          for: id.value\n        }\n      }) : props.label;\n\n      return _createVNode(\"div\", _mergeProps({\n        \"class\": ['v-field', {\n          'v-field--active': isActive.value,\n          'v-field--appended': hasAppend,\n          'v-field--center-affix': props.centerAffix ?? !isPlainOrUnderlined.value,\n          'v-field--disabled': props.disabled,\n          'v-field--dirty': props.dirty,\n          'v-field--error': props.error,\n          'v-field--flat': props.flat,\n          'v-field--has-background': !!props.bgColor,\n          'v-field--persistent-clear': props.persistentClear,\n          'v-field--prepended': hasPrepend,\n          'v-field--reverse': props.reverse,\n          'v-field--single-line': props.singleLine,\n          'v-field--no-label': !label(),\n          [`v-field--variant-${props.variant}`]: true\n        }, themeClasses.value, backgroundColorClasses.value, focusClasses.value, loaderClasses.value, roundedClasses.value, rtlClasses.value, props.class],\n        \"style\": [backgroundColorStyles.value, props.style],\n        \"onClick\": onClick\n      }, attrs), [_createVNode(\"div\", {\n        \"class\": \"v-field__overlay\"\n      }, null), _createVNode(LoaderSlot, {\n        \"name\": \"v-field\",\n        \"active\": !!props.loading,\n        \"color\": props.error ? 'error' : typeof props.loading === 'string' ? props.loading : props.color\n      }, {\n        default: slots.loader\n      }), hasPrepend && _createVNode(\"div\", {\n        \"key\": \"prepend\",\n        \"class\": \"v-field__prepend-inner\"\n      }, [props.prependInnerIcon && _createVNode(InputIcon, {\n        \"key\": \"prepend-icon\",\n        \"name\": \"prependInner\"\n      }, null), slots['prepend-inner']?.(slotProps.value)]), _createVNode(\"div\", {\n        \"class\": \"v-field__field\",\n        \"data-no-activator\": \"\"\n      }, [['filled', 'solo', 'solo-inverted', 'solo-filled'].includes(props.variant) && hasFloatingLabel.value && _createVNode(VFieldLabel, {\n        \"key\": \"floating-label\",\n        \"ref\": floatingLabelRef,\n        \"class\": [textColorClasses.value],\n        \"floating\": true,\n        \"for\": id.value,\n        \"style\": textColorStyles.value\n      }, {\n        default: () => [label()]\n      }), hasLabel.value && _createVNode(VFieldLabel, {\n        \"key\": \"label\",\n        \"ref\": labelRef,\n        \"for\": id.value\n      }, {\n        default: () => [label()]\n      }), slots.default?.({ ...slotProps.value,\n        props: {\n          id: id.value,\n          class: 'v-field__input',\n          'aria-describedby': messagesId.value\n        },\n        focus,\n        blur\n      })]), hasClear && _createVNode(VExpandXTransition, {\n        \"key\": \"clear\"\n      }, {\n        default: () => [_withDirectives(_createVNode(\"div\", {\n          \"class\": \"v-field__clearable\",\n          \"onMousedown\": e => {\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        }, [_createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VIcon: {\n              icon: props.clearIcon\n            }\n          }\n        }, {\n          default: () => [slots.clear ? slots.clear({ ...slotProps.value,\n            props: {\n              onFocus: focus,\n              onBlur: blur,\n              onClick: props['onClick:clear']\n            }\n          }) : _createVNode(InputIcon, {\n            \"name\": \"clear\",\n            \"onFocus\": focus,\n            \"onBlur\": blur\n          }, null)]\n        })]), [[_vShow, props.dirty]])]\n      }), hasAppend && _createVNode(\"div\", {\n        \"key\": \"append\",\n        \"class\": \"v-field__append-inner\"\n      }, [slots['append-inner']?.(slotProps.value), props.appendInnerIcon && _createVNode(InputIcon, {\n        \"key\": \"append-icon\",\n        \"name\": \"appendInner\"\n      }, null)]), _createVNode(\"div\", {\n        \"class\": ['v-field__outline', textColorClasses.value],\n        \"style\": textColorStyles.value\n      }, [isOutlined && _createVNode(_Fragment, null, [_createVNode(\"div\", {\n        \"class\": \"v-field__outline__start\"\n      }, null), hasFloatingLabel.value && _createVNode(\"div\", {\n        \"class\": \"v-field__outline__notch\"\n      }, [_createVNode(VFieldLabel, {\n        \"ref\": floatingLabelRef,\n        \"floating\": true,\n        \"for\": id.value\n      }, {\n        default: () => [label()]\n      })]), _createVNode(\"div\", {\n        \"class\": \"v-field__outline__end\"\n      }, null)]), isPlainOrUnderlined.value && hasFloatingLabel.value && _createVNode(VFieldLabel, {\n        \"ref\": floatingLabelRef,\n        \"floating\": true,\n        \"for\": id.value\n      }, {\n        default: () => [label()]\n      })])]);\n    });\n    return {\n      controlRef\n    };\n  }\n\n}); // TODO: this is kinda slow, might be better to implicitly inherit props instead\n\nexport function filterFieldProps(attrs) {\n  const keys = Object.keys(VField.props).filter(k => !isOn(k) && k !== 'class' && k !== 'style');\n  return pick(attrs, keys);\n}","map":{"version":3,"mappings":"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","names":["VFieldLabel","VExpandXTransition","VDefaultsProvider","useInputIcon","useBackgroundColor","useTextColor","makeComponentProps","makeFocusProps","useFocus","IconValue","LoaderSlot","makeLoaderProps","useLoader","useRtl","makeRoundedProps","useRounded","makeThemeProps","provideTheme","computed","ref","toRef","watch","animate","convertToUnit","EventProp","genericComponent","getUid","isOn","nullifyTransforms","pick","propsFactory","standardEasing","useRender","allowedVariants","makeVFieldProps","appendInnerIcon","bgColor","String","clearable","Boolean","clearIcon","type","default","active","centerAffix","undefined","color","baseColor","dirty","disabled","error","flat","label","persistentClear","prependInnerIcon","reverse","singleLine","variant","validator","v","includes","VField","name","inheritAttrs","props","id","emits","focused","value","setup","_ref","attrs","emit","slots","themeClasses","loaderClasses","focusClasses","isFocused","focus","blur","InputIcon","roundedClasses","rtlClasses","isActive","hasLabel","hasFloatingLabel","uid","messagesId","labelRef","floatingLabelRef","controlRef","isPlainOrUnderlined","backgroundColorClasses","backgroundColorStyles","textColorClasses","textColorStyles","val","el","$el","targetEl","requestAnimationFrame","rect","targetRect","getBoundingClientRect","x","y","height","targetWidth","width","Math","abs","maxWidth","style","getComputedStyle","targetStyle","duration","parseFloat","transitionDuration","scale","getPropertyValue","visibility","transform","easing","direction","finished","then","removeProperty","flush","slotProps","onClick","e","target","document","activeElement","preventDefault","isOutlined","hasPrepend","hasClear","clear","hasAppend","for","class","loading","loader","_createVNode","stopPropagation","VIcon","icon","onFocus","onBlur","filterFieldProps","keys","Object","filter","k"],"sources":["../../../src/components/VField/VField.tsx"],"sourcesContent":["// Styles\nimport './VField.sass'\n\n// Components\nimport { VFieldLabel } from './VFieldLabel'\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { useInputIcon } from '@/components/VInput/InputIcon'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeFocusProps, useFocus } from '@/composables/focus'\nimport { IconValue } from '@/composables/icons'\nimport { LoaderSlot, makeLoaderProps, useLoader } from '@/composables/loader'\nimport { useRtl } from '@/composables/locale'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, ref, toRef, watch } from 'vue'\nimport {\n  animate,\n  convertToUnit,\n  EventProp,\n  genericComponent,\n  getUid,\n  isOn,\n  nullifyTransforms,\n  pick,\n  propsFactory,\n  standardEasing,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { LoaderSlotProps } from '@/composables/loader'\nimport type { GenericProps } from '@/util'\n\nconst allowedVariants = ['underlined', 'outlined', 'filled', 'solo', 'solo-inverted', 'solo-filled', 'plain'] as const\ntype Variant = typeof allowedVariants[number]\n\nexport interface DefaultInputSlot {\n  isActive: Ref<boolean>\n  isFocused: Ref<boolean>\n  controlRef: Ref<HTMLElement | undefined>\n  focus: () => void\n  blur: () => void\n}\n\nexport interface VFieldSlot extends DefaultInputSlot {\n  props: Record<string, unknown>\n}\n\nexport const makeVFieldProps = propsFactory({\n  appendInnerIcon: IconValue,\n  bgColor: String,\n  clearable: Boolean,\n  clearIcon: {\n    type: IconValue,\n    default: '$clear',\n  },\n  active: Boolean,\n  centerAffix: {\n    type: Boolean,\n    default: undefined,\n  },\n  color: String,\n  baseColor: String,\n  dirty: Boolean,\n  disabled: {\n    type: Boolean,\n    default: null,\n  },\n  error: Boolean,\n  flat: Boolean,\n  label: String,\n  persistentClear: Boolean,\n  prependInnerIcon: IconValue,\n  reverse: Boolean,\n  singleLine: Boolean,\n  variant: {\n    type: String as PropType<Variant>,\n    default: 'filled',\n    validator: (v: any) => allowedVariants.includes(v),\n  },\n\n  'onClick:clear': EventProp<[MouseEvent]>(),\n  'onClick:appendInner': EventProp<[MouseEvent]>(),\n  'onClick:prependInner': EventProp<[MouseEvent]>(),\n\n  ...makeComponentProps(),\n  ...makeLoaderProps(),\n  ...makeRoundedProps(),\n  ...makeThemeProps(),\n}, 'VField')\n\nexport type VFieldSlots = {\n  clear: DefaultInputSlot & { props: Record<string, any> }\n  'prepend-inner': DefaultInputSlot\n  'append-inner': DefaultInputSlot\n  label: DefaultInputSlot & { label: string | undefined, props: Record<string, any> }\n  loader: LoaderSlotProps\n  default: VFieldSlot\n}\n\nexport const VField = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VFieldSlots\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VField',\n\n  inheritAttrs: false,\n\n  props: {\n    id: String,\n\n    ...makeFocusProps(),\n    ...makeVFieldProps(),\n  },\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { loaderClasses } = useLoader(props)\n    const { focusClasses, isFocused, focus, blur } = useFocus(props)\n    const { InputIcon } = useInputIcon(props)\n    const { roundedClasses } = useRounded(props)\n    const { rtlClasses } = useRtl()\n\n    const isActive = computed(() => props.dirty || props.active)\n    const hasLabel = computed(() => !!(props.label || slots.label))\n    const hasFloatingLabel = computed(() => !props.singleLine && hasLabel.value)\n\n    const uid = getUid()\n    const id = computed(() => props.id || `input-${uid}`)\n    const messagesId = computed(() => `${id.value}-messages`)\n\n    const labelRef = ref<VFieldLabel>()\n    const floatingLabelRef = ref<VFieldLabel>()\n    const controlRef = ref<HTMLElement>()\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant))\n\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { textColorClasses, textColorStyles } = useTextColor(computed(() => {\n      return props.error || props.disabled ? undefined\n        : isActive.value && isFocused.value ? props.color\n        : props.baseColor\n    }))\n\n    watch(isActive, val => {\n      if (hasFloatingLabel.value) {\n        const el: HTMLElement = labelRef.value!.$el\n        const targetEl: HTMLElement = floatingLabelRef.value!.$el\n\n        requestAnimationFrame(() => {\n          const rect = nullifyTransforms(el)\n          const targetRect = targetEl.getBoundingClientRect()\n\n          const x = targetRect.x - rect.x\n          const y = targetRect.y - rect.y - (rect.height / 2 - targetRect.height / 2)\n\n          const targetWidth = targetRect.width / 0.75\n          const width = Math.abs(targetWidth - rect.width) > 1\n            ? { maxWidth: convertToUnit(targetWidth) }\n            : undefined\n\n          const style = getComputedStyle(el)\n          const targetStyle = getComputedStyle(targetEl)\n          const duration = parseFloat(style.transitionDuration) * 1000 || 150\n          const scale = parseFloat(targetStyle.getPropertyValue('--v-field-label-scale'))\n          const color = targetStyle.getPropertyValue('color')\n\n          el.style.visibility = 'visible'\n          targetEl.style.visibility = 'hidden'\n\n          animate(el, {\n            transform: `translate(${x}px, ${y}px) scale(${scale})`,\n            color,\n            ...width,\n          }, {\n            duration,\n            easing: standardEasing,\n            direction: val ? 'normal' : 'reverse',\n          }).finished.then(() => {\n            el.style.removeProperty('visibility')\n            targetEl.style.removeProperty('visibility')\n          })\n        })\n      }\n    }, { flush: 'post' })\n\n    const slotProps = computed<DefaultInputSlot>(() => ({\n      isActive,\n      isFocused,\n      controlRef,\n      blur,\n      focus,\n    }))\n\n    function onClick (e: MouseEvent) {\n      if (e.target !== document.activeElement) {\n        e.preventDefault()\n      }\n    }\n\n    useRender(() => {\n      const isOutlined = props.variant === 'outlined'\n      const hasPrepend = !!(slots['prepend-inner'] || props.prependInnerIcon)\n      const hasClear = !!(props.clearable || slots.clear) && !props.disabled\n      const hasAppend = !!(slots['append-inner'] || props.appendInnerIcon || hasClear)\n      const label = () => (\n        slots.label\n          ? slots.label({\n            ...slotProps.value,\n            label: props.label,\n            props: { for: id.value },\n          })\n          : props.label\n      )\n\n      return (\n        <div\n          class={[\n            'v-field',\n            {\n              'v-field--active': isActive.value,\n              'v-field--appended': hasAppend,\n              'v-field--center-affix': props.centerAffix ?? !isPlainOrUnderlined.value,\n              'v-field--disabled': props.disabled,\n              'v-field--dirty': props.dirty,\n              'v-field--error': props.error,\n              'v-field--flat': props.flat,\n              'v-field--has-background': !!props.bgColor,\n              'v-field--persistent-clear': props.persistentClear,\n              'v-field--prepended': hasPrepend,\n              'v-field--reverse': props.reverse,\n              'v-field--single-line': props.singleLine,\n              'v-field--no-label': !label(),\n              [`v-field--variant-${props.variant}`]: true,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            focusClasses.value,\n            loaderClasses.value,\n            roundedClasses.value,\n            rtlClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n          onClick={ onClick }\n          { ...attrs }\n        >\n          <div class=\"v-field__overlay\" />\n\n          <LoaderSlot\n            name=\"v-field\"\n            active={ !!props.loading }\n            color={ props.error ? 'error' : (typeof props.loading === 'string' ? props.loading : props.color) }\n            v-slots={{ default: slots.loader }}\n          />\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-field__prepend-inner\">\n              { props.prependInnerIcon && (\n                <InputIcon\n                  key=\"prepend-icon\"\n                  name=\"prependInner\"\n                />\n              )}\n\n              { slots['prepend-inner']?.(slotProps.value) }\n            </div>\n          )}\n\n          <div class=\"v-field__field\" data-no-activator=\"\">\n            {['filled', 'solo', 'solo-inverted', 'solo-filled'].includes(props.variant) && hasFloatingLabel.value && (\n              <VFieldLabel\n                key=\"floating-label\"\n                ref={ floatingLabelRef }\n                class={[textColorClasses.value]}\n                floating\n                for={ id.value }\n                style={ textColorStyles.value }\n              >\n                { label() }\n              </VFieldLabel>\n            )}\n\n            { hasLabel.value && (\n              <VFieldLabel key=\"label\" ref={ labelRef } for={ id.value }>\n                { label() }\n              </VFieldLabel>\n            )}\n\n            { slots.default?.({\n              ...slotProps.value,\n              props: {\n                id: id.value,\n                class: 'v-field__input',\n                'aria-describedby': messagesId.value,\n              },\n              focus,\n              blur,\n            } as VFieldSlot)}\n          </div>\n\n          { hasClear && (\n            <VExpandXTransition key=\"clear\">\n              <div\n                class=\"v-field__clearable\"\n                v-show={ props.dirty }\n                onMousedown={ (e: MouseEvent) => {\n                  e.preventDefault()\n                  e.stopPropagation()\n                }}\n              >\n              <VDefaultsProvider\n                defaults={{\n                  VIcon: {\n                    icon: props.clearIcon,\n                  },\n                }}\n              >\n                { slots.clear\n                  ? slots.clear({\n                    ...slotProps.value,\n                    props: {\n                      onFocus: focus,\n                      onBlur: blur,\n                      onClick: props['onClick:clear'],\n                    },\n                  })\n                  : (\n                    <InputIcon\n                      name=\"clear\"\n                      onFocus={ focus }\n                      onBlur={ blur }\n                    />\n                  )}\n                </VDefaultsProvider>\n              </div>\n            </VExpandXTransition>\n          )}\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-field__append-inner\">\n              { slots['append-inner']?.(slotProps.value) }\n\n              { props.appendInnerIcon && (\n                <InputIcon\n                  key=\"append-icon\"\n                  name=\"appendInner\"\n                />\n              )}\n            </div>\n          )}\n\n          <div\n            class={[\n              'v-field__outline',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n          >\n            { isOutlined && (\n              <>\n                <div class=\"v-field__outline__start\" />\n\n                { hasFloatingLabel.value && (\n                  <div class=\"v-field__outline__notch\">\n                    <VFieldLabel ref={ floatingLabelRef } floating for={ id.value }>\n                      { label() }\n                    </VFieldLabel>\n                  </div>\n                )}\n\n                <div class=\"v-field__outline__end\" />\n              </>\n            )}\n\n            { isPlainOrUnderlined.value && hasFloatingLabel.value && (\n              <VFieldLabel ref={ floatingLabelRef } floating for={ id.value }>\n                { label() }\n              </VFieldLabel>\n            )}\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      controlRef,\n    }\n  },\n})\n\nexport type VField = InstanceType<typeof VField>\n\n// TODO: this is kinda slow, might be better to implicitly inherit props instead\nexport function filterFieldProps (attrs: Record<string, unknown>) {\n  const keys = Object.keys(VField.props).filter(k => !isOn(k) && k !== 'class' && k !== 'style')\n  return pick(attrs, keys)\n}\n"]},"metadata":{},"sourceType":"module"}