{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Composables\n\nimport { useTextColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\n\nimport { toRef } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVListSubheaderProps = propsFactory({\n  color: String,\n  inset: Boolean,\n  sticky: Boolean,\n  title: String,\n  ...makeComponentProps(),\n  ...makeTagProps()\n}, 'VListSubheader');\nexport const VListSubheader = genericComponent()({\n  name: 'VListSubheader',\n  props: makeVListSubheaderProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'color'));\n    useRender(() => {\n      const hasText = !!(slots.default || props.title);\n      return _createVNode(props.tag, {\n        \"class\": ['v-list-subheader', {\n          'v-list-subheader--inset': props.inset,\n          'v-list-subheader--sticky': props.sticky\n        }, textColorClasses.value, props.class],\n        \"style\": [{\n          textColorStyles\n        }, props.style]\n      }, {\n        default: () => [hasText && _createVNode(\"div\", {\n          \"class\": \"v-list-subheader__text\"\n        }, [slots.default?.() ?? props.title])]\n      });\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;AAAA,SACSA,YADT,QACqB,6BADrB;AACqB,SACZC,kBADY,QACM,iCADN;AACM,SAClBC,YADkB,QACN,2BADM,C,CAG3B;;AACA,SAASC,KAAT,QAAsB,KAAtB;AAA2B,SAClBC,gBADkB,EACAC,YADA,EACcC,SADd,QACuB,sBADvB;AAG3B,OAAO,MAAMC,uBAAuB,GAAGF,YAAY,CAAC;EAClDG,KAAK,EAAEC,MAD2C;EAElDC,KAAK,EAAEC,OAF2C;EAGlDC,MAAM,EAAED,OAH0C;EAIlDE,KAAK,EAAEJ,MAJ2C;EAMlD,GAAGR,kBAAkB,EAN6B;EAOlD,GAAGC,YAAY;AAPmC,CAAD,EAQhD,gBARgD,CAA5C;AAUP,OAAO,MAAMY,cAAc,GAAGV,gBAAgB,GAAG;EAC/CW,IAAI,EAAE,gBADyC;EAG/CC,KAAK,EAAET,uBAAuB,EAHiB;;EAK/CU,KAAKA,CAAED,KAAFC,EAAOC,IAAPD,EAAoB;IAAA,IAAX;MAAEE;IAAF,IAASD,IAAE;IACvB,MAAM;MAAEE,gBAAF;MAAoBC;IAApB,IAAwCrB,YAAY,CAACG,KAAK,CAACa,KAAD,EAAQ,OAAR,CAAN,CAA1D;IAEAV,SAAS,CAAC,MAAM;MACd,MAAMgB,OAAO,GAAG,CAAC,EAAEH,KAAK,CAACI,OAANJ,IAAiBH,KAAK,CAACH,KAAzB,CAAjB;MAEA;QAAA,SAEW,CACL,kBADK,EAEL;UACE,2BAA2BG,KAAK,CAACN,KADnC;UAEE,4BAA4BM,KAAK,CAACJ;QAFpC,CAFK,EAMLQ,gBAAgB,CAACI,KANZ,EAOLR,KAAK,CAACS,KAPD,CAFX;QAUK,SACM,CACL;UAAEJ;QAAF,CADK,EAELL,KAAK,CAACU,KAFD;MAXX,GAcK;QAAAH,gBAECD,OAAO;UAAA;QAAA,IAEHH,KAAK,CAACI,OAANJ,QAAqBH,KAAK,CAACH,KAFxB,EAFR;MAAA,CAdL;IAuBD,CA1BQ,CAATP;IA4BA,OAAO,EAAP;EACF;;AArC+C,CAAH,CAAvC","names":["useTextColor","makeComponentProps","makeTagProps","toRef","genericComponent","propsFactory","useRender","makeVListSubheaderProps","color","String","inset","Boolean","sticky","title","VListSubheader","name","props","setup","_ref","slots","textColorClasses","textColorStyles","hasText","default","value","class","style"],"sources":["../../../src/components/VList/VListSubheader.tsx"],"sourcesContent":["// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVListSubheaderProps = propsFactory({\n  color: String,\n  inset: Boolean,\n  sticky: Boolean,\n  title: String,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VListSubheader')\n\nexport const VListSubheader = genericComponent()({\n  name: 'VListSubheader',\n\n  props: makeVListSubheaderProps(),\n\n  setup (props, { slots }) {\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n\n    useRender(() => {\n      const hasText = !!(slots.default || props.title)\n\n      return (\n        <props.tag\n          class={[\n            'v-list-subheader',\n            {\n              'v-list-subheader--inset': props.inset,\n              'v-list-subheader--sticky': props.sticky,\n            },\n            textColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            { textColorStyles },\n            props.style,\n          ]}\n        >\n          { hasText && (\n            <div class=\"v-list-subheader__text\">\n              { slots.default?.() ?? props.title }\n            </div>\n          )}\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VListSubheader = InstanceType<typeof VListSubheader>\n"]},"metadata":{},"sourceType":"module"}