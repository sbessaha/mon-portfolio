{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VAvatar.css\"; // Components\n\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\"; // Utilities\n\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVAvatarProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  image: String,\n  text: String,\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({\n    variant: 'flat'\n  })\n}, 'VAvatar');\nexport const VAvatar = genericComponent()({\n  name: 'VAvatar',\n  props: makeVAvatarProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      sizeClasses,\n      sizeStyles\n    } = useSize(props);\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-avatar', {\n        'v-avatar--start': props.start,\n        'v-avatar--end': props.end\n      }, themeClasses.value, borderClasses.value, colorClasses.value, densityClasses.value, roundedClasses.value, sizeClasses.value, variantClasses.value, props.class],\n      \"style\": [colorStyles.value, sizeStyles.value, props.style]\n    }, {\n      default: () => [!slots.default ? props.image ? _createVNode(VImg, {\n        \"key\": \"image\",\n        \"src\": props.image,\n        \"alt\": \"\",\n        \"cover\": true\n      }, null) : props.icon ? _createVNode(VIcon, {\n        \"key\": \"icon\",\n        \"icon\": props.icon\n      }, null) : props.text : _createVNode(VDefaultsProvider, {\n        \"key\": \"content-defaults\",\n        \"defaults\": {\n          VImg: {\n            cover: true,\n            src: props.image\n          },\n          VIcon: {\n            icon: props.icon\n          }\n        }\n      }, {\n        default: () => [slots.default()]\n      }), genOverlays(false, 'v-avatar')]\n    }));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VDefaultsProvider","VIcon","VImg","makeBorderProps","useBorder","makeComponentProps","makeDensityProps","useDensity","IconValue","makeRoundedProps","useRounded","makeSizeProps","useSize","makeTagProps","makeThemeProps","provideTheme","genOverlays","makeVariantProps","useVariant","genericComponent","propsFactory","useRender","makeVAvatarProps","start","Boolean","end","icon","image","String","text","variant","VAvatar","name","props","setup","_ref","slots","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","roundedClasses","sizeClasses","sizeStyles","value","class","style","default","_createVNode","cover","src"],"sources":["../../../src/components/VAvatar/VAvatar.tsx"],"sourcesContent":["// Styles\nimport './VAvatar.sass'\n\n// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVAvatarProps = propsFactory({\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  image: String,\n  text: String,\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeSizeProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'flat' } as const),\n}, 'VAvatar')\n\nexport const VAvatar = genericComponent()({\n  name: 'VAvatar',\n\n  props: makeVAvatarProps(),\n\n  setup (props, { slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { roundedClasses } = useRounded(props)\n    const { sizeClasses, sizeStyles } = useSize(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-avatar',\n          {\n            'v-avatar--start': props.start,\n            'v-avatar--end': props.end,\n          },\n          themeClasses.value,\n          borderClasses.value,\n          colorClasses.value,\n          densityClasses.value,\n          roundedClasses.value,\n          sizeClasses.value,\n          variantClasses.value,\n          props.class,\n        ]}\n        style={[\n          colorStyles.value,\n          sizeStyles.value,\n          props.style,\n        ]}\n      >\n        { !slots.default ? (\n          props.image\n            ? (<VImg key=\"image\" src={ props.image } alt=\"\" cover />)\n            : props.icon\n              ? (<VIcon key=\"icon\" icon={ props.icon } />)\n              : props.text\n        ) : (\n          <VDefaultsProvider\n            key=\"content-defaults\"\n            defaults={{\n              VImg: {\n                cover: true,\n                src: props.image,\n              },\n              VIcon: {\n                icon: props.icon,\n              },\n            }}\n          >\n            { slots.default() }\n          </VDefaultsProvider>\n        )}\n\n        { genOverlays(false, 'v-avatar') }\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VAvatar = InstanceType<typeof VAvatar>\n"]},"metadata":{},"sourceType":"module"}