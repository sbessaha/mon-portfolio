{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VProgressLinear.css\"; // Composables\n\nimport { useBackgroundColor, useTextColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { useIntersectionObserver } from \"../../composables/intersectionObserver.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\n\nimport { computed, Transition } from 'vue';\nimport { clamp, convertToUnit, genericComponent, IN_BROWSER, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVProgressLinearProps = propsFactory({\n  absolute: Boolean,\n  active: {\n    type: Boolean,\n    default: true\n  },\n  bgColor: String,\n  bgOpacity: [Number, String],\n  bufferValue: {\n    type: [Number, String],\n    default: 0\n  },\n  bufferColor: String,\n  bufferOpacity: [Number, String],\n  clickable: Boolean,\n  color: String,\n  height: {\n    type: [Number, String],\n    default: 4\n  },\n  indeterminate: Boolean,\n  max: {\n    type: [Number, String],\n    default: 100\n  },\n  modelValue: {\n    type: [Number, String],\n    default: 0\n  },\n  opacity: [Number, String],\n  reverse: Boolean,\n  stream: Boolean,\n  striped: Boolean,\n  roundedBar: Boolean,\n  ...makeComponentProps(),\n  ...makeLocationProps({\n    location: 'top'\n  }),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps()\n}, 'VProgressLinear');\nexport const VProgressLinear = genericComponent()({\n  name: 'VProgressLinear',\n  props: makeVProgressLinearProps(),\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const progress = useProxiedModel(props, 'modelValue');\n    const {\n      isRtl,\n      rtlClasses\n    } = useRtl();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(props, 'color');\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(computed(() => props.bgColor || props.color));\n    const {\n      backgroundColorClasses: bufferColorClasses,\n      backgroundColorStyles: bufferColorStyles\n    } = useBackgroundColor(computed(() => props.bufferColor || props.bgColor || props.color));\n    const {\n      backgroundColorClasses: barColorClasses,\n      backgroundColorStyles: barColorStyles\n    } = useBackgroundColor(props, 'color');\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      intersectionRef,\n      isIntersecting\n    } = useIntersectionObserver();\n    const max = computed(() => parseFloat(props.max));\n    const height = computed(() => parseFloat(props.height));\n    const normalizedBuffer = computed(() => clamp(parseFloat(props.bufferValue) / max.value * 100, 0, 100));\n    const normalizedValue = computed(() => clamp(parseFloat(progress.value) / max.value * 100, 0, 100));\n    const isReversed = computed(() => isRtl.value !== props.reverse);\n    const transition = computed(() => props.indeterminate ? 'fade-transition' : 'slide-x-transition');\n    const isForcedColorsModeActive = IN_BROWSER && window.matchMedia?.('(forced-colors: active)').matches;\n\n    function handleClick(e) {\n      if (!intersectionRef.value) return;\n      const {\n        left,\n        right,\n        width\n      } = intersectionRef.value.getBoundingClientRect();\n      const value = isReversed.value ? width - e.clientX + (right - width) : e.clientX - left;\n      progress.value = Math.round(value / width * max.value);\n    }\n\n    useRender(() => _createVNode(props.tag, {\n      \"ref\": intersectionRef,\n      \"class\": ['v-progress-linear', {\n        'v-progress-linear--absolute': props.absolute,\n        'v-progress-linear--active': props.active && isIntersecting.value,\n        'v-progress-linear--reverse': isReversed.value,\n        'v-progress-linear--rounded': props.rounded,\n        'v-progress-linear--rounded-bar': props.roundedBar,\n        'v-progress-linear--striped': props.striped\n      }, roundedClasses.value, themeClasses.value, rtlClasses.value, props.class],\n      \"style\": [{\n        bottom: props.location === 'bottom' ? 0 : undefined,\n        top: props.location === 'top' ? 0 : undefined,\n        height: props.active ? convertToUnit(height.value) : 0,\n        '--v-progress-linear-height': convertToUnit(height.value),\n        ...(props.absolute ? locationStyles.value : {})\n      }, props.style],\n      \"role\": \"progressbar\",\n      \"aria-hidden\": props.active ? 'false' : 'true',\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": props.max,\n      \"aria-valuenow\": props.indeterminate ? undefined : Math.min(parseFloat(progress.value), max.value),\n      \"onClick\": props.clickable && handleClick\n    }, {\n      default: () => [props.stream && _createVNode(\"div\", {\n        \"key\": \"stream\",\n        \"class\": ['v-progress-linear__stream', textColorClasses.value],\n        \"style\": { ...textColorStyles.value,\n          [isReversed.value ? 'left' : 'right']: convertToUnit(-height.value),\n          borderTop: `${convertToUnit(height.value / 2)} dotted`,\n          opacity: parseFloat(props.bufferOpacity),\n          top: `calc(50% - ${convertToUnit(height.value / 4)})`,\n          width: convertToUnit(100 - normalizedBuffer.value, '%'),\n          '--v-progress-linear-stream-to': convertToUnit(height.value * (isReversed.value ? 1 : -1))\n        }\n      }, null), _createVNode(\"div\", {\n        \"class\": ['v-progress-linear__background', !isForcedColorsModeActive ? backgroundColorClasses.value : undefined],\n        \"style\": [backgroundColorStyles.value, {\n          opacity: parseFloat(props.bgOpacity),\n          width: props.stream ? 0 : undefined\n        }]\n      }, null), _createVNode(\"div\", {\n        \"class\": ['v-progress-linear__buffer', !isForcedColorsModeActive ? bufferColorClasses.value : undefined],\n        \"style\": [bufferColorStyles.value, {\n          opacity: parseFloat(props.bufferOpacity),\n          width: convertToUnit(normalizedBuffer.value, '%')\n        }]\n      }, null), _createVNode(Transition, {\n        \"name\": transition.value\n      }, {\n        default: () => [!props.indeterminate ? _createVNode(\"div\", {\n          \"class\": ['v-progress-linear__determinate', !isForcedColorsModeActive ? barColorClasses.value : undefined],\n          \"style\": [barColorStyles.value, {\n            width: convertToUnit(normalizedValue.value, '%')\n          }]\n        }, null) : _createVNode(\"div\", {\n          \"class\": \"v-progress-linear__indeterminate\"\n        }, [['long', 'short'].map(bar => _createVNode(\"div\", {\n          \"key\": bar,\n          \"class\": ['v-progress-linear__indeterminate', bar, !isForcedColorsModeActive ? barColorClasses.value : undefined],\n          \"style\": barColorStyles.value\n        }, null))])]\n      }), slots.default && _createVNode(\"div\", {\n        \"class\": \"v-progress-linear__content\"\n      }, [slots.default({\n        value: normalizedValue.value,\n        buffer: normalizedBuffer.value\n      })])]\n    }));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"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","names":["useBackgroundColor","useTextColor","makeComponentProps","useIntersectionObserver","useRtl","makeLocationProps","useLocation","useProxiedModel","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","computed","Transition","clamp","convertToUnit","genericComponent","IN_BROWSER","propsFactory","useRender","makeVProgressLinearProps","absolute","Boolean","active","type","default","bgColor","String","bgOpacity","Number","bufferValue","bufferColor","bufferOpacity","clickable","color","height","indeterminate","max","modelValue","opacity","reverse","stream","striped","roundedBar","location","VProgressLinear","name","props","emits","value","setup","_ref","slots","progress","isRtl","rtlClasses","themeClasses","locationStyles","textColorClasses","textColorStyles","backgroundColorClasses","backgroundColorStyles","bufferColorClasses","bufferColorStyles","barColorClasses","barColorStyles","roundedClasses","intersectionRef","isIntersecting","parseFloat","normalizedBuffer","normalizedValue","isReversed","transition","isForcedColorsModeActive","window","matchMedia","matches","handleClick","e","left","right","width","getBoundingClientRect","clientX","Math","round","rounded","class","bottom","undefined","top","style","min","_createVNode","borderTop","map","bar","buffer"],"sources":["../../../src/components/VProgressLinear/VProgressLinear.tsx"],"sourcesContent":["// Styles\nimport './VProgressLinear.sass'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useRtl } from '@/composables/locale'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, Transition } from 'vue'\nimport { clamp, convertToUnit, genericComponent, IN_BROWSER, propsFactory, useRender } from '@/util'\n\ntype VProgressLinearSlots = {\n  default: { value: number, buffer: number }\n}\n\nexport const makeVProgressLinearProps = propsFactory({\n  absolute: Boolean,\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  bgColor: String,\n  bgOpacity: [Number, String],\n  bufferValue: {\n    type: [Number, String],\n    default: 0,\n  },\n  bufferColor: String,\n  bufferOpacity: [Number, String],\n  clickable: Boolean,\n  color: String,\n  height: {\n    type: [Number, String],\n    default: 4,\n  },\n  indeterminate: Boolean,\n  max: {\n    type: [Number, String],\n    default: 100,\n  },\n  modelValue: {\n    type: [Number, String],\n    default: 0,\n  },\n  opacity: [Number, String],\n  reverse: Boolean,\n  stream: Boolean,\n  striped: Boolean,\n  roundedBar: Boolean,\n\n  ...makeComponentProps(),\n  ...makeLocationProps({ location: 'top' } as const),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n}, 'VProgressLinear')\n\nexport const VProgressLinear = genericComponent<VProgressLinearSlots>()({\n  name: 'VProgressLinear',\n\n  props: makeVProgressLinearProps(),\n\n  emits: {\n    'update:modelValue': (value: number) => true,\n  },\n\n  setup (props, { slots }) {\n    const progress = useProxiedModel(props, 'modelValue')\n    const { isRtl, rtlClasses } = useRtl()\n    const { themeClasses } = provideTheme(props)\n    const { locationStyles } = useLocation(props)\n    const { textColorClasses, textColorStyles } = useTextColor(props, 'color')\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles,\n    } = useBackgroundColor(computed(() => props.bgColor || props.color))\n    const {\n      backgroundColorClasses: bufferColorClasses,\n      backgroundColorStyles: bufferColorStyles,\n    } = useBackgroundColor(computed(() => props.bufferColor || props.bgColor || props.color))\n    const {\n      backgroundColorClasses: barColorClasses,\n      backgroundColorStyles: barColorStyles,\n    } = useBackgroundColor(props, 'color')\n    const { roundedClasses } = useRounded(props)\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n\n    const max = computed(() => parseFloat(props.max))\n    const height = computed(() => parseFloat(props.height))\n    const normalizedBuffer = computed(() => clamp(parseFloat(props.bufferValue) / max.value * 100, 0, 100))\n    const normalizedValue = computed(() => clamp(parseFloat(progress.value) / max.value * 100, 0, 100))\n    const isReversed = computed(() => isRtl.value !== props.reverse)\n    const transition = computed(() => props.indeterminate ? 'fade-transition' : 'slide-x-transition')\n    const isForcedColorsModeActive = IN_BROWSER && window.matchMedia?.('(forced-colors: active)').matches\n\n    function handleClick (e: MouseEvent) {\n      if (!intersectionRef.value) return\n\n      const { left, right, width } = intersectionRef.value.getBoundingClientRect()\n      const value = isReversed.value ? (width - e.clientX) + (right - width) : e.clientX - left\n\n      progress.value = Math.round(value / width * max.value)\n    }\n\n    useRender(() => (\n      <props.tag\n        ref={ intersectionRef }\n        class={[\n          'v-progress-linear',\n          {\n            'v-progress-linear--absolute': props.absolute,\n            'v-progress-linear--active': props.active && isIntersecting.value,\n            'v-progress-linear--reverse': isReversed.value,\n            'v-progress-linear--rounded': props.rounded,\n            'v-progress-linear--rounded-bar': props.roundedBar,\n            'v-progress-linear--striped': props.striped,\n          },\n          roundedClasses.value,\n          themeClasses.value,\n          rtlClasses.value,\n          props.class,\n        ]}\n        style={[\n          {\n            bottom: props.location === 'bottom' ? 0 : undefined,\n            top: props.location === 'top' ? 0 : undefined,\n            height: props.active ? convertToUnit(height.value) : 0,\n            '--v-progress-linear-height': convertToUnit(height.value),\n            ...(props.absolute ? locationStyles.value : {}),\n          },\n          props.style,\n        ]}\n        role=\"progressbar\"\n        aria-hidden={ props.active ? 'false' : 'true' }\n        aria-valuemin=\"0\"\n        aria-valuemax={ props.max }\n        aria-valuenow={ props.indeterminate ? undefined : Math.min(parseFloat(progress.value), max.value) }\n        onClick={ props.clickable && handleClick }\n      >\n        { props.stream && (\n          <div\n            key=\"stream\"\n            class={[\n              'v-progress-linear__stream',\n              textColorClasses.value,\n            ]}\n            style={{\n              ...textColorStyles.value,\n              [isReversed.value ? 'left' : 'right']: convertToUnit(-height.value),\n              borderTop: `${convertToUnit(height.value / 2)} dotted`,\n              opacity: parseFloat(props.bufferOpacity!),\n              top: `calc(50% - ${convertToUnit(height.value / 4)})`,\n              width: convertToUnit(100 - normalizedBuffer.value, '%'),\n              '--v-progress-linear-stream-to': convertToUnit(height.value * (isReversed.value ? 1 : -1)),\n            }}\n          />\n        )}\n\n        <div\n          class={[\n            'v-progress-linear__background',\n            !isForcedColorsModeActive ? backgroundColorClasses.value : undefined,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            {\n              opacity: parseFloat(props.bgOpacity!),\n              width: props.stream ? 0 : undefined,\n            },\n          ]}\n        />\n\n        <div\n          class={[\n            'v-progress-linear__buffer',\n            !isForcedColorsModeActive ? bufferColorClasses.value : undefined,\n          ]}\n          style={[\n            bufferColorStyles.value,\n            {\n              opacity: parseFloat(props.bufferOpacity!),\n              width: convertToUnit(normalizedBuffer.value, '%'),\n            },\n          ]}\n        />\n\n        <Transition name={ transition.value }>\n          { !props.indeterminate ? (\n            <div\n              class={[\n                'v-progress-linear__determinate',\n                !isForcedColorsModeActive ? barColorClasses.value : undefined,\n              ]}\n              style={[\n                barColorStyles.value,\n                { width: convertToUnit(normalizedValue.value, '%') },\n              ]}\n            />\n          ) : (\n            <div class=\"v-progress-linear__indeterminate\">\n              {['long', 'short'].map(bar => (\n                <div\n                  key={ bar }\n                  class={[\n                    'v-progress-linear__indeterminate',\n                    bar,\n                    !isForcedColorsModeActive ? barColorClasses.value : undefined,\n                  ]}\n                  style={ barColorStyles.value }\n                />\n              ))}\n            </div>\n          )}\n        </Transition>\n\n        { slots.default && (\n          <div class=\"v-progress-linear__content\">\n            { slots.default({ value: normalizedValue.value, buffer: normalizedBuffer.value }) }\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VProgressLinear = InstanceType<typeof VProgressLinear>\n"]},"metadata":{},"sourceType":"module"}