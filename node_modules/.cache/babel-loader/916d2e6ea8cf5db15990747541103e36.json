{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\n\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVToolbarTitleProps = propsFactory({\n  text: String,\n  ...makeComponentProps(),\n  ...makeTagProps()\n}, 'VToolbarTitle');\nexport const VToolbarTitle = genericComponent()({\n  name: 'VToolbarTitle',\n  props: makeVToolbarTitleProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => {\n      const hasText = !!(slots.default || slots.text || props.text);\n      return _createVNode(props.tag, {\n        \"class\": ['v-toolbar-title', props.class],\n        \"style\": props.style\n      }, {\n        default: () => [hasText && _createVNode(\"div\", {\n          \"class\": \"v-toolbar-title__placeholder\"\n        }, [slots.text ? slots.text() : props.text, slots.default?.()])]\n      });\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;AAAA,SACSA,kBADT,QAC2B,iCAD3B;AAC2B,SAClBC,YADkB,QACN,2BADM,C,CAG3B;;AAAA,SACSC,gBADT,EAC2BC,YAD3B,EACyCC,SADzC,QACkD,sBADlD;AAGA,OAAO,MAAMC,sBAAsB,GAAGF,YAAY,CAAC;EACjDG,IAAI,EAAEC,MAD2C;EAGjD,GAAGP,kBAAkB,EAH4B;EAIjD,GAAGC,YAAY;AAJkC,CAAD,EAK/C,eAL+C,CAA3C;AAYP,OAAO,MAAMO,aAAa,GAAGN,gBAAgB,GAAuB;EAClEO,IAAI,EAAE,eAD4D;EAGlEC,KAAK,EAAEL,sBAAsB,EAHqC;;EAKlEM,KAAKA,CAAED,KAAFC,EAAOC,IAAPD,EAAoB;IAAA,IAAX;MAAEE;IAAF,IAASD,IAAE;IACvBR,SAAS,CAAC,MAAM;MACd,MAAMU,OAAO,GAAG,CAAC,EAAED,KAAK,CAACE,OAANF,IAAiBA,KAAK,CAACP,IAAvBO,IAA+BH,KAAK,CAACJ,IAAvC,CAAjB;MAEA;QAAA,SAEW,CACL,iBADK,EAELI,KAAK,CAACM,KAFD,CAFX;QAKK,SACON,KAAK,CAACO;MANlB,GAMuB;QAAAF,gBAEjBD,OAAO;UAAA;QAAA,IAEHD,KAAK,CAACP,IAANO,GAAaA,KAAK,CAACP,IAANO,EAAbA,GAA4BH,KAAK,CAACJ,IAF/B,EAIHO,KAAK,CAACE,OAANF,IAJG,EAFU;MAAA,CANvB;IAiBD,CApBQ,CAATT;IAsBA,OAAO,EAAP;EACF;;AA7BkE,CAAvB,CAAtC","names":["makeComponentProps","makeTagProps","genericComponent","propsFactory","useRender","makeVToolbarTitleProps","text","String","VToolbarTitle","name","props","setup","_ref","slots","hasText","default","class","style"],"sources":["../../../src/components/VToolbar/VToolbarTitle.tsx"],"sourcesContent":["// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVToolbarTitleProps = propsFactory({\n  text: String,\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VToolbarTitle')\n\nexport type VToolbarTitleSlots = {\n  default: never\n  text: never\n}\n\nexport const VToolbarTitle = genericComponent<VToolbarTitleSlots>()({\n  name: 'VToolbarTitle',\n\n  props: makeVToolbarTitleProps(),\n\n  setup (props, { slots }) {\n    useRender(() => {\n      const hasText = !!(slots.default || slots.text || props.text)\n\n      return (\n        <props.tag\n          class={[\n            'v-toolbar-title',\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { hasText && (\n            <div class=\"v-toolbar-title__placeholder\">\n              { slots.text ? slots.text() : props.text }\n\n              { slots.default?.() }\n            </div>\n          )}\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VToolbarTitle = InstanceType<typeof VToolbarTitle>\n"]},"metadata":{},"sourceType":"module"}