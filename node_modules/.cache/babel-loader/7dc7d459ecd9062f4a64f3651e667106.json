{"ast":null,"code":"import { mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VListGroup } from \"./VListGroup.mjs\";\nimport { VListItem } from \"./VListItem.mjs\";\nimport { VListSubheader } from \"./VListSubheader.mjs\";\nimport { VDivider } from \"../VDivider/index.mjs\"; // Utilities\n\nimport { createList } from \"./list.mjs\";\nimport { genericComponent, propsFactory } from \"../../util/index.mjs\"; // Types\n\nexport const makeVListChildrenProps = propsFactory({\n  items: Array,\n  returnObject: Boolean\n}, 'VListChildren');\nexport const VListChildren = genericComponent()({\n  name: 'VListChildren',\n  props: makeVListChildrenProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    createList();\n    return () => slots.default?.() ?? props.items?.map(_ref2 => {\n      let {\n        children,\n        props: itemProps,\n        type,\n        raw: item\n      } = _ref2;\n\n      if (type === 'divider') {\n        return slots.divider?.({\n          props: itemProps\n        }) ?? _createVNode(VDivider, itemProps, null);\n      }\n\n      if (type === 'subheader') {\n        return slots.subheader?.({\n          props: itemProps\n        }) ?? _createVNode(VListSubheader, itemProps, null);\n      }\n\n      const slotsWithItem = {\n        subtitle: slots.subtitle ? slotProps => slots.subtitle?.({ ...slotProps,\n          item\n        }) : undefined,\n        prepend: slots.prepend ? slotProps => slots.prepend?.({ ...slotProps,\n          item\n        }) : undefined,\n        append: slots.append ? slotProps => slots.append?.({ ...slotProps,\n          item\n        }) : undefined,\n        title: slots.title ? slotProps => slots.title?.({ ...slotProps,\n          item\n        }) : undefined\n      };\n      const listGroupProps = VListGroup.filterProps(itemProps);\n      return children ? _createVNode(VListGroup, _mergeProps({\n        \"value\": itemProps?.value\n      }, listGroupProps), {\n        activator: _ref3 => {\n          let {\n            props: activatorProps\n          } = _ref3;\n          const listItemProps = { ...itemProps,\n            ...activatorProps,\n            value: props.returnObject ? item : itemProps.value\n          };\n          return slots.header ? slots.header({\n            props: listItemProps\n          }) : _createVNode(VListItem, listItemProps, slotsWithItem);\n        },\n        default: () => _createVNode(VListChildren, {\n          \"items\": children,\n          \"returnObject\": props.returnObject\n        }, slots)\n      }) : slots.item ? slots.item({\n        props: itemProps\n      }) : _createVNode(VListItem, _mergeProps(itemProps, {\n        \"value\": props.returnObject ? item : itemProps.value\n      }), slotsWithItem);\n    });\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VListGroup","VListItem","VListSubheader","VDivider","createList","genericComponent","propsFactory","makeVListChildrenProps","items","Array","returnObject","Boolean","VListChildren","name","props","setup","_ref","slots","default","map","_ref2","children","itemProps","type","raw","item","divider","_createVNode","subheader","slotsWithItem","subtitle","slotProps","undefined","prepend","append","title","listGroupProps","filterProps","value","activator","_ref3","activatorProps","listItemProps","header"],"sources":["../../../src/components/VList/VListChildren.tsx"],"sourcesContent":["// Components\nimport { VListGroup } from './VListGroup'\nimport { VListItem } from './VListItem'\nimport { VListSubheader } from './VListSubheader'\nimport { VDivider } from '../VDivider'\n\n// Utilities\nimport { createList } from './list'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { InternalListItem } from './VList'\nimport type { VListItemSlots } from './VListItem'\nimport type { GenericProps } from '@/util'\n\nexport type VListChildrenSlots<T> = {\n  [K in keyof Omit<VListItemSlots, 'default'>]: VListItemSlots[K] & { item: T }\n} & {\n  default: never\n  item: { props: InternalListItem['props'] }\n  divider: { props: InternalListItem['props'] }\n  subheader: { props: InternalListItem['props'] }\n  header: { props: InternalListItem['props'] }\n}\n\nexport const makeVListChildrenProps = propsFactory({\n  items: Array as PropType<readonly InternalListItem[]>,\n  returnObject: Boolean,\n}, 'VListChildren')\n\nexport const VListChildren = genericComponent<new <T extends InternalListItem>(\n  props: {\n    items?: readonly T[]\n    returnObject?: boolean\n  },\n  slots: VListChildrenSlots<T>\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VListChildren',\n\n  props: makeVListChildrenProps(),\n\n  setup (props, { slots }) {\n    createList()\n\n    return () => slots.default?.() ?? props.items?.map(({ children, props: itemProps, type, raw: item }) => {\n      if (type === 'divider') {\n        return slots.divider?.({ props: itemProps }) ?? (\n          <VDivider { ...itemProps } />\n        )\n      }\n\n      if (type === 'subheader') {\n        return slots.subheader?.({ props: itemProps }) ?? (\n          <VListSubheader { ...itemProps } />\n        )\n      }\n\n      const slotsWithItem = {\n        subtitle: slots.subtitle ? (slotProps: any) => slots.subtitle?.({ ...slotProps, item }) : undefined,\n        prepend: slots.prepend ? (slotProps: any) => slots.prepend?.({ ...slotProps, item }) : undefined,\n        append: slots.append ? (slotProps: any) => slots.append?.({ ...slotProps, item }) : undefined,\n        title: slots.title ? (slotProps: any) => slots.title?.({ ...slotProps, item }) : undefined,\n      }\n\n      const listGroupProps = VListGroup.filterProps(itemProps)\n\n      return children ? (\n        <VListGroup\n          value={ itemProps?.value }\n          { ...listGroupProps }\n        >\n          {{\n            activator: ({ props: activatorProps }) => {\n              const listItemProps = {\n                ...itemProps,\n                ...activatorProps,\n                value: props.returnObject ? item : itemProps.value,\n              }\n\n              return slots.header\n                ? slots.header({ props: listItemProps })\n                : (\n                  <VListItem { ...listItemProps } v-slots={ slotsWithItem } />\n                )\n            },\n            default: () => (\n              <VListChildren\n                items={ children }\n                returnObject={ props.returnObject }\n                v-slots={ slots }\n              />\n            ),\n          }}\n        </VListGroup>\n      ) : (\n        slots.item ? slots.item({ props: itemProps }) : (\n          <VListItem\n            { ...itemProps }\n            value={ props.returnObject ? item : itemProps.value }\n            v-slots={ slotsWithItem }\n          />\n        )\n      )\n    })\n  },\n})\n"]},"metadata":{},"sourceType":"module"}