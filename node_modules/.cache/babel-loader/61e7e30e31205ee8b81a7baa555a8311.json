{"ast":null,"code":"import { withDirectives as _withDirectives, mergeProps as _mergeProps, resolveDirective as _resolveDirective, Fragment as _Fragment, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VImg.css\"; // Components\n\nimport { makeVResponsiveProps, VResponsive } from \"../VResponsive/VResponsive.mjs\"; // Composables\n\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\"; // Directives\n\nimport intersect from \"../../directives/intersect/index.mjs\"; // Utilities\n\nimport { computed, nextTick, onBeforeMount, onBeforeUnmount, ref, shallowRef, toRef, vShow, watch, withDirectives } from 'vue';\nimport { convertToUnit, genericComponent, getCurrentInstance, propsFactory, SUPPORTS_INTERSECTION, useRender } from \"../../util/index.mjs\"; // Types\n// not intended for public use, this is passed in by vuetify-loader\n\nexport const makeVImgProps = propsFactory({\n  absolute: Boolean,\n  alt: String,\n  cover: Boolean,\n  color: String,\n  draggable: {\n    type: [Boolean, String],\n    default: undefined\n  },\n  eager: Boolean,\n  gradient: String,\n  lazySrc: String,\n  options: {\n    type: Object,\n    // For more information on types, navigate to:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n    default: () => ({\n      root: undefined,\n      rootMargin: undefined,\n      threshold: undefined\n    })\n  },\n  sizes: String,\n  src: {\n    type: [String, Object],\n    default: ''\n  },\n  crossorigin: String,\n  referrerpolicy: String,\n  srcset: String,\n  position: String,\n  ...makeVResponsiveProps(),\n  ...makeComponentProps(),\n  ...makeRoundedProps(),\n  ...makeTransitionProps()\n}, 'VImg');\nexport const VImg = genericComponent()({\n  name: 'VImg',\n  directives: {\n    intersect\n  },\n  props: makeVImgProps(),\n  emits: {\n    loadstart: value => true,\n    load: value => true,\n    error: value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const vm = getCurrentInstance('VImg');\n    const currentSrc = shallowRef(''); // Set from srcset\n\n    const image = ref();\n    const state = shallowRef(props.eager ? 'loading' : 'idle');\n    const naturalWidth = shallowRef();\n    const naturalHeight = shallowRef();\n    const normalisedSrc = computed(() => {\n      return props.src && typeof props.src === 'object' ? {\n        src: props.src.src,\n        srcset: props.srcset || props.src.srcset,\n        lazySrc: props.lazySrc || props.src.lazySrc,\n        aspect: Number(props.aspectRatio || props.src.aspect || 0)\n      } : {\n        src: props.src,\n        srcset: props.srcset,\n        lazySrc: props.lazySrc,\n        aspect: Number(props.aspectRatio || 0)\n      };\n    });\n    const aspectRatio = computed(() => {\n      return normalisedSrc.value.aspect || naturalWidth.value / naturalHeight.value || 0;\n    });\n    watch(() => props.src, () => {\n      init(state.value !== 'idle');\n    });\n    watch(aspectRatio, (val, oldVal) => {\n      if (!val && oldVal && image.value) {\n        pollForSize(image.value);\n      }\n    }); // TODO: getSrc when window width changes\n\n    onBeforeMount(() => init());\n\n    function init(isIntersecting) {\n      if (props.eager && isIntersecting) return;\n      if (SUPPORTS_INTERSECTION && !isIntersecting && !props.eager) return;\n      state.value = 'loading';\n\n      if (normalisedSrc.value.lazySrc) {\n        const lazyImg = new Image();\n        lazyImg.src = normalisedSrc.value.lazySrc;\n        pollForSize(lazyImg, null);\n      }\n\n      if (!normalisedSrc.value.src) return;\n      nextTick(() => {\n        emit('loadstart', image.value?.currentSrc || normalisedSrc.value.src);\n        setTimeout(() => {\n          if (vm.isUnmounted) return;\n\n          if (image.value?.complete) {\n            if (!image.value.naturalWidth) {\n              onError();\n            }\n\n            if (state.value === 'error') return;\n            if (!aspectRatio.value) pollForSize(image.value, null);\n            if (state.value === 'loading') onLoad();\n          } else {\n            if (!aspectRatio.value) pollForSize(image.value);\n            getSrc();\n          }\n        });\n      });\n    }\n\n    function onLoad() {\n      if (vm.isUnmounted) return;\n      getSrc();\n      pollForSize(image.value);\n      state.value = 'loaded';\n      emit('load', image.value?.currentSrc || normalisedSrc.value.src);\n    }\n\n    function onError() {\n      if (vm.isUnmounted) return;\n      state.value = 'error';\n      emit('error', image.value?.currentSrc || normalisedSrc.value.src);\n    }\n\n    function getSrc() {\n      const img = image.value;\n      if (img) currentSrc.value = img.currentSrc || img.src;\n    }\n\n    let timer = -1;\n    onBeforeUnmount(() => {\n      clearTimeout(timer);\n    });\n\n    function pollForSize(img) {\n      let timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n      const poll = () => {\n        clearTimeout(timer);\n        if (vm.isUnmounted) return;\n        const {\n          naturalHeight: imgHeight,\n          naturalWidth: imgWidth\n        } = img;\n\n        if (imgHeight || imgWidth) {\n          naturalWidth.value = imgWidth;\n          naturalHeight.value = imgHeight;\n        } else if (!img.complete && state.value === 'loading' && timeout != null) {\n          timer = window.setTimeout(poll, timeout);\n        } else if (img.currentSrc.endsWith('.svg') || img.currentSrc.startsWith('data:image/svg+xml')) {\n          naturalWidth.value = 1;\n          naturalHeight.value = 1;\n        }\n      };\n\n      poll();\n    }\n\n    const containClasses = computed(() => ({\n      'v-img__img--cover': props.cover,\n      'v-img__img--contain': !props.cover\n    }));\n\n    const __image = () => {\n      if (!normalisedSrc.value.src || state.value === 'idle') return null;\n\n      const img = _createVNode(\"img\", {\n        \"class\": ['v-img__img', containClasses.value],\n        \"style\": {\n          objectPosition: props.position\n        },\n        \"crossorigin\": props.crossorigin,\n        \"src\": normalisedSrc.value.src,\n        \"srcset\": normalisedSrc.value.srcset,\n        \"alt\": props.alt,\n        \"referrerpolicy\": props.referrerpolicy,\n        \"draggable\": props.draggable,\n        \"sizes\": props.sizes,\n        \"ref\": image,\n        \"onLoad\": onLoad,\n        \"onError\": onError\n      }, null);\n\n      const sources = slots.sources?.();\n      return _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [withDirectives(sources ? _createVNode(\"picture\", {\n          \"class\": \"v-img__picture\"\n        }, [sources, img]) : img, [[vShow, state.value === 'loaded']])]\n      });\n    };\n\n    const __preloadImage = () => _createVNode(MaybeTransition, {\n      \"transition\": props.transition\n    }, {\n      default: () => [normalisedSrc.value.lazySrc && state.value !== 'loaded' && _createVNode(\"img\", {\n        \"class\": ['v-img__img', 'v-img__img--preload', containClasses.value],\n        \"style\": {\n          objectPosition: props.position\n        },\n        \"crossorigin\": props.crossorigin,\n        \"src\": normalisedSrc.value.lazySrc,\n        \"alt\": props.alt,\n        \"referrerpolicy\": props.referrerpolicy,\n        \"draggable\": props.draggable\n      }, null)]\n    });\n\n    const __placeholder = () => {\n      if (!slots.placeholder) return null;\n      return _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [(state.value === 'loading' || state.value === 'error' && !slots.error) && _createVNode(\"div\", {\n          \"class\": \"v-img__placeholder\"\n        }, [slots.placeholder()])]\n      });\n    };\n\n    const __error = () => {\n      if (!slots.error) return null;\n      return _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [state.value === 'error' && _createVNode(\"div\", {\n          \"class\": \"v-img__error\"\n        }, [slots.error()])]\n      });\n    };\n\n    const __gradient = () => {\n      if (!props.gradient) return null;\n      return _createVNode(\"div\", {\n        \"class\": \"v-img__gradient\",\n        \"style\": {\n          backgroundImage: `linear-gradient(${props.gradient})`\n        }\n      }, null);\n    };\n\n    const isBooted = shallowRef(false);\n    {\n      const stop = watch(aspectRatio, val => {\n        if (val) {\n          // Doesn't work with nextTick, idk why\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              isBooted.value = true;\n            });\n          });\n          stop();\n        }\n      });\n    }\n    useRender(() => {\n      const responsiveProps = VResponsive.filterProps(props);\n      return _withDirectives(_createVNode(VResponsive, _mergeProps({\n        \"class\": ['v-img', {\n          'v-img--absolute': props.absolute,\n          'v-img--booting': !isBooted.value\n        }, backgroundColorClasses.value, roundedClasses.value, props.class],\n        \"style\": [{\n          width: convertToUnit(props.width === 'auto' ? naturalWidth.value : props.width)\n        }, backgroundColorStyles.value, props.style]\n      }, responsiveProps, {\n        \"aspectRatio\": aspectRatio.value,\n        \"aria-label\": props.alt,\n        \"role\": props.alt ? 'img' : undefined\n      }), {\n        additional: () => _createVNode(_Fragment, null, [_createVNode(__image, null, null), _createVNode(__preloadImage, null, null), _createVNode(__gradient, null, null), _createVNode(__placeholder, null, null), _createVNode(__error, null, null)]),\n        default: slots.default\n      }), [[_resolveDirective(\"intersect\"), {\n        handler: init,\n        options: props.options\n      }, null, {\n        once: true\n      }]]);\n    });\n    return {\n      currentSrc,\n      image,\n      state,\n      naturalWidth,\n      naturalHeight\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["makeVResponsiveProps","VResponsive","useBackgroundColor","makeComponentProps","makeRoundedProps","useRounded","makeTransitionProps","MaybeTransition","intersect","computed","nextTick","onBeforeMount","onBeforeUnmount","ref","shallowRef","toRef","vShow","watch","withDirectives","convertToUnit","genericComponent","getCurrentInstance","propsFactory","SUPPORTS_INTERSECTION","useRender","makeVImgProps","absolute","Boolean","alt","String","cover","color","draggable","type","default","undefined","eager","gradient","lazySrc","options","Object","root","rootMargin","threshold","sizes","src","crossorigin","referrerpolicy","srcset","position","VImg","name","directives","props","emits","loadstart","value","load","error","setup","_ref","emit","slots","backgroundColorClasses","backgroundColorStyles","roundedClasses","vm","currentSrc","image","state","naturalWidth","naturalHeight","normalisedSrc","aspect","Number","aspectRatio","init","val","oldVal","pollForSize","isIntersecting","lazyImg","Image","setTimeout","isUnmounted","complete","onError","onLoad","getSrc","img","timer","clearTimeout","timeout","poll","imgHeight","imgWidth","window","endsWith","startsWith","containClasses","__image","objectPosition","sources","transition","__preloadImage","_createVNode","__placeholder","placeholder","__error","__gradient","backgroundImage","isBooted","stop","requestAnimationFrame","responsiveProps","filterProps","class","width","style","additional","handler","once"],"sources":["../../../src/components/VImg/VImg.tsx"],"sourcesContent":["// Styles\nimport './VImg.sass'\n\n// Components\nimport { makeVResponsiveProps, VResponsive } from '@/components/VResponsive/VResponsive'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Directives\nimport intersect from '@/directives/intersect'\n\n// Utilities\nimport {\n  computed,\n  nextTick,\n  onBeforeMount,\n  onBeforeUnmount,\n  ref,\n  shallowRef,\n  toRef,\n  vShow,\n  watch,\n  withDirectives,\n} from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  getCurrentInstance,\n  propsFactory,\n  SUPPORTS_INTERSECTION,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src?: string\n  srcset?: string\n  lazySrc?: string\n  aspect: number\n}\n\nexport type VImgSlots = {\n  default: never\n  placeholder: never\n  error: never\n  sources: never\n}\n\nexport const makeVImgProps = propsFactory({\n  absolute: Boolean,\n  alt: String,\n  cover: Boolean,\n  color: String,\n  draggable: {\n    type: [Boolean, String] as PropType<boolean | 'true' | 'false'>,\n    default: undefined,\n  },\n  eager: Boolean,\n  gradient: String,\n  lazySrc: String,\n  options: {\n    type: Object as PropType<IntersectionObserverInit>,\n    // For more information on types, navigate to:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n    default: () => ({\n      root: undefined,\n      rootMargin: undefined,\n      threshold: undefined,\n    }),\n  },\n  sizes: String,\n  src: {\n    type: [String, Object] as PropType<string | srcObject>,\n    default: '',\n  },\n  crossorigin: String as PropType<'' | 'anonymous' | 'use-credentials'>,\n  referrerpolicy: String as PropType<\n    | 'no-referrer'\n    | 'no-referrer-when-downgrade'\n    | 'origin'\n    | 'origin-when-cross-origin'\n    | 'same-origin'\n    | 'strict-origin'\n    | 'strict-origin-when-cross-origin'\n    | 'unsafe-url'\n  >,\n  srcset: String,\n  position: String,\n\n  ...makeVResponsiveProps(),\n  ...makeComponentProps(),\n  ...makeRoundedProps(),\n  ...makeTransitionProps(),\n}, 'VImg')\n\nexport const VImg = genericComponent<VImgSlots>()({\n  name: 'VImg',\n\n  directives: { intersect },\n\n  props: makeVImgProps(),\n\n  emits: {\n    loadstart: (value: string | undefined) => true,\n    load: (value: string | undefined) => true,\n    error: (value: string | undefined) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { roundedClasses } = useRounded(props)\n    const vm = getCurrentInstance('VImg')\n\n    const currentSrc = shallowRef('') // Set from srcset\n    const image = ref<HTMLImageElement>()\n    const state = shallowRef<'idle' | 'loading' | 'loaded' | 'error'>(props.eager ? 'loading' : 'idle')\n    const naturalWidth = shallowRef<number>()\n    const naturalHeight = shallowRef<number>()\n\n    const normalisedSrc = computed<srcObject>(() => {\n      return props.src && typeof props.src === 'object'\n        ? {\n          src: props.src.src,\n          srcset: props.srcset || props.src.srcset,\n          lazySrc: props.lazySrc || props.src.lazySrc,\n          aspect: Number(props.aspectRatio || props.src.aspect || 0),\n        } : {\n          src: props.src,\n          srcset: props.srcset,\n          lazySrc: props.lazySrc,\n          aspect: Number(props.aspectRatio || 0),\n        }\n    })\n    const aspectRatio = computed(() => {\n      return normalisedSrc.value.aspect || naturalWidth.value! / naturalHeight.value! || 0\n    })\n\n    watch(() => props.src, () => {\n      init(state.value !== 'idle')\n    })\n    watch(aspectRatio, (val, oldVal) => {\n      if (!val && oldVal && image.value) {\n        pollForSize(image.value)\n      }\n    })\n\n    // TODO: getSrc when window width changes\n\n    onBeforeMount(() => init())\n\n    function init (isIntersecting?: boolean) {\n      if (props.eager && isIntersecting) return\n      if (\n        SUPPORTS_INTERSECTION &&\n        !isIntersecting &&\n        !props.eager\n      ) return\n\n      state.value = 'loading'\n\n      if (normalisedSrc.value.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = normalisedSrc.value.lazySrc\n        pollForSize(lazyImg, null)\n      }\n\n      if (!normalisedSrc.value.src) return\n\n      nextTick(() => {\n        emit('loadstart', image.value?.currentSrc || normalisedSrc.value.src)\n\n        setTimeout(() => {\n          if (vm.isUnmounted) return\n\n          if (image.value?.complete) {\n            if (!image.value.naturalWidth) {\n              onError()\n            }\n\n            if (state.value === 'error') return\n\n            if (!aspectRatio.value) pollForSize(image.value, null)\n            if (state.value === 'loading') onLoad()\n          } else {\n            if (!aspectRatio.value) pollForSize(image.value!)\n            getSrc()\n          }\n        })\n      })\n    }\n\n    function onLoad () {\n      if (vm.isUnmounted) return\n\n      getSrc()\n      pollForSize(image.value!)\n      state.value = 'loaded'\n      emit('load', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function onError () {\n      if (vm.isUnmounted) return\n\n      state.value = 'error'\n      emit('error', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function getSrc () {\n      const img = image.value\n      if (img) currentSrc.value = img.currentSrc || img.src\n    }\n\n    let timer = -1\n\n    onBeforeUnmount(() => {\n      clearTimeout(timer)\n    })\n\n    function pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        clearTimeout(timer)\n        if (vm.isUnmounted) return\n\n        const { naturalHeight: imgHeight, naturalWidth: imgWidth } = img\n\n        if (imgHeight || imgWidth) {\n          naturalWidth.value = imgWidth\n          naturalHeight.value = imgHeight\n        } else if (!img.complete && state.value === 'loading' && timeout != null) {\n          timer = window.setTimeout(poll, timeout)\n        } else if (img.currentSrc.endsWith('.svg') || img.currentSrc.startsWith('data:image/svg+xml')) {\n          naturalWidth.value = 1\n          naturalHeight.value = 1\n        }\n      }\n\n      poll()\n    }\n\n    const containClasses = computed(() => ({\n      'v-img__img--cover': props.cover,\n      'v-img__img--contain': !props.cover,\n    }))\n\n    const __image = () => {\n      if (!normalisedSrc.value.src || state.value === 'idle') return null\n\n      const img = (\n        <img\n          class={['v-img__img', containClasses.value]}\n          style={{ objectPosition: props.position }}\n          crossorigin={ props.crossorigin }\n          src={ normalisedSrc.value.src }\n          srcset={ normalisedSrc.value.srcset }\n          alt={ props.alt }\n          referrerpolicy={ props.referrerpolicy }\n          draggable={ props.draggable }\n          sizes={ props.sizes }\n          ref={ image }\n          onLoad={ onLoad }\n          onError={ onError }\n        />\n      )\n\n      const sources = slots.sources?.()\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          {\n            withDirectives(\n              sources\n                ? <picture class=\"v-img__picture\">{ sources }{ img }</picture>\n                : img,\n              [[vShow, state.value === 'loaded']]\n            )\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __preloadImage = () => (\n      <MaybeTransition transition={ props.transition }>\n        { normalisedSrc.value.lazySrc && state.value !== 'loaded' && (\n          <img\n            class={['v-img__img', 'v-img__img--preload', containClasses.value]}\n            style={{ objectPosition: props.position }}\n            crossorigin={ props.crossorigin }\n            src={ normalisedSrc.value.lazySrc }\n            alt={ props.alt }\n            referrerpolicy={ props.referrerpolicy }\n            draggable={ props.draggable }\n          />\n        )}\n      </MaybeTransition>\n    )\n\n    const __placeholder = () => {\n      if (!slots.placeholder) return null\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { (state.value === 'loading' || (state.value === 'error' && !slots.error)) &&\n          <div class=\"v-img__placeholder\">{ slots.placeholder() }</div>\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __error = () => {\n      if (!slots.error) return null\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { state.value === 'error' &&\n            <div class=\"v-img__error\">{ slots.error() }</div>\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __gradient = () => {\n      if (!props.gradient) return null\n\n      return <div class=\"v-img__gradient\" style={{ backgroundImage: `linear-gradient(${props.gradient})` }} />\n    }\n\n    const isBooted = shallowRef(false)\n    {\n      const stop = watch(aspectRatio, val => {\n        if (val) {\n          // Doesn't work with nextTick, idk why\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              isBooted.value = true\n            })\n          })\n          stop()\n        }\n      })\n    }\n\n    useRender(() => {\n      const responsiveProps = VResponsive.filterProps(props)\n      return (\n        <VResponsive\n          class={[\n            'v-img',\n            {\n              'v-img--absolute': props.absolute,\n              'v-img--booting': !isBooted.value,\n            },\n            backgroundColorClasses.value,\n            roundedClasses.value,\n            props.class,\n          ]}\n          style={[\n            { width: convertToUnit(props.width === 'auto' ? naturalWidth.value : props.width) },\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n          { ...responsiveProps }\n          aspectRatio={ aspectRatio.value }\n          aria-label={ props.alt }\n          role={ props.alt ? 'img' : undefined }\n          v-intersect={[{\n            handler: init,\n            options: props.options,\n          }, null, ['once']]}\n        >{{\n          additional: () => (\n            <>\n              <__image />\n              <__preloadImage />\n              <__gradient />\n              <__placeholder />\n              <__error />\n            </>\n          ),\n          default: slots.default,\n        }}</VResponsive>\n      )\n    })\n\n    return {\n      currentSrc,\n      image,\n      state,\n      naturalWidth,\n      naturalHeight,\n    }\n  },\n})\n\nexport type VImg = InstanceType<typeof VImg>\n"]},"metadata":{},"sourceType":"module"}