{"ast":null,"code":"// Utilities\nimport { computed } from 'vue';\nimport { convertToUnit, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\n\nexport const makeDimensionProps = propsFactory({\n  height: [Number, String],\n  maxHeight: [Number, String],\n  maxWidth: [Number, String],\n  minHeight: [Number, String],\n  minWidth: [Number, String],\n  width: [Number, String]\n}, 'dimension');\nexport function useDimension(props) {\n  const dimensionStyles = computed(() => {\n    const styles = {};\n    const height = convertToUnit(props.height);\n    const maxHeight = convertToUnit(props.maxHeight);\n    const maxWidth = convertToUnit(props.maxWidth);\n    const minHeight = convertToUnit(props.minHeight);\n    const minWidth = convertToUnit(props.minWidth);\n    const width = convertToUnit(props.width);\n    if (height != null) styles.height = height;\n    if (maxHeight != null) styles.maxHeight = maxHeight;\n    if (maxWidth != null) styles.maxWidth = maxWidth;\n    if (minHeight != null) styles.minHeight = minHeight;\n    if (minWidth != null) styles.minWidth = minWidth;\n    if (width != null) styles.width = width;\n    return styles;\n  });\n  return {\n    dimensionStyles\n  };\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,QAAT,QAAyB,KAAzB;AAA8B,SACrBC,aADqB,EACNC,YADM,QACM,mBADN,C,CAG9B;AAUA;;AACA,OAAO,MAAMC,kBAAkB,GAAGD,YAAY,CAAC;EAC7CE,MAAM,EAAE,CAACC,MAAD,EAASC,MAAT,CADqC;EAE7CC,SAAS,EAAE,CAACF,MAAD,EAASC,MAAT,CAFkC;EAG7CE,QAAQ,EAAE,CAACH,MAAD,EAASC,MAAT,CAHmC;EAI7CG,SAAS,EAAE,CAACJ,MAAD,EAASC,MAAT,CAJkC;EAK7CI,QAAQ,EAAE,CAACL,MAAD,EAASC,MAAT,CALmC;EAM7CK,KAAK,EAAE,CAACN,MAAD,EAASC,MAAT;AANsC,CAAD,EAO3C,WAP2C,CAAvC;AASP,OAAO,SAASM,YAAT,CAAuBC,KAAvB,EAA8C;EACnD,MAAMC,eAAe,GAAGd,QAAQ,CAAC,MAAM;IACrC,MAAMe,MAA2B,GAAG,EAApC;IAEA,MAAMX,MAAM,GAAGH,aAAa,CAACY,KAAK,CAACT,MAAP,CAA5B;IACA,MAAMG,SAAS,GAAGN,aAAa,CAACY,KAAK,CAACN,SAAP,CAA/B;IACA,MAAMC,QAAQ,GAAGP,aAAa,CAACY,KAAK,CAACL,QAAP,CAA9B;IACA,MAAMC,SAAS,GAAGR,aAAa,CAACY,KAAK,CAACJ,SAAP,CAA/B;IACA,MAAMC,QAAQ,GAAGT,aAAa,CAACY,KAAK,CAACH,QAAP,CAA9B;IACA,MAAMC,KAAK,GAAGV,aAAa,CAACY,KAAK,CAACF,KAAP,CAA3B;IAEA,IAAIP,MAAM,IAAI,IAAd,EAAoBW,MAAM,CAACX,MAAPW,GAAgBX,MAAhBW;IACpB,IAAIR,SAAS,IAAI,IAAjB,EAAuBQ,MAAM,CAACR,SAAPQ,GAAmBR,SAAnBQ;IACvB,IAAIP,QAAQ,IAAI,IAAhB,EAAsBO,MAAM,CAACP,QAAPO,GAAkBP,QAAlBO;IACtB,IAAIN,SAAS,IAAI,IAAjB,EAAuBM,MAAM,CAACN,SAAPM,GAAmBN,SAAnBM;IACvB,IAAIL,QAAQ,IAAI,IAAhB,EAAsBK,MAAM,CAACL,QAAPK,GAAkBL,QAAlBK;IACtB,IAAIJ,KAAK,IAAI,IAAb,EAAmBI,MAAM,CAACJ,KAAPI,GAAeJ,KAAfI;IAEnB,OAAOA,MAAP;EACD,CAlB+B,CAAhC;EAoBA,OAAO;IAAED;EAAF,CAAP;AACF","names":["computed","convertToUnit","propsFactory","makeDimensionProps","height","Number","String","maxHeight","maxWidth","minHeight","minWidth","width","useDimension","props","dimensionStyles","styles"],"sources":["../../src/composables/dimensions.ts"],"sourcesContent":["// Utilities\nimport { computed } from 'vue'\nimport { convertToUnit, propsFactory } from '@/util'\n\n// Types\nexport interface DimensionProps {\n  height?: number | string\n  maxHeight?: number | string\n  maxWidth?: number | string\n  minHeight?: number | string\n  minWidth?: number | string\n  width?: number | string\n}\n\n// Composables\nexport const makeDimensionProps = propsFactory({\n  height: [Number, String],\n  maxHeight: [Number, String],\n  maxWidth: [Number, String],\n  minHeight: [Number, String],\n  minWidth: [Number, String],\n  width: [Number, String],\n}, 'dimension')\n\nexport function useDimension (props: DimensionProps) {\n  const dimensionStyles = computed(() => {\n    const styles: Record<string, any> = {}\n\n    const height = convertToUnit(props.height)\n    const maxHeight = convertToUnit(props.maxHeight)\n    const maxWidth = convertToUnit(props.maxWidth)\n    const minHeight = convertToUnit(props.minHeight)\n    const minWidth = convertToUnit(props.minWidth)\n    const width = convertToUnit(props.width)\n\n    if (height != null) styles.height = height\n    if (maxHeight != null) styles.maxHeight = maxHeight\n    if (maxWidth != null) styles.maxWidth = maxWidth\n    if (minHeight != null) styles.minHeight = minHeight\n    if (minWidth != null) styles.minWidth = minWidth\n    if (width != null) styles.width = width\n\n    return styles\n  })\n\n  return { dimensionStyles }\n}\n"]},"metadata":{},"sourceType":"module"}