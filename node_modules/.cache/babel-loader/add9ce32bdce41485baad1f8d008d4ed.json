{"ast":null,"code":"import { withDirectives as _withDirectives, mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n/* eslint-disable complexity */\n// Styles\n\nimport \"./VCard.css\"; // Components\n\nimport { VCardActions } from \"./VCardActions.mjs\";\nimport { VCardItem } from \"./VCardItem.mjs\";\nimport { VCardText } from \"./VCardText.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VImg } from \"../VImg/index.mjs\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { LoaderSlot, makeLoaderProps, useLoader } from \"../../composables/loader.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\n\nimport { computed } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\n\nexport const makeVCardProps = propsFactory({\n  appendAvatar: String,\n  appendIcon: IconValue,\n  disabled: Boolean,\n  flat: Boolean,\n  hover: Boolean,\n  image: String,\n  link: {\n    type: Boolean,\n    default: undefined\n  },\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object],\n    default: true\n  },\n  subtitle: [String, Number],\n  text: [String, Number],\n  title: [String, Number],\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeLoaderProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({\n    variant: 'elevated'\n  })\n}, 'VCard');\nexport const VCard = genericComponent()({\n  name: 'VCard',\n  directives: {\n    Ripple\n  },\n  props: makeVCardProps(),\n\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      densityClasses\n    } = useDensity(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      loaderClasses\n    } = useLoader(props);\n    const {\n      locationStyles\n    } = useLocation(props);\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const link = useLink(props, attrs);\n    const isLink = computed(() => props.link !== false && link.isLink.value);\n    const isClickable = computed(() => !props.disabled && props.link !== false && (props.link || link.isClickable.value));\n    useRender(() => {\n      const Tag = isLink.value ? 'a' : props.tag;\n      const hasTitle = !!(slots.title || props.title != null);\n      const hasSubtitle = !!(slots.subtitle || props.subtitle != null);\n      const hasHeader = hasTitle || hasSubtitle;\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon);\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon);\n      const hasImage = !!(slots.image || props.image);\n      const hasCardItem = hasHeader || hasPrepend || hasAppend;\n      const hasText = !!(slots.text || props.text != null);\n      return _withDirectives(_createVNode(Tag, _mergeProps({\n        \"class\": ['v-card', {\n          'v-card--disabled': props.disabled,\n          'v-card--flat': props.flat,\n          'v-card--hover': props.hover && !(props.disabled || props.flat),\n          'v-card--link': isClickable.value\n        }, themeClasses.value, borderClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, loaderClasses.value, positionClasses.value, roundedClasses.value, variantClasses.value, props.class],\n        \"style\": [colorStyles.value, dimensionStyles.value, locationStyles.value, props.style],\n        \"onClick\": isClickable.value && link.navigate,\n        \"tabindex\": props.disabled ? -1 : undefined\n      }, link.linkProps), {\n        default: () => [hasImage && _createVNode(\"div\", {\n          \"key\": \"image\",\n          \"class\": \"v-card__image\"\n        }, [!slots.image ? _createVNode(VImg, {\n          \"key\": \"image-img\",\n          \"cover\": true,\n          \"src\": props.image\n        }, null) : _createVNode(VDefaultsProvider, {\n          \"key\": \"image-defaults\",\n          \"disabled\": !props.image,\n          \"defaults\": {\n            VImg: {\n              cover: true,\n              src: props.image\n            }\n          }\n        }, slots.image)]), _createVNode(LoaderSlot, {\n          \"name\": \"v-card\",\n          \"active\": !!props.loading,\n          \"color\": typeof props.loading === 'boolean' ? undefined : props.loading\n        }, {\n          default: slots.loader\n        }), hasCardItem && _createVNode(VCardItem, {\n          \"key\": \"item\",\n          \"prependAvatar\": props.prependAvatar,\n          \"prependIcon\": props.prependIcon,\n          \"title\": props.title,\n          \"subtitle\": props.subtitle,\n          \"appendAvatar\": props.appendAvatar,\n          \"appendIcon\": props.appendIcon\n        }, {\n          default: slots.item,\n          prepend: slots.prepend,\n          title: slots.title,\n          subtitle: slots.subtitle,\n          append: slots.append\n        }), hasText && _createVNode(VCardText, {\n          \"key\": \"text\"\n        }, {\n          default: () => [slots.text?.() ?? props.text]\n        }), slots.default?.(), slots.actions && _createVNode(VCardActions, null, {\n          default: slots.actions\n        }), genOverlays(isClickable.value, 'v-card')]\n      }), [[_resolveDirective(\"ripple\"), isClickable.value && props.ripple]]);\n    });\n    return {};\n  }\n\n});","map":{"version":3,"mappings":";AAAA;AAEA;;AACA,qB,CAEA;;AAAA,SACSA,YADT,QACqB,oBADrB;AACqB,SACZC,SADY,QACH,iBADG;AACH,SACTC,SADS,QACA,iBADA;AACA,SACTC,iBADS,QACQ,gCADR;AACQ,SACjBC,IADiB,QACb,mBADa,C,CAG1B;;AAAA,SACSC,eADT,EAC0BC,SAD1B,QACmC,8BADnC;AACmC,SAC1BC,kBAD0B,QACR,iCADQ;AACR,SAClBC,gBADkB,EACAC,UADA,QACU,+BADV;AACU,SAC5BC,kBAD4B,EACRC,YADQ,QACI,kCADJ;AACI,SAChCC,kBADgC,EACZC,YADY,QACA,iCADA;AACA,SAChCC,SADgC,QACvB,6BADuB;AACvB,SACTC,UADS,EACGC,eADH,EACoBC,SADpB,QAC6B,8BAD7B;AAC6B,SACtCC,iBADsC,EACnBC,WADmB,QACR,gCADQ;AACR,SAC9BC,iBAD8B,EACXC,WADW,QACA,gCADA;AACA,SAC9BC,gBAD8B,EACZC,UADY,QACF,+BADE;AACF,SAC5BC,eAD4B,EACXC,OADW,QACJ,8BADI;AACJ,SACxBC,YADwB,QACZ,2BADY;AACZ,SACZC,cADY,EACIC,YADJ,QACgB,6BADhB;AACgB,SAC5BC,WAD4B,EACfC,gBADe,EACGC,UADH,QACa,+BADb,C,CAGrC;;AAAA,SACSC,MADT,QACe,mCADf,C,CAGA;;AACA,SAASC,QAAT,QAAyB,KAAzB;AAA8B,SACrBC,gBADqB,EACHC,YADG,EACWC,SADX,QACoB,sBADpB,C,CAG9B;;AAMA,OAAO,MAAMC,cAAc,GAAGF,YAAY,CAAC;EACzCG,YAAY,EAAEC,MAD2B;EAEzCC,UAAU,EAAE1B,SAF6B;EAGzC2B,QAAQ,EAAEC,OAH+B;EAIzCC,IAAI,EAAED,OAJmC;EAKzCE,KAAK,EAAEF,OALkC;EAMzCG,KAAK,EAAEN,MANkC;EAOzCO,IAAI,EAAE;IACJC,IAAI,EAAEL,OADF;IAEJM,OAAO,EAAEC;EAFL,CAPmC;EAWzCC,aAAa,EAAEX,MAX0B;EAYzCY,WAAW,EAAErC,SAZ4B;EAazCsC,MAAM,EAAE;IA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","names":["VCardActions","VCardItem","VCardText","VDefaultsProvider","VImg","makeBorderProps","useBorder","makeComponentProps","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","IconValue","LoaderSlot","makeLoaderProps","useLoader","makeLocationProps","useLocation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeRouterProps","useLink","makeTagProps","makeThemeProps","provideTheme","genOverlays","makeVariantProps","useVariant","Ripple","computed","genericComponent","propsFactory","useRender","makeVCardProps","appendAvatar","String","appendIcon","disabled","Boolean","flat","hover","image","link","type","default","undefined","prependAvatar","prependIcon","ripple","Object","subtitle","Number","text","title","variant","VCard","name","directives","props","setup","_ref","attrs","slots","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","loaderClasses","locationStyles","positionClasses","roundedClasses","isLink","value","isClickable","Tag","tag","hasTitle","hasSubtitle","hasHeader","hasAppend","append","hasPrepend","prepend","hasImage","hasCardItem","hasText","class","style","navigate","linkProps","_createVNode","cover","src","loading","loader","item","actions"],"sources":["../../../src/components/VCard/VCard.tsx"],"sourcesContent":["/* eslint-disable complexity */\n\n// Styles\nimport './VCard.sass'\n\n// Components\nimport { VCardActions } from './VCardActions'\nimport { VCardItem } from './VCardItem'\nimport { VCardText } from './VCardText'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { IconValue } from '@/composables/icons'\nimport { LoaderSlot, makeLoaderProps, useLoader } from '@/composables/loader'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VCardItemSlots } from './VCardItem'\nimport type { LoaderSlotProps } from '@/composables/loader'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\n\nexport const makeVCardProps = propsFactory({\n  appendAvatar: String,\n  appendIcon: IconValue,\n  disabled: Boolean,\n  flat: Boolean,\n  hover: Boolean,\n  image: String,\n  link: {\n    type: Boolean,\n    default: undefined,\n  },\n  prependAvatar: String,\n  prependIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  subtitle: [String, Number],\n  text: [String, Number],\n  title: [String, Number],\n\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeDimensionProps(),\n  ...makeElevationProps(),\n  ...makeLoaderProps(),\n  ...makeLocationProps(),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeRouterProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeVariantProps({ variant: 'elevated' } as const),\n}, 'VCard')\n\nexport type VCardSlots = VCardItemSlots & {\n  default: never\n  actions: never\n  text: never\n  loader: LoaderSlotProps\n  image: never\n  item: never\n}\n\nexport const VCard = genericComponent<VCardSlots>()({\n  name: 'VCard',\n\n  directives: { Ripple },\n\n  props: makeVCardProps(),\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { borderClasses } = useBorder(props)\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { loaderClasses } = useLoader(props)\n    const { locationStyles } = useLocation(props)\n    const { positionClasses } = usePosition(props)\n    const { roundedClasses } = useRounded(props)\n    const link = useLink(props, attrs)\n\n    const isLink = computed(() => props.link !== false && link.isLink.value)\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (props.link || link.isClickable.value)\n    )\n\n    useRender(() => {\n      const Tag = isLink.value ? 'a' : props.tag\n      const hasTitle = !!(slots.title || props.title != null)\n      const hasSubtitle = !!(slots.subtitle || props.subtitle != null)\n      const hasHeader = hasTitle || hasSubtitle\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon)\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon)\n      const hasImage = !!(slots.image || props.image)\n      const hasCardItem = hasHeader || hasPrepend || hasAppend\n      const hasText = !!(slots.text || props.text != null)\n\n      return (\n        <Tag\n          class={[\n            'v-card',\n            {\n              'v-card--disabled': props.disabled,\n              'v-card--flat': props.flat,\n              'v-card--hover': props.hover && !(props.disabled || props.flat),\n              'v-card--link': isClickable.value,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            loaderClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n            props.class,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n            locationStyles.value,\n            props.style,\n          ]}\n          onClick={ isClickable.value && link.navigate }\n          v-ripple={ isClickable.value && props.ripple }\n          tabindex={ props.disabled ? -1 : undefined }\n          { ...link.linkProps }\n        >\n          { hasImage && (\n            <div key=\"image\" class=\"v-card__image\">\n              { !slots.image ? (\n                <VImg\n                  key=\"image-img\"\n                  cover\n                  src={ props.image }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"image-defaults\"\n                  disabled={ !props.image }\n                  defaults={{\n                    VImg: {\n                      cover: true,\n                      src: props.image,\n                    },\n                  }}\n                  v-slots:default={ slots.image }\n                />\n              )}\n            </div>\n          )}\n\n          <LoaderSlot\n            name=\"v-card\"\n            active={ !!props.loading }\n            color={ typeof props.loading === 'boolean' ? undefined : props.loading }\n            v-slots={{ default: slots.loader }}\n          />\n\n          { hasCardItem && (\n            <VCardItem\n              key=\"item\"\n              prependAvatar={ props.prependAvatar }\n              prependIcon={ props.prependIcon }\n              title={ props.title }\n              subtitle={ props.subtitle }\n              appendAvatar={ props.appendAvatar }\n              appendIcon={ props.appendIcon }\n            >\n              {{\n                default: slots.item,\n                prepend: slots.prepend,\n                title: slots.title,\n                subtitle: slots.subtitle,\n                append: slots.append,\n              }}\n            </VCardItem>\n          )}\n\n          { hasText && (\n            <VCardText key=\"text\">\n              { slots.text?.() ?? props.text }\n            </VCardText>\n          )}\n\n          { slots.default?.() }\n\n          { slots.actions && (\n            <VCardActions v-slots={{ default: slots.actions }} />\n          )}\n\n          { genOverlays(isClickable.value, 'v-card') }\n        </Tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCard = InstanceType<typeof VCard>\n"]},"metadata":{},"sourceType":"module"}