{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VResponsive.css\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\"; // Utilities\n\nimport { computed } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport function useAspectStyles(props) {\n  return {\n    aspectStyles: computed(() => {\n      const ratio = Number(props.aspectRatio);\n      return ratio ? {\n        paddingBottom: String(1 / ratio * 100) + '%'\n      } : undefined;\n    })\n  };\n}\nexport const makeVResponsiveProps = propsFactory({\n  aspectRatio: [String, Number],\n  contentClass: null,\n  inline: Boolean,\n  ...makeComponentProps(),\n  ...makeDimensionProps()\n}, 'VResponsive');\nexport const VResponsive = genericComponent()({\n  name: 'VResponsive',\n  props: makeVResponsiveProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      aspectStyles\n    } = useAspectStyles(props);\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    useRender(() => _createVNode(\"div\", {\n      \"class\": ['v-responsive', {\n        'v-responsive--inline': props.inline\n      }, props.class],\n      \"style\": [dimensionStyles.value, props.style]\n    }, [_createVNode(\"div\", {\n      \"class\": \"v-responsive__sizer\",\n      \"style\": aspectStyles.value\n    }, null), slots.additional?.(), slots.default && _createVNode(\"div\", {\n      \"class\": ['v-responsive__content', props.contentClass]\n    }, [slots.default()])]));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;AACA,2B,CAEA;;AAAA,SACSA,kBADT,QAC2B,iCAD3B;AAC2B,SAClBC,kBADkB,EACEC,YADF,QACc,kCADd,C,CAG3B;;AACA,SAASC,QAAT,QAAyB,KAAzB;AAA8B,SACrBC,gBADqB,EACHC,YADG,EACWC,SADX,QACoB,sBADpB;AAQ9B,OAAO,SAASC,eAAT,CAA0BC,KAA1B,EAAoE;EACzE,OAAO;IACLC,YAAY,EAAEN,QAAQ,CAAC,MAAM;MAC3B,MAAMO,KAAK,GAAGC,MAAM,CAACH,KAAK,CAACI,WAAP,CAApB;MAEA,OAAOF,KAAK,GACR;QAAEG,aAAa,EAAEC,MAAM,CAAC,IAAIJ,KAAJ,GAAY,GAAb,CAANI,GAA0B;MAA3C,CADQ,GAERC,SAFJ;IAGD,CANqB;EADjB,CAAP;AASF;AAEA,OAAO,MAAMC,oBAAoB,GAAGX,YAAY,CAAC;EAC/CO,WAAW,EAAE,CAACE,MAAD,EAASH,MAAT,CADkC;EAE/CM,YAAY,EAAE,IAFiC;EAG/CC,MAAM,EAAEC,OAHuC;EAK/C,GAAGnB,kBAAkB,EAL0B;EAM/C,GAAGC,kBAAkB;AAN0B,CAAD,EAO7C,aAP6C,CAAzC;AASP,OAAO,MAAMmB,WAAW,GAAGhB,gBAAgB,GAAqB;EAC9DiB,IAAI,EAAE,aADwD;EAG9Db,KAAK,EAAEQ,oBAAoB,EAHmC;;EAK9DM,KAAKA,CAAEd,KAAFc,EAAOC,IAAPD,EAAoB;IAAA,IAAX;MAAEE;IAAF,IAASD,IAAE;IACvB,MAAM;MAAEd;IAAF,IAAmBF,eAAe,CAACC,KAAD,CAAxC;IACA,MAAM;MAAEiB;IAAF,IAAsBvB,YAAY,CAACM,KAAD,CAAxC;IAEAF,SAAS,CAAC;MAAA,SAEC,CACL,cADK,EAEL;QAAE,wBAAwBE,KAAK,CAACU;MAAhC,CAFK,EAGLV,KAAK,CAACkB,KAHD,CAFD;MAML,SACM,CACLD,eAAe,CAACE,KADX,EAELnB,KAAK,CAACoB,KAFD;IAPD,GAUL;MAAA;MAAA,SAEwCnB,YAAY,CAACkB;IAFrD,GAE0D,IAF1D,GAICH,KAAK,CAACK,UAANL,IAJD,EAMCA,KAAK,CAACM,OAANN,IAAaO;MAAA,SACD,CAAC,uBAAD,EAA0BvB,KAAK,CAACS,YAAhC;IADC,GAC4C,CAAIO,KAAK,CAACM,OAANN,EAAJ,CAD5C,CANd,CAVK,CAAD,CAATlB;IAsBA,OAAO,EAAP;EACF;;AAhC8D,CAArB,CAApC","names":["makeComponentProps","makeDimensionProps","useDimension","computed","genericComponent","propsFactory","useRender","useAspectStyles","props","aspectStyles","ratio","Number","aspectRatio","paddingBottom","String","undefined","makeVResponsiveProps","contentClass","inline","Boolean","VResponsive","name","setup","_ref","slots","dimensionStyles","class","value","style","additional","default","_createVNode"],"sources":["../../../src/components/VResponsive/VResponsive.tsx"],"sourcesContent":["// Styles\nimport './VResponsive.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport type VResponsiveSlots = {\n  default: never\n  additional: never\n}\n\nexport function useAspectStyles (props: { aspectRatio?: string | number }) {\n  return {\n    aspectStyles: computed(() => {\n      const ratio = Number(props.aspectRatio)\n\n      return ratio\n        ? { paddingBottom: String(1 / ratio * 100) + '%' }\n        : undefined\n    }),\n  }\n}\n\nexport const makeVResponsiveProps = propsFactory({\n  aspectRatio: [String, Number],\n  contentClass: null,\n  inline: Boolean,\n\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n}, 'VResponsive')\n\nexport const VResponsive = genericComponent<VResponsiveSlots>()({\n  name: 'VResponsive',\n\n  props: makeVResponsiveProps(),\n\n  setup (props, { slots }) {\n    const { aspectStyles } = useAspectStyles(props)\n    const { dimensionStyles } = useDimension(props)\n\n    useRender(() => (\n      <div\n        class={[\n          'v-responsive',\n          { 'v-responsive--inline': props.inline },\n          props.class,\n        ]}\n        style={[\n          dimensionStyles.value,\n          props.style,\n        ]}\n      >\n        <div class=\"v-responsive__sizer\" style={ aspectStyles.value } />\n\n        { slots.additional?.() }\n\n        { slots.default && (\n          <div class={['v-responsive__content', props.contentClass]}>{ slots.default() }</div>\n        )}\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VResponsive = InstanceType<typeof VResponsive>\n"]},"metadata":{},"sourceType":"module"}