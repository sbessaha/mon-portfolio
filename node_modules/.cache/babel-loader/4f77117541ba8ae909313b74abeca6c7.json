{"ast":null,"code":"import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\"; // Composables\n\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\n\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVCardTextProps = propsFactory({\n  opacity: [Number, String],\n  ...makeComponentProps(),\n  ...makeTagProps()\n}, 'VCardText');\nexport const VCardText = genericComponent()({\n  name: 'VCardText',\n  props: makeVCardTextProps(),\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-card-text', props.class],\n      \"style\": [{\n        '--v-card-text-opacity': props.opacity\n      }, props.style]\n    }, slots));\n    return {};\n  }\n\n});","map":{"version":3,"mappings":"0FAAA;;AAAA,SACSA,kBADT,QAC2B,iCAD3B;AAC2B,SAClBC,YADkB,QACN,2BADM,C,CAG3B;;AAAA,SACSC,gBADT,EAC2BC,YAD3B,EACyCC,SADzC,QACkD,sBADlD;AAGA,OAAO,MAAMC,kBAAkB,GAAGF,YAAY,CAAC;EAC7CG,OAAO,EAAE,CAACC,MAAD,EAASC,MAAT,CADoC;EAG7C,GAAGR,kBAAkB,EAHwB;EAI7C,GAAGC,YAAY;AAJ8B,CAAD,EAK3C,WAL2C,CAAvC;AAOP,OAAO,MAAMQ,SAAS,GAAGP,gBAAgB,GAAG;EAC1CQ,IAAI,EAAE,WADoC;EAG1CC,KAAK,EAAEN,kBAAkB,EAHiB;;EAK1CO,KAAKA,CAAED,KAAFC,EAAOC,IAAPD,EAAoB;IAAA,IAAX;MAAEE;IAAF,IAASD,IAAE;IACvBT,SAAS,CAAC;MAAA,SAEC,CACL,aADK,EAELO,KAAK,CAACI,KAFD,CAFD;MAKL,SACM,CACL;QAAE,yBAAyBJ,KAAK,CAACL;MAAjC,CADK,EAELK,KAAK,CAACK,KAFD;IAND,GAUIF,KAVJ,CAAD,CAATV;IAcA,OAAO,EAAP;EACF;;AArB0C,CAAH,CAAlC","names":["makeComponentProps","makeTagProps","genericComponent","propsFactory","useRender","makeVCardTextProps","opacity","Number","String","VCardText","name","props","setup","_ref","slots","class","style"],"sources":["../../../src/components/VCard/VCardText.tsx"],"sourcesContent":["// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVCardTextProps = propsFactory({\n  opacity: [Number, String],\n\n  ...makeComponentProps(),\n  ...makeTagProps(),\n}, 'VCardText')\n\nexport const VCardText = genericComponent()({\n  name: 'VCardText',\n\n  props: makeVCardTextProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-card-text',\n          props.class,\n        ]}\n        style={[\n          { '--v-card-text-opacity': props.opacity },\n          props.style,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VCardText = InstanceType<typeof VCardText>\n"]},"metadata":{},"sourceType":"module"}